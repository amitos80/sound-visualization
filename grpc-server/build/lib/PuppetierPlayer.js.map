{"version":3,"sources":["../../src/lib/PuppetierPlayer.js"],"names":["PuppetierPlayerService","puppeteer","require","_","randomNumber","min","max","Math","floor","random","noiseLevel","inputSamples","average","meanBy","v","length","power","reduce","acc","val","pow","sqrt","findTone","sampleRate","tone","sin500Hz","map","i","sin","PI","cos500Hz","cos","amplitudeSin","amplitudeCos","prototype","init","browser","launch","headless","slowMo","page","newPage","setViewport","width","height","goto","visualArea","$","box","boundingBox","pointBit","params","intensity","console","log","mouse","down","mouseDown","mouseUp","join","up","move","x"],"mappings":"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","file":"PuppetierPlayer.js","sourcesContent":["const puppeteer = require('puppeteer')\n// const Stream = require('stream')\n// const Buffer = require('buffer')\nconst _ = require('lodash')\n\nconst randomNumber = (min, max) => Math.floor(Math.random() * (max - min) + min)\n\nfunction noiseLevel(inputSamples) {\n  let average = _.meanBy(inputSamples, (v) => v) / inputSamples.length\n  const power = inputSamples.reduce(\n    (acc, val) => acc + Math.pow(val - average, 2),\n  )\n  return Math.sqrt(power)\n}\n\nfunction findTone(inputSamples) {\n  const sampleRate = 44100 // Or whatever in use (Hz)\n  const tone = 500 // tone to detect in Hz\n  const sin500Hz = inputSamples.map(\n    (val, i) =>\n      Math.sin(((2 * Math.PI * tone) / sampleRate) * i) /\n      Math.sqrt(inputSamples.length),\n  )\n  const cos500Hz = inputSamples.map(\n    (val, i) =>\n      Math.cos(((2 * Math.PI * tone) / sampleRate) * i) /\n      Math.sqrt(inputSamples.length),\n  )\n\n  const amplitudeSin = _.meanBy(inputSamples, (val, i) => val * sin500Hz[i])\n  const amplitudeCos = _.meanBy(inputSamples, (val, i) => val * cos500Hz[i])\n\n  return Math.sqrt(amplitudeSin * amplitudeSin + amplitudeCos * amplitudeCos)\n}\n\nexport function PuppetierPlayerService() {}\n\nPuppetierPlayerService.prototype.init = async function init() {\n  this.browser = await puppeteer.launch({headless: false, slowMo: 0})\n  this.page = await this.browser.newPage()\n  await this.page.setViewport({width: 1440, height: 800})\n  await this.page.goto('http://localhost:3000')\n\n  this.visualArea = await this.page.$('.anim')\n  if (this.visualArea) {\n    this.box = await this.visualArea.boundingBox()\n  }\n}\n\nPuppetierPlayerService.prototype.pointBit = function pointBit(params = {intensity: 220}) {\n  console.log('PuppetierPlayerService.prototype.pointBit -> ');\n\n  const { intensity } = params\n  if (intensity > 34) {\n    this.page.mouse.down()\n    for (let i = 0; i < Math.floor(intensity / 4); i++) {\n      this.mouseDown(intensity)\n    }\n    this.mouseUp()\n  }\n}\n\nPuppetierPlayerService.prototype.join = function join(params = {intensity: 220}) {\n  const { intensity } = params\n  if (intensity > 34) {\n    this.page.mouse.down()\n    for (let i = 0; i < Math.floor(intensity / 4); i++) {\n      this.mouseDown(intensity)\n    }\n    this.mouseUp()\n  }\n}\n\nPuppetierPlayerService.prototype.mouseUp = async function mouseUp() {\n  await this.page.mouse.up()\n}\n\nPuppetierPlayerService.prototype.mouseDown = async function mouseDown(intensity) {\n  await this.page.mouse.move(\n      randomNumber(this.box.x, 500) + randomNumber(2, intensity),\n      randomNumber(this.box.x, 500) + randomNumber(2, 300),\n  )\n}\n\n\n\nexport default PuppetierPlayerService\n\n// new Promise(async (resolve, reject) => {\n//   const player = new Pupetierplayer()\n//   await player.init()\n// })\n//   .then((r) => console.log('r -> ', r))\n//   .catch((e) => console.log('e -> ', e))\n"]}