{"version":3,"sources":["../src/react-fluid-animation.js"],"names":["ReactFluidAnimation","ref","_container","_canvas","event","preventDefault","_animation","onMouseDown","nativeEvent","onMouseMove","onMouseUp","onTouchStart","onTouchMove","onTouchEnd","width","clientWidth","height","clientHeight","resize","update","_tickRaf","_tick","props","_onResize","config","defaultConfig","window","addEventListener","_reset","removeEventListener","raf","cancel","content","animationRef","style","size","rest","overflow","_containerRef","_canvasRef","_onMouseDown","_onMouseMove","_onMouseUp","_onTouchStart","_onTouchMove","_onTouchEnd","FluidAnimation","canvas","Component","PropTypes","string","object","func","shape","number","monitorWidth","monitorHeight"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\n\nimport raf from 'raf'\nimport sizeMe from 'react-sizeme'\n\nimport FluidAnimation, { defaultConfig } from './fluid-animation'\n\nclass ReactFluidAnimation extends Component {\n  static propTypes = {\n    content: PropTypes.string,\n    config: PropTypes.object,\n    style: PropTypes.object,\n    animationRef: PropTypes.func,\n    size: PropTypes.shape({\n      width: PropTypes.number,\n      height: PropTypes.number\n    })\n  }\n\n  static defaultProps = {\n    config: defaultConfig,\n    style: { }\n  }\n\n  componentWillReceiveProps(props) {\n    this._onResize()\n\n    if (props.config) {\n      this._animation.config = {\n        ...props.config,\n        defaultConfig\n      }\n    }\n  }\n\n  componentDidMount() {\n    window.addEventListener('resize', this._onResize)\n    this._reset(this.props)\n    this._tick()\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener('resize', this._onResize)\n    if (this._tickRaf) {\n      raf.cancel(this._tickRaf)\n      this._tickRaf = null\n    }\n  }\n\n  render() {\n    const {\n      content,\n      config,\n      animationRef,\n      style,\n      size,\n      ...rest\n    } = this.props\n\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          overflow: 'hidden',\n          ...style\n        }}\n        {...rest}\n        ref={this._containerRef}\n      >\n        <canvas\n          ref={this._canvasRef}\n          onMouseDown={this._onMouseDown}\n          onMouseMove={this._onMouseMove}\n          onMouseUp={this._onMouseUp}\n          onTouchStart={this._onTouchStart}\n          onTouchMove={this._onTouchMove}\n          onTouchEnd={this._onTouchEnd}\n          style={{\n            width: '100%',\n            height: '100%'\n          }}\n        />\n      </div>\n    )\n  }\n\n  _containerRef = (ref) => {\n    this._container = ref\n  }\n\n  _canvasRef = (ref) => {\n    this._canvas = ref\n  }\n\n  _onMouseDown = (event) => {\n    event.preventDefault()\n    this._animation.onMouseDown(event.nativeEvent)\n  }\n\n  _onMouseMove = (event) => {\n    event.preventDefault()\n    this._animation.onMouseMove(event.nativeEvent)\n  }\n\n  _onMouseUp = (event) => {\n    event.preventDefault()\n    this._animation.onMouseUp(event.nativeEvent)\n  }\n\n  _onTouchStart = (event) => {\n    this._animation.onTouchStart(event.nativeEvent)\n  }\n\n  _onTouchMove = (event) => {\n    this._animation.onTouchMove(event.nativeEvent)\n  }\n\n  _onTouchEnd = (event) => {\n    this._animation.onTouchEnd(event.nativeEvent)\n  }\n\n  _onResize = () => {\n    this._canvas.width = this._container.clientWidth\n    this._canvas.height = this._container.clientHeight\n\n    if (this._animation) {\n      this._animation.resize()\n    }\n  }\n\n  _tick = () => {\n    if (this._animation) {\n      this._animation.update()\n    }\n\n    this._tickRaf = raf(this._tick)\n  }\n\n  _reset(props) {\n    const {\n      animationRef,\n      content,\n      config\n    } = props\n\n    this._onResize()\n\n    this._animation = new FluidAnimation({\n      canvas: this._canvas,\n      content,\n      config\n    })\n\n    if (animationRef) {\n      animationRef(this._animation)\n      // this._animation.addRandomSplats(parseInt(Math.random() * 20) + 5)\n    }\n  }\n}\n\nexport default sizeMe({ monitorWidth: true, monitorHeight: true })(ReactFluidAnimation)\n"],"file":"react-fluid-animation.js"}