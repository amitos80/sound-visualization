{"version":3,"sources":["../src/get-gl-context.js"],"names":["getWebGLContext","canvas","params","alpha","depth","stencil","antialias","gl","getContext","isWebGL2","halfFloat","supportLinearFiltering","getExtension","clearColor","halfFloatTexType","HALF_FLOAT","HALF_FLOAT_OES","formatRGBA","formatRG","formatR","getSupportedFormat","RGBA16F","RGBA","RG16F","RG","R16F","RED","ext","internalFormat","format","type","supportRenderTextureFormat","texture","createTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","fbo","createFramebuffer","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","status","checkFramebufferStatus","FRAMEBUFFER_COMPLETE"],"mappings":"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","sourcesContent":["export default function getWebGLContext (canvas) {\n  const params = {\n    alpha: false,\n    depth: false,\n    stencil: false,\n    antialias: false\n  }\n\n  let gl = canvas.getContext('webgl2', params)\n  const isWebGL2 = !!gl\n  if (!isWebGL2) {\n    gl =\n      canvas.getContext('webgl', params) ||\n      canvas.getContext('experimental-webgl', params)\n  }\n\n  let halfFloat\n  let supportLinearFiltering\n  if (isWebGL2) {\n    gl.getExtension('EXT_color_buffer_float')\n    supportLinearFiltering = gl.getExtension('OES_texture_float_linear')\n  } else {\n    halfFloat = gl.getExtension('OES_texture_half_float')\n    supportLinearFiltering = gl.getExtension('OES_texture_half_float_linear')\n  }\n\n  gl.clearColor(0.0, 0.0, 0.0, 1.0)\n\n  const halfFloatTexType = isWebGL2 ? gl.HALF_FLOAT : halfFloat.HALF_FLOAT_OES\n  let formatRGBA\n  let formatRG\n  let formatR\n\n  if (isWebGL2) {\n    formatRGBA = getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, halfFloatTexType)\n    formatRG = getSupportedFormat(gl, gl.RG16F, gl.RG, halfFloatTexType)\n    formatR = getSupportedFormat(gl, gl.R16F, gl.RED, halfFloatTexType)\n  } else {\n    formatRGBA = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType)\n    formatRG = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType)\n    formatR = getSupportedFormat(gl, gl.RGBA, gl.RGBA, halfFloatTexType)\n  }\n\n  return {\n    gl,\n    ext: {\n      formatRGBA,\n      formatRG,\n      formatR,\n      halfFloatTexType,\n      supportLinearFiltering\n    }\n  }\n}\n\nfunction getSupportedFormat (gl, internalFormat, format, type) {\n  if (!supportRenderTextureFormat(gl, internalFormat, format, type)) {\n    switch (internalFormat) {\n      case gl.R16F:\n        return getSupportedFormat(gl, gl.RG16F, gl.RG, type)\n      case gl.RG16F:\n        return getSupportedFormat(gl, gl.RGBA16F, gl.RGBA, type)\n      default:\n        return null\n    }\n  }\n\n  return {\n    internalFormat,\n    format\n  }\n}\n\nfunction supportRenderTextureFormat (gl, internalFormat, format, type) {\n  const texture = gl.createTexture()\n  gl.bindTexture(gl.TEXTURE_2D, texture)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE)\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE)\n  gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 4, 4, 0, format, type, null)\n\n  let fbo = gl.createFramebuffer()\n  gl.bindFramebuffer(gl.FRAMEBUFFER, fbo)\n  gl.framebufferTexture2D(\n    gl.FRAMEBUFFER,\n    gl.COLOR_ATTACHMENT0,\n    gl.TEXTURE_2D,\n    texture,\n    0\n  )\n\n  const status = gl.checkFramebufferStatus(gl.FRAMEBUFFER)\n  if (status !== gl.FRAMEBUFFER_COMPLETE) return false\n  return true\n}\n"],"file":"get-gl-context.js"}