{"version":3,"sources":["../src/gl-program.js"],"names":["compileShader","gl","type","source","shader","createShader","shaderSource","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","GLProgram","vertexSource","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","uniforms","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","uniformCount","ACTIVE_UNIFORMS","i","uniformName","getActiveUniform","name","getUniformLocation","useProgram"],"mappings":";;;;;;;;;;;;;AAAA,SAASA,aAAT,CAAwBC,EAAxB,EAA4BC,IAA5B,EAAkCC,MAAlC,EAA0C;AACxC,MAAMC,MAAM,GAAGH,EAAE,CAACI,YAAH,CAAgBH,IAAhB,CAAf;AACAD,EAAAA,EAAE,CAACK,YAAH,CAAgBF,MAAhB,EAAwBD,MAAxB;AACAF,EAAAA,EAAE,CAACD,aAAH,CAAiBI,MAAjB;;AAEA,MAAI,CAACH,EAAE,CAACM,kBAAH,CAAsBH,MAAtB,EAA8BH,EAAE,CAACO,cAAjC,CAAL,EAAuD;AACrD,UAAMP,EAAE,CAACQ,gBAAH,CAAoBL,MAApB,CAAN;AACD;;AAED,SAAOA,MAAP;AACD;;IAEoBM,S;;;AACnB,qBAAYT,EAAZ,EAAgBU,YAAhB,EAA8BC,cAA9B,EAA8C;AAAA;;AAC5C,QAAMC,YAAY,GAAGb,aAAa,CAACC,EAAD,EAAKA,EAAE,CAACa,aAAR,EAAuBH,YAAvB,CAAlC;AACA,QAAMI,cAAc,GAAGf,aAAa,CAACC,EAAD,EAAKA,EAAE,CAACe,eAAR,EAAyBJ,cAAzB,CAApC;AAEA,SAAKK,QAAL,GAAgB,EAAhB;AACA,SAAKC,OAAL,GAAejB,EAAE,CAACkB,aAAH,EAAf;AACA,SAAKlB,EAAL,GAAUA,EAAV;AAEAA,IAAAA,EAAE,CAACmB,YAAH,CAAgB,KAAKF,OAArB,EAA8BL,YAA9B;AACAZ,IAAAA,EAAE,CAACmB,YAAH,CAAgB,KAAKF,OAArB,EAA8BH,cAA9B;AACAd,IAAAA,EAAE,CAACoB,WAAH,CAAe,KAAKH,OAApB;;AAEA,QAAI,CAACjB,EAAE,CAACqB,mBAAH,CAAuB,KAAKJ,OAA5B,EAAqCjB,EAAE,CAACsB,WAAxC,CAAL,EAA2D;AACzD,YAAMtB,EAAE,CAACuB,iBAAH,CAAqB,KAAKN,OAA1B,CAAN;AACD;;AAED,QAAMO,YAAY,GAAGxB,EAAE,CAACqB,mBAAH,CACnB,KAAKJ,OADc,EAEnBjB,EAAE,CAACyB,eAFgB,CAArB;;AAKA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,YAApB,EAAkCE,CAAC,EAAnC,EAAuC;AACrC,UAAMC,WAAW,GAAG3B,EAAE,CAAC4B,gBAAH,CAAoB,KAAKX,OAAzB,EAAkCS,CAAlC,EAAqCG,IAAzD;AACA,WAAKb,QAAL,CAAcW,WAAd,IAA6B3B,EAAE,CAAC8B,kBAAH,CAC3B,KAAKb,OADsB,EAE3BU,WAF2B,CAA7B;AAID;AACF;;;;2BAEM;AACL,WAAK3B,EAAL,CAAQ+B,UAAR,CAAmB,KAAKd,OAAxB;AACD","sourcesContent":["function compileShader (gl, type, source) {\n  const shader = gl.createShader(type)\n  gl.shaderSource(shader, source)\n  gl.compileShader(shader)\n\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw gl.getShaderInfoLog(shader)\n  }\n\n  return shader\n}\n\nexport default class GLProgram {\n  constructor(gl, vertexSource, fragmentSource) {\n    const vertexShader = compileShader(gl, gl.VERTEX_SHADER, vertexSource)\n    const fragmentShader = compileShader(gl, gl.FRAGMENT_SHADER, fragmentSource)\n\n    this.uniforms = {}\n    this.program = gl.createProgram()\n    this.gl = gl\n\n    gl.attachShader(this.program, vertexShader)\n    gl.attachShader(this.program, fragmentShader)\n    gl.linkProgram(this.program)\n\n    if (!gl.getProgramParameter(this.program, gl.LINK_STATUS)) {\n      throw gl.getProgramInfoLog(this.program)\n    }\n\n    const uniformCount = gl.getProgramParameter(\n      this.program,\n      gl.ACTIVE_UNIFORMS\n    )\n\n    for (let i = 0; i < uniformCount; i++) {\n      const uniformName = gl.getActiveUniform(this.program, i).name\n      this.uniforms[uniformName] = gl.getUniformLocation(\n        this.program,\n        uniformName\n      )\n    }\n  }\n\n  bind() {\n    this.gl.useProgram(this.program)\n  }\n}\n"],"file":"gl-program.js"}