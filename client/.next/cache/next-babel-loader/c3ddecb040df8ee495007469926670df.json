{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport { PlayerServiceClient } from '../../../proto/player_grpc_web_pb';\nimport { ClientMessage } from '../../../proto/player_pb'; //import { ProtoGrpcType } from '../../../proto/player.proto';\n// const host = '0.0.0.0:50051';\n// const packageDefinition = protoLoader.loadSync('./proto/example.proto');\n// const proto = grpc.loadPackageDefinition(\n//     packageDefinition\n// ) as any as unknown;\n// //as unknown as ProtoGrpcType;\n// // @ts-ignore\n// const client = new proto.player.PlayerService(\n//     host,\n//     grpc.credentials.createInsecure()\n// );\n\nvar PlayerServiceClass = /*#__PURE__*/function () {\n  function PlayerServiceClass() {\n    _classCallCheck(this, PlayerServiceClass);\n\n    _defineProperty(this, \"client\", void 0);\n\n    if (false) return;\n    this.client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n\n  _createClass(PlayerServiceClass, [{\n    key: \"join\",\n    value: function join() {\n      var clientMessage = new ClientMessage();\n      clientMessage.setA('542');\n      clientMessage.setB('234');\n      clientMessage.setC('1252');\n      clientMessage.setD('2345');\n      var stream = this.client.join(clientMessage);\n      stream.on('data', function (message) {\n        console.log(\"client received$ \".concat(message));\n      });\n    }\n  }, {\n    key: \"send\",\n    value: function send(params) {\n      var clientMessage = new ClientMessage();\n      clientMessage.setA(params.getA());\n      clientMessage.setB(params.getB());\n      clientMessage.setC(params.getC());\n      clientMessage.setD(params.getD());\n      this.client.send(clientMessage, undefined, function (err, response) {\n        if (err) {\n          console.error(err);\n        } else {\n          console.log('response', response.toObject());\n          document.getElementById('message').value = '';\n        }\n      });\n    }\n  }]);\n\n  return PlayerServiceClass;\n}();\n\nexport var PlayerService = new PlayerServiceClass();","map":{"version":3,"sources":["/Users/amit/Projects/sound-visualization/client/lib/grpc-client/services/player.ts"],"names":["PlayerServiceClient","ClientMessage","PlayerServiceClass","client","window","location","hostname","clientMessage","setA","setB","setC","setD","stream","join","on","message","console","log","params","getA","getB","getC","getD","send","undefined","err","response","error","toObject","document","getElementById","value","PlayerService"],"mappings":";;;AACA,SAASA,mBAAT,QAAoC,mCAApC;AACA,SAASC,aAAT,QAA6C,0BAA7C,C,CACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;IAEMC,kB;AAGF,gCAAc;AAAA;;AAAA;;AACV,eAAmC;AACnC,SAAKC,MAAL,GAAc,IAAIH,mBAAJ,CAAwB,YAAYI,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,QAA/D,CAAd;AACH;;;;WAED,gBAAO;AACH,UAAMC,aAAa,GAAG,IAAIN,aAAJ,EAAtB;AACAM,MAAAA,aAAa,CAACC,IAAd,CAAmB,KAAnB;AACAD,MAAAA,aAAa,CAACE,IAAd,CAAmB,KAAnB;AACAF,MAAAA,aAAa,CAACG,IAAd,CAAmB,MAAnB;AACAH,MAAAA,aAAa,CAACI,IAAd,CAAmB,MAAnB;AACA,UAAMC,MAAM,GAAG,KAAKT,MAAL,CAAYU,IAAZ,CAAiBN,aAAjB,CAAf;AACAK,MAAAA,MAAM,CAACE,EAAP,CAAU,MAAV,EAAkB,UAACC,OAAD,EAA4B;AAC1CC,QAAAA,OAAO,CAACC,GAAR,4BAAgCF,OAAhC;AACH,OAFD;AAGH;;;WAED,cAAKG,MAAL,EAA2B;AACvB,UAAMX,aAAa,GAAG,IAAIN,aAAJ,EAAtB;AACAM,MAAAA,aAAa,CAACC,IAAd,CAAmBU,MAAM,CAACC,IAAP,EAAnB;AACAZ,MAAAA,aAAa,CAACE,IAAd,CAAmBS,MAAM,CAACE,IAAP,EAAnB;AACAb,MAAAA,aAAa,CAACG,IAAd,CAAmBQ,MAAM,CAACG,IAAP,EAAnB;AACAd,MAAAA,aAAa,CAACI,IAAd,CAAmBO,MAAM,CAACI,IAAP,EAAnB;AACA,WAAKnB,MAAL,CAAYoB,IAAZ,CACIhB,aADJ,EAEIiB,SAFJ,EAGI,UAACC,GAAD,EAAoBC,QAApB,EAAgD;AAC5C,YAAID,GAAJ,EAAS;AACLT,UAAAA,OAAO,CAACW,KAAR,CAAcF,GAAd;AACH,SAFD,MAEO;AACHT,UAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBS,QAAQ,CAACE,QAAT,EAAxB;AACCC,UAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAD,CAAyDC,KAAzD,GAAiE,EAAjE;AACH;AACJ,OAVL;AAWH;;;;;;AAGL,OAAO,IAAMC,aAAa,GAAG,IAAI9B,kBAAJ,EAAtB","sourcesContent":["import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../../../proto/player_grpc_web_pb';\nimport { ClientMessage, ServerMessage } from '../../../proto/player_pb';\n//import { ProtoGrpcType } from '../../../proto/player.proto';\n\n\n// const host = '0.0.0.0:50051';\n// const packageDefinition = protoLoader.loadSync('./proto/example.proto');\n// const proto = grpc.loadPackageDefinition(\n//     packageDefinition\n// ) as any as unknown;\n// //as unknown as ProtoGrpcType;\n// // @ts-ignore\n// const client = new proto.player.PlayerService(\n//     host,\n//     grpc.credentials.createInsecure()\n// );\n\nclass PlayerServiceClass {\n    client: any;\n\n    constructor() {\n        if (typeof window === 'undefined') return;\n        this.client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n    }\n\n    join() {\n        const clientMessage = new ClientMessage();\n        clientMessage.setA('542')\n        clientMessage.setB('234')\n        clientMessage.setC('1252')\n        clientMessage.setD('2345')\n        const stream = this.client.join(clientMessage);\n        stream.on('data', (message: ServerMessage) => {\n            console.log(`client received$ ${message}`)\n        });\n    }\n\n    send(params:ClientMessage) {\n        const clientMessage = new ClientMessage();\n        clientMessage.setA(params.getA());\n        clientMessage.setB(params.getB());\n        clientMessage.setC(params.getC());\n        clientMessage.setD(params.getD());\n        this.client.send(\n            clientMessage,\n            undefined,\n            (err: GrpcWebError, response: ServerMessage) => {\n                if (err) {\n                    console.error(err);\n                } else {\n                    console.log('response', response.toObject());\n                    (document.getElementById('message') as HTMLFormElement)!.value = '';\n                }\n            })\n    }\n}\n\nexport const PlayerService = new PlayerServiceClass()\n"]},"metadata":{},"sourceType":"module"}