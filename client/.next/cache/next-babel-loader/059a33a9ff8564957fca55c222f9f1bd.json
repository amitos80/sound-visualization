{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _get from \"@babel/runtime/helpers/esm/get\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n//import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../proto/player_grpc_web_pb';\nimport { ClientMessage } from '../proto/player_pb';\nexport var PlayerService = /*#__PURE__*/function (_PlayerServiceClient) {\n  _inherits(PlayerService, _PlayerServiceClient);\n\n  var _super = _createSuper(PlayerService);\n\n  function PlayerService(hostname, credentials, options) {\n    var _this;\n\n    _classCallCheck(this, PlayerService);\n\n    if (false) return _possibleConstructorReturn(_this);\n    var address = hostname || \"http://\".concat(window.location.hostname, \":50051\");\n    _this = _super.call(this, address, credentials, options);\n\n    _defineProperty(_assertThisInitialized(_this), \"client\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"host\", void 0);\n\n    _this.host = address;\n\n    if (!_this.client) {\n      _this.client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n    }\n\n    return _this;\n  }\n\n  _createClass(PlayerService, [{\n    key: \"pointBit\",\n    value: function pointBit(request, metadata, callback) {\n      _get(_getPrototypeOf(PlayerService.prototype), \"pointBit\", this).call(this, request, metadata, callback);\n\n      if (false) return;\n\n      if (!this.client) {\n        this.client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n      } //console.log('PlayerService.prototype.pointBit request => ', request)\n\n\n      var _request$toObject = request.toObject(),\n          a = _request$toObject.a,\n          b = _request$toObject.b,\n          c = _request$toObject.c,\n          d = _request$toObject.d;\n\n      console.log('PlayerService.prototype.pointBit request => ', {\n        a: a,\n        b: b,\n        c: c,\n        d: d\n      });\n      var clientMessage = new ClientMessage();\n      clientMessage.setA(a);\n      clientMessage.setB(b);\n      clientMessage.setC(c);\n      clientMessage.setD(d);\n\n      if (this.client) {\n        this.client.pointBit(clientMessage, undefined, function (err, response) {\n          if (err) {\n            console.error(err);\n          } else {\n            console.log('response', response.toObject());\n          }\n        });\n      }\n    }\n  }]);\n\n  return PlayerService;\n}(PlayerServiceClient); // PlayerService.prototype.join = function join(params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA('542')\n//     clientMessage.setB('234')\n//     clientMessage.setC('1252')\n//     clientMessage.setD('2345')\n//     const stream = client.pointBit(clientMessage);\n//     stream.on('data', (message: ServerMessage) => {\n//         console.log(`client received$ ${message}`)\n//     });\n// }\n//\n// PlayerService.prototype.send = function (params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(params.getA());\n//     clientMessage.setB(params.getB());\n//     clientMessage.setC(params.getC());\n//     clientMessage.setD(params.getD());\n//     client.pointBit(\n//         clientMessage,\n//         undefined,\n//         (err: any, response: ServerMessage) => {\n//             if (err) {\n//                 console.error(err);\n//             } else {\n//                 console.log('response', response.toObject());\n//                 (document.getElementById('message') as HTMLFormElement)!.value = '';\n//             }\n//         })\n// }\n// PlayerService.prototype.pointBit = function (ctx) {\n//     if (typeof window === 'undefined') return;\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//\n//     console.log('PlayerService.prototype.pointBit ctx => ', ctx)\n//     const [a, b, c, d] = ctx.array\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(a);\n//     clientMessage.setB(b);\n//     clientMessage.setC(c);\n//     clientMessage.setD(d);\n//     if(client) {\n//         client.pointBit(\n//             clientMessage,\n//             undefined,\n//             (err: any, response: ServerMessage) => {\n//                 if (err) {\n//                     console.error(err);\n//                 } else {\n//                     console.log('response', response.toObject());\n//\n//                 }\n//             })\n//     }\n//\n// }\n\nexport default PlayerService;","map":null,"metadata":{},"sourceType":"module"}