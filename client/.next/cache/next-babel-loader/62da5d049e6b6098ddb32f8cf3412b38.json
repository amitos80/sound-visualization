{"ast":null,"code":"export default function fromElement(element_id, canvas_id, options) {\n  var globalAccessKey = [options.globalAccessKey || '$wave'];\n\n  var initGlobalObject = function initGlobalObject(elementId) {\n    window[globalAccessKey] = window[globalAccessKey] || {};\n    window[globalAccessKey][elementId] = window[globalAccessKey][elementId] || {};\n  };\n\n  var getGlobal = options['getGlobal'] || function (elementId, accessKey) {\n    initGlobalObject(elementId);\n    return window[globalAccessKey][elementId][accessKey];\n  };\n\n  var setGlobal = options['setGlobal'] || function (elementId, accessKey, value) {\n    var returnValue = getGlobal(elementId);\n\n    if (!returnValue) {\n      window[globalAccessKey][elementId][accessKey] = window[globalAccessKey][elementId][accessKey] || value;\n      returnValue = window[globalAccessKey][elementId][accessKey];\n    }\n\n    return returnValue;\n  };\n\n  var waveContext = this;\n  var element = document.getElementById(element_id);\n  if (!element) return;\n  element.crossOrigin = 'anonymous';\n\n  function run() {\n    //user gesture has happened\n    this.activated = true; //track current wave for canvas\n\n    this.activeCanvas = this.activeCanvas || {};\n    this.activeCanvas[canvas_id] = JSON.stringify(options); //track elements used so multiple elements use the same data\n\n    this.activeElements[element_id] = this.activeElements[element_id] || {};\n    if (this.activeElements[element_id].count) this.activeElements[element_id].count += 1;else this.activeElements[element_id].count = 1;\n    var currentCount = this.activeElements[element_id].count;\n    var audioCtx = setGlobal(element.id, 'audioCtx', new AudioContext());\n    var analyser = setGlobal(element.id, 'analyser', audioCtx.createAnalyser());\n    var source = getGlobal(element.id, 'source');\n\n    if (source) {\n      if (source.mediaElement !== element) {\n        source = audioCtx.createMediaElementSource(element);\n      }\n    } else {\n      source = audioCtx.createMediaElementSource(element);\n    }\n\n    setGlobal(element.id, 'source', source); //beep test for ios\n\n    var oscillator = audioCtx.createOscillator();\n    oscillator.frequency.value = 1;\n    oscillator.connect(audioCtx.destination);\n    oscillator.start(0);\n    oscillator.stop(0);\n    source.connect(analyser);\n    source.connect(audioCtx.destination);\n    analyser.fftsize = 32768;\n    var bufferLength = analyser.frequencyBinCount;\n    var data = new Uint8Array(bufferLength);\n    var frameCount = 1;\n\n    function renderFrame() {\n      //only run one wave visual per canvas\n      if (JSON.stringify(options) !== this.activeCanvas[canvas_id]) {\n        return;\n      } //if the element or canvas go out of scope, stop animation\n\n\n      if (!document.getElementById(element_id) || !document.getElementById(canvas_id)) return;\n      requestAnimationFrame(renderFrame);\n      frameCount++; //check if this element is the last to be called\n\n      if (!(currentCount < this.activeElements[element_id].count)) {\n        analyser.getByteFrequencyData(data);\n        this.activeElements[element_id].data = data;\n      }\n\n      this.visualize(this.activeElements[element_id].data, canvas_id, options, frameCount);\n    }\n\n    renderFrame = renderFrame.bind(this);\n    renderFrame();\n  }\n\n  var create = function create() {\n    //remove all events\n    ;\n    ['touchstart', 'touchmove', 'touchend', 'mouseup', 'click', 'play'].forEach(function (event) {\n      element.removeEventListener(event, create, {\n        once: true\n      });\n    });\n    run.call(waveContext);\n  };\n\n  if (this.activated || options['skipUserEventsWatcher']) {\n    run.call(waveContext);\n  } else {\n    //wait for a valid user gesture\n    document.body.addEventListener('touchstart', create, {\n      once: true\n    });\n    document.body.addEventListener('touchmove', create, {\n      once: true\n    });\n    document.body.addEventListener('touchend', create, {\n      once: true\n    });\n    document.body.addEventListener('mouseup', create, {\n      once: true\n    });\n    document.body.addEventListener('click', create, {\n      once: true\n    });\n    element.addEventListener('play', create, {\n      once: true\n    });\n  }\n}","map":null,"metadata":{},"sourceType":"module"}