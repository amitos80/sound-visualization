{"ast":null,"code":"export function drawDualbarsBlocks(functionContext) {\n  var data = functionContext.data,\n      options = functionContext.options,\n      ctx = functionContext.ctx,\n      h = functionContext.h,\n      w = functionContext.w;\n  var percent = h / 255;\n  var width = w / 50;\n  var skip = true;\n\n  for (var point = 0; point <= 50; point++) {\n    var p = data[point]; //get value\n\n    p *= percent;\n    var x = width * point;\n\n    if (skip) {\n      ctx.rect(x, h / 2 + p / 2, width, -p);\n      skip = false;\n    } else {\n      skip = true;\n    }\n  }\n\n  if (options.colors[1]) {\n    ctx.fillStyle = options.colors[1];\n    ctx.fill();\n  }\n\n  ctx.stroke();\n}\nexport default drawDualbarsBlocks;","map":{"version":3,"sources":["/Users/amit/Projects/sound-visualization/client/lib/wave-visualizer/visuals/drawDualbarsBlocks.js"],"names":["drawDualbarsBlocks","functionContext","data","options","ctx","h","w","percent","width","skip","point","p","x","rect","colors","fillStyle","fill","stroke"],"mappings":"AAAA,OAAO,SAASA,kBAAT,CAA6BC,eAA7B,EAA8C;AACnD,MAAKC,IAAL,GAAiCD,eAAjC,CAAKC,IAAL;AAAA,MAAWC,OAAX,GAAiCF,eAAjC,CAAWE,OAAX;AAAA,MAAoBC,GAApB,GAAiCH,eAAjC,CAAoBG,GAApB;AAAA,MAAyBC,CAAzB,GAAiCJ,eAAjC,CAAyBI,CAAzB;AAAA,MAA4BC,CAA5B,GAAiCL,eAAjC,CAA4BK,CAA5B;AAEA,MAAIC,OAAO,GAAGF,CAAC,GAAG,GAAlB;AACA,MAAIG,KAAK,GAAGF,CAAC,GAAG,EAAhB;AACA,MAAIG,IAAI,GAAG,IAAX;;AACA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAI,EAA7B,EAAiCA,KAAK,EAAtC,EAA0C;AACxC,QAAIC,CAAC,GAAGT,IAAI,CAACQ,KAAD,CAAZ,CADwC,CACpB;;AACpBC,IAAAA,CAAC,IAAIJ,OAAL;AACA,QAAIK,CAAC,GAAGJ,KAAK,GAAGE,KAAhB;;AAEA,QAAID,IAAJ,EAAU;AACRL,MAAAA,GAAG,CAACS,IAAJ,CAASD,CAAT,EAAYP,CAAC,GAAG,CAAJ,GAAQM,CAAC,GAAG,CAAxB,EAA2BH,KAA3B,EAAkC,CAACG,CAAnC;AACAF,MAAAA,IAAI,GAAG,KAAP;AACD,KAHD,MAGO;AACLA,MAAAA,IAAI,GAAG,IAAP;AACD;AACF;;AAED,MAAIN,OAAO,CAACW,MAAR,CAAe,CAAf,CAAJ,EAAuB;AACrBV,IAAAA,GAAG,CAACW,SAAJ,GAAgBZ,OAAO,CAACW,MAAR,CAAe,CAAf,CAAhB;AACAV,IAAAA,GAAG,CAACY,IAAJ;AACD;;AAEDZ,EAAAA,GAAG,CAACa,MAAJ;AACD;AAED,eAAejB,kBAAf","sourcesContent":["export function drawDualbarsBlocks (functionContext) {\n  let {data, options, ctx, h, w} = functionContext\n\n  let percent = h / 255\n  let width = w / 50\n  let skip = true\n  for (let point = 0; point <= 50; point++) {\n    let p = data[point] //get value\n    p *= percent\n    let x = width * point\n\n    if (skip) {\n      ctx.rect(x, h / 2 + p / 2, width, -p)\n      skip = false\n    } else {\n      skip = true\n    }\n  }\n\n  if (options.colors[1]) {\n    ctx.fillStyle = options.colors[1]\n    ctx.fill()\n  }\n\n  ctx.stroke()\n}\n\nexport default drawDualbarsBlocks\n"]},"metadata":{},"sourceType":"module"}