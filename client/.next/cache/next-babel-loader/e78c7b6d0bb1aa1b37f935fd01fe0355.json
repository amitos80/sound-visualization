{"ast":null,"code":"//import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../proto/player_grpc_web_pb';\nvar client;\nexport function PlayerService() {\n  if (false) return;\n\n  if (!client) {\n    client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n} // PlayerService.prototype.join = function join(params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA('542')\n//     clientMessage.setB('234')\n//     clientMessage.setC('1252')\n//     clientMessage.setD('2345')\n//     const stream = client.pointBit(clientMessage);\n//     stream.on('data', (message: ServerMessage) => {\n//         console.log(`client received$ ${message}`)\n//     });\n// }\n//\n// PlayerService.prototype.send = function (params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(params.getA());\n//     clientMessage.setB(params.getB());\n//     clientMessage.setC(params.getC());\n//     clientMessage.setD(params.getD());\n//     client.pointBit(\n//         clientMessage,\n//         undefined,\n//         (err: any, response: ServerMessage) => {\n//             if (err) {\n//                 console.error(err);\n//             } else {\n//                 console.log('response', response.toObject());\n//                 (document.getElementById('message') as HTMLFormElement)!.value = '';\n//             }\n//         })\n// }\n\n_c = PlayerService;\n\nPlayerService.prototype.pointBit = function (ctx) {\n  if (!client) {\n    client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n\n  console.log('PlayerService.prototype.pointBit ctx => ', ctx); // const clientMessage = new ClientMessage();\n  // clientMessage.setA(params.getA());\n  // clientMessage.setB(params.getB());\n  // clientMessage.setC(params.getC());\n  // clientMessage.setD(params.getD());\n  // client.pointBit(\n  //     clientMessage,\n  //     undefined,\n  //     (err: any, response: ServerMessage) => {\n  //         if (err) {\n  //             console.error(err);\n  //         } else {\n  //             console.log('response', response.toObject());\n  //             (document.getElementById('message') as HTMLFormElement)!.value = '';\n  //         }\n  //     })\n};\n\nexport default PlayerService;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerService\");","map":{"version":3,"sources":["/Users/amit/Projects/sound-visualization/client/services/PlayerService.ts"],"names":["PlayerServiceClient","client","PlayerService","window","location","hostname","prototype","pointBit","ctx","console","log"],"mappings":"AAAA;AACA,SAASA,mBAAT,QAAoC,6BAApC;AAGA,IAAIC,MAAJ;AAEA,OAAO,SAASC,aAAT,GAAyB;AAE5B,aAAmC;;AACnC,MAAI,CAACD,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAG,IAAID,mBAAJ,CAAwB,YAAYG,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,QAA/D,CAAT;AACH;AAEJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA5CgBH,a;;AA8ChBA,aAAa,CAACI,SAAd,CAAwBC,QAAxB,GAAmC,UAAUC,GAAV,EAAe;AAC9C,MAAI,CAACP,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAG,IAAID,mBAAJ,CAAwB,YAAYG,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,QAA/D,CAAT;AACH;;AAEDI,EAAAA,OAAO,CAACC,GAAR,CAAY,0CAAZ,EAAwDF,GAAxD,EAL8C,CAO9C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACH,CAvBD;;AA0BA,eAAeN,aAAf","sourcesContent":["//import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../proto/player_grpc_web_pb';\nimport { ClientMessage, ServerMessage } from '../proto/player_pb';\n\nlet client\n\nexport function PlayerService() {\n\n    if (typeof window === 'undefined') return;\n    if (!client) {\n        client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n    }\n\n}\n\n// PlayerService.prototype.join = function join(params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA('542')\n//     clientMessage.setB('234')\n//     clientMessage.setC('1252')\n//     clientMessage.setD('2345')\n//     const stream = client.pointBit(clientMessage);\n//     stream.on('data', (message: ServerMessage) => {\n//         console.log(`client received$ ${message}`)\n//     });\n// }\n//\n// PlayerService.prototype.send = function (params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(params.getA());\n//     clientMessage.setB(params.getB());\n//     clientMessage.setC(params.getC());\n//     clientMessage.setD(params.getD());\n//     client.pointBit(\n//         clientMessage,\n//         undefined,\n//         (err: any, response: ServerMessage) => {\n//             if (err) {\n//                 console.error(err);\n//             } else {\n//                 console.log('response', response.toObject());\n//                 (document.getElementById('message') as HTMLFormElement)!.value = '';\n//             }\n//         })\n// }\n\nPlayerService.prototype.pointBit = function (ctx) {\n    if (!client) {\n        client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n    }\n\n    console.log('PlayerService.prototype.pointBit ctx => ', ctx)\n\n    // const clientMessage = new ClientMessage();\n    // clientMessage.setA(params.getA());\n    // clientMessage.setB(params.getB());\n    // clientMessage.setC(params.getC());\n    // clientMessage.setD(params.getD());\n    // client.pointBit(\n    //     clientMessage,\n    //     undefined,\n    //     (err: any, response: ServerMessage) => {\n    //         if (err) {\n    //             console.error(err);\n    //         } else {\n    //             console.log('response', response.toObject());\n    //             (document.getElementById('message') as HTMLFormElement)!.value = '';\n    //         }\n    //     })\n}\n\n\nexport default PlayerService\n"]},"metadata":{},"sourceType":"module"}