{"ast":null,"code":"//import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../proto/player_grpc_web_pb';\nimport { ClientMessage } from '../proto/player_pb';\nvar client;\nexport function PlayerService() {\n  if (false) return;\n\n  if (!client) {\n    client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n} // PlayerService.prototype.join = function join(params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA('542')\n//     clientMessage.setB('234')\n//     clientMessage.setC('1252')\n//     clientMessage.setD('2345')\n//     const stream = client.pointBit(clientMessage);\n//     stream.on('data', (message: ServerMessage) => {\n//         console.log(`client received$ ${message}`)\n//     });\n// }\n//\n// PlayerService.prototype.send = function (params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(params.getA());\n//     clientMessage.setB(params.getB());\n//     clientMessage.setC(params.getC());\n//     clientMessage.setD(params.getD());\n//     client.pointBit(\n//         clientMessage,\n//         undefined,\n//         (err: any, response: ServerMessage) => {\n//             if (err) {\n//                 console.error(err);\n//             } else {\n//                 console.log('response', response.toObject());\n//                 (document.getElementById('message') as HTMLFormElement)!.value = '';\n//             }\n//         })\n// }\n\n_c = PlayerService;\n\nPlayerService.prototype.pointBit = function (params) {\n  if (!client) {\n    client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n\n  var clientMessage = new ClientMessage();\n  clientMessage.setA(params.getA());\n  clientMessage.setB(params.getB());\n  clientMessage.setC(params.getC());\n  clientMessage.setD(params.getD());\n  client.pointBit(clientMessage, undefined, function (err, response) {\n    if (err) {\n      console.error(err);\n    } else {\n      console.log('response', response.toObject());\n      document.getElementById('message').value = '';\n    }\n  });\n};\n\nexport default PlayerService;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlayerService\");","map":{"version":3,"sources":["/Users/amit/Projects/sound-visualization/client/services/PlayerService.ts"],"names":["PlayerServiceClient","ClientMessage","client","PlayerService","window","location","hostname","prototype","pointBit","params","clientMessage","setA","getA","setB","getB","setC","getC","setD","getD","undefined","err","response","console","error","log","toObject","document","getElementById","value"],"mappings":"AAAA;AACA,SAASA,mBAAT,QAAoC,6BAApC;AACA,SAASC,aAAT,QAA6C,oBAA7C;AAEA,IAAIC,MAAJ;AAEA,OAAO,SAASC,aAAT,GAAyB;AAE5B,aAAmC;;AACnC,MAAI,CAACD,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAG,IAAIF,mBAAJ,CAAwB,YAAYI,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,QAA/D,CAAT;AACH;AAEJ,C,CAED;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;KA5CgBH,a;;AA8ChBA,aAAa,CAACI,SAAd,CAAwBC,QAAxB,GAAmC,UAAUC,MAAV,EAAgC;AAC/D,MAAI,CAACP,MAAL,EAAa;AACTA,IAAAA,MAAM,GAAG,IAAIF,mBAAJ,CAAwB,YAAYI,MAAM,CAACC,QAAP,CAAgBC,QAA5B,GAAuC,QAA/D,CAAT;AACH;;AACD,MAAMI,aAAa,GAAG,IAAIT,aAAJ,EAAtB;AACAS,EAAAA,aAAa,CAACC,IAAd,CAAmBF,MAAM,CAACG,IAAP,EAAnB;AACAF,EAAAA,aAAa,CAACG,IAAd,CAAmBJ,MAAM,CAACK,IAAP,EAAnB;AACAJ,EAAAA,aAAa,CAACK,IAAd,CAAmBN,MAAM,CAACO,IAAP,EAAnB;AACAN,EAAAA,aAAa,CAACO,IAAd,CAAmBR,MAAM,CAACS,IAAP,EAAnB;AACAhB,EAAAA,MAAM,CAACM,QAAP,CACIE,aADJ,EAEIS,SAFJ,EAGI,UAACC,GAAD,EAAWC,QAAX,EAAuC;AACnC,QAAID,GAAJ,EAAS;AACLE,MAAAA,OAAO,CAACC,KAAR,CAAcH,GAAd;AACH,KAFD,MAEO;AACHE,MAAAA,OAAO,CAACE,GAAR,CAAY,UAAZ,EAAwBH,QAAQ,CAACI,QAAT,EAAxB;AACCC,MAAAA,QAAQ,CAACC,cAAT,CAAwB,SAAxB,CAAD,CAAyDC,KAAzD,GAAiE,EAAjE;AACH;AACJ,GAVL;AAWH,CApBD;;AAuBA,eAAezB,aAAf","sourcesContent":["//import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../proto/player_grpc_web_pb';\nimport { ClientMessage, ServerMessage } from '../proto/player_pb';\n\nlet client\n\nexport function PlayerService() {\n\n    if (typeof window === 'undefined') return;\n    if (!client) {\n        client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n    }\n\n}\n\n// PlayerService.prototype.join = function join(params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA('542')\n//     clientMessage.setB('234')\n//     clientMessage.setC('1252')\n//     clientMessage.setD('2345')\n//     const stream = client.pointBit(clientMessage);\n//     stream.on('data', (message: ServerMessage) => {\n//         console.log(`client received$ ${message}`)\n//     });\n// }\n//\n// PlayerService.prototype.send = function (params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(params.getA());\n//     clientMessage.setB(params.getB());\n//     clientMessage.setC(params.getC());\n//     clientMessage.setD(params.getD());\n//     client.pointBit(\n//         clientMessage,\n//         undefined,\n//         (err: any, response: ServerMessage) => {\n//             if (err) {\n//                 console.error(err);\n//             } else {\n//                 console.log('response', response.toObject());\n//                 (document.getElementById('message') as HTMLFormElement)!.value = '';\n//             }\n//         })\n// }\n\nPlayerService.prototype.pointBit = function (params:ClientMessage) {\n    if (!client) {\n        client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n    }\n    const clientMessage = new ClientMessage();\n    clientMessage.setA(params.getA());\n    clientMessage.setB(params.getB());\n    clientMessage.setC(params.getC());\n    clientMessage.setD(params.getD());\n    client.pointBit(\n        clientMessage,\n        undefined,\n        (err: any, response: ServerMessage) => {\n            if (err) {\n                console.error(err);\n            } else {\n                console.log('response', response.toObject());\n                (document.getElementById('message') as HTMLFormElement)!.value = '';\n            }\n        })\n}\n\n\nexport default PlayerService\n"]},"metadata":{},"sourceType":"module"}