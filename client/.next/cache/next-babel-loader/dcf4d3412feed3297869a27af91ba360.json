{"ast":null,"code":"/**\n * @fileoverview gRPC-Web generated client stub for player_package\n * @enhanceable\n * @public\n */\n// GENERATED CODE -- DO NOT EDIT!\n\n/* eslint-disable */\n// @ts-nocheck\nconst grpc = {};\ngrpc.web = require('grpc-web');\nconst proto = {};\nproto.player_package = require('./player_pb.js');\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\nproto.player_package.PlayerServiceClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @param {string} hostname\n * @param {?Object} credentials\n * @param {?grpc.web.ClientOptions} options\n * @constructor\n * @struct\n * @final\n */\n\n\nproto.player_package.PlayerServicePromiseClient = function (hostname, credentials, options) {\n  if (!options) options = {};\n  options.format = 'text';\n  /**\n   * @private @const {!grpc.web.GrpcWebClientBase} The client\n   */\n\n  this.client_ = new grpc.web.GrpcWebClientBase(options);\n  /**\n   * @private @const {string} The hostname\n   */\n\n  this.hostname_ = hostname;\n};\n/**\n * @const\n * @type {!grpc.web.MethodDescriptor<\n *   !proto.player_package.ClientMessage,\n *   !proto.player_package.ServerMessage>}\n */\n\n\nconst methodDescriptor_PlayerService_pointBit = new grpc.web.MethodDescriptor('/player_package.PlayerService/pointBit', grpc.web.MethodType.UNARY, proto.player_package.ClientMessage, proto.player_package.ServerMessage,\n/**\n * @param {!proto.player_package.ClientMessage} request\n * @return {!Uint8Array}\n */\nfunction (request) {\n  return request.serializeBinary();\n}, proto.player_package.ServerMessage.deserializeBinary);\n/**\n * @param {!proto.player_package.ClientMessage} request The\n *     request proto\n * @param {?Object<string, string>} metadata User defined\n *     call metadata\n * @param {function(?grpc.web.RpcError, ?proto.player_package.ServerMessage)}\n *     callback The callback function(error, response)\n * @return {!grpc.web.ClientReadableStream<!proto.player_package.ServerMessage>|undefined}\n *     The XHR Node Readable Stream\n */\n\nproto.player_package.PlayerServiceClient.prototype.pointBit = function (request, metadata, callback) {\n  return this.client_.rpcCall(this.hostname_ + '/player_package.PlayerService/pointBit', request, metadata || {}, methodDescriptor_PlayerService_pointBit, callback);\n};\n/**\n * @param {!proto.player_package.ClientMessage} request The\n *     request proto\n * @param {?Object<string, string>=} metadata User defined\n *     call metadata\n * @return {!Promise<!proto.player_package.ServerMessage>}\n *     Promise that resolves to the response\n */\n\n\nproto.player_package.PlayerServicePromiseClient.prototype.pointBit = function (request, metadata) {\n  return this.client_.unaryCall(this.hostname_ + '/player_package.PlayerService/pointBit', request, metadata || {}, methodDescriptor_PlayerService_pointBit);\n};\n\nmodule.exports = proto.player_package;","map":null,"metadata":{},"sourceType":"script"}