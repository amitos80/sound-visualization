{"ast":null,"code":"var _toConsumableArray = require(\"@babel/runtime/helpers/toConsumableArray\");\n\nvar _slicedToArray = require(\"@babel/runtime/helpers/slicedToArray\");\n\nvar _defineProperty = require(\"@babel/runtime/helpers/defineProperty\");\n\nvar _regeneratorRuntime = require(\"@babel/runtime/regenerator\");\n\nvar _asyncToGenerator = require(\"@babel/runtime/helpers/asyncToGenerator\");\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nvar Wave = function () {\n  'use strict';\n\n  function fromElement(element_id, canvas_id, options) {\n    var globalAccessKey = [options.globalAccessKey || '$wave'];\n\n    var initGlobalObject = function initGlobalObject(elementId) {\n      window[globalAccessKey] = window[globalAccessKey] || {};\n      window[globalAccessKey][elementId] = window[globalAccessKey][elementId] || {};\n    };\n\n    var getGlobal = options['getGlobal'] || function (elementId, accessKey) {\n      initGlobalObject(elementId);\n      return window[globalAccessKey][elementId][accessKey];\n    };\n\n    var setGlobal = options['setGlobal'] || function (elementId, accessKey, value) {\n      var returnValue = getGlobal(elementId);\n\n      if (!returnValue) {\n        window[globalAccessKey][elementId][accessKey] = window[globalAccessKey][elementId][accessKey] || value;\n        returnValue = window[globalAccessKey][elementId][accessKey];\n      }\n\n      return returnValue;\n    };\n\n    var waveContext = this;\n    var element = document.getElementById(element_id);\n    if (!element) return;\n    element.crossOrigin = \"anonymous\";\n\n    function run() {\n      //user gesture has happened\n      this.activated = true; //track current wave for canvas\n\n      this.activeCanvas = this.activeCanvas || {};\n      this.activeCanvas[canvas_id] = JSON.stringify(options); //track elements used so multiple elements use the same data\n\n      this.activeElements[element_id] = this.activeElements[element_id] || {};\n      if (this.activeElements[element_id].count) this.activeElements[element_id].count += 1;else this.activeElements[element_id].count = 1;\n      var currentCount = this.activeElements[element_id].count;\n      var audioCtx = setGlobal(element.id, 'audioCtx', new AudioContext());\n      var analyser = setGlobal(element.id, 'analyser', audioCtx.createAnalyser());\n      var source = getGlobal(element.id, 'source');\n\n      if (source) {\n        if (source.mediaElement !== element) {\n          source = audioCtx.createMediaElementSource(element);\n        }\n      } else {\n        source = audioCtx.createMediaElementSource(element);\n      }\n\n      setGlobal(element.id, 'source', source); //beep test for ios\n\n      var oscillator = audioCtx.createOscillator();\n      oscillator.frequency.value = 1;\n      oscillator.connect(audioCtx.destination);\n      oscillator.start(0);\n      oscillator.stop(0);\n      source.connect(analyser);\n      source.connect(audioCtx.destination);\n      analyser.fftsize = 32768;\n      var bufferLength = analyser.frequencyBinCount;\n      var data = new Uint8Array(bufferLength);\n      var frameCount = 1;\n\n      function renderFrame() {\n        //only run one wave visual per canvas\n        if (JSON.stringify(options) !== this.activeCanvas[canvas_id]) {\n          return;\n        } //if the element or canvas go out of scope, stop animation\n\n\n        if (!document.getElementById(element_id) || !document.getElementById(canvas_id)) return;\n        requestAnimationFrame(renderFrame);\n        frameCount++; //check if this element is the last to be called\n\n        if (!(currentCount < this.activeElements[element_id].count)) {\n          analyser.getByteFrequencyData(data);\n          this.activeElements[element_id].data = data;\n        }\n\n        this.visualize(this.activeElements[element_id].data, canvas_id, options, frameCount);\n      }\n\n      renderFrame = renderFrame.bind(this);\n      renderFrame();\n    }\n\n    var create = function create() {\n      //remove all events\n      [\"touchstart\", \"touchmove\", \"touchend\", \"mouseup\", \"click\", \"play\"].forEach(function (event) {\n        element.removeEventListener(event, create, {\n          once: true\n        });\n      });\n      run.call(waveContext);\n    };\n\n    if (this.activated || options['skipUserEventsWatcher']) {\n      run.call(waveContext);\n    } else {\n      //wait for a valid user gesture\n      document.body.addEventListener(\"touchstart\", create, {\n        once: true\n      });\n      document.body.addEventListener(\"touchmove\", create, {\n        once: true\n      });\n      document.body.addEventListener(\"touchend\", create, {\n        once: true\n      });\n      document.body.addEventListener(\"mouseup\", create, {\n        once: true\n      });\n      document.body.addEventListener(\"click\", create, {\n        once: true\n      });\n      element.addEventListener(\"play\", create, {\n        once: true\n      });\n    }\n  }\n\n  function fromFile(file) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    //options\n    if (!options.stroke) options.stroke = 10;\n    var audio = new Audio();\n    audio.src = file;\n    var audioCtx = new AudioContext();\n    var analyser = audioCtx.createAnalyser();\n    var source = audioCtx.createMediaElementSource(audio);\n    source.connect(analyser);\n    analyser.fftSize = 64;\n    var bufferLength = analyser.frequencyBinCount;\n    var file_data;\n    var temp_data = new Uint8Array(bufferLength);\n    var getWave;\n    var fdi = 0;\n    var self = this;\n    audio.addEventListener('loadedmetadata', /*#__PURE__*/_asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(audio.duration === Infinity)) {\n                _context.next = 6;\n                break;\n              }\n\n              _context.next = 3;\n              return new Promise(function (r) {\n                return setTimeout(r, 1000);\n              });\n\n            case 3:\n              audio.currentTime = 10000000 * Math.random();\n              _context.next = 0;\n              break;\n\n            case 6:\n              audio.currentTime = 0;\n              audio.play();\n\n            case 8:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    })));\n\n    audio.onplay = function () {\n      var findSize = function findSize(size) {\n        for (var range = 1; range <= 40; range++) {\n          var power = Math.pow(2, range);\n          if (size <= power) return power;\n        }\n      };\n\n      var d = audio.duration;\n      audio.playbackRate = 16;\n      d = d / audio.playbackRate;\n      var drawRate = 20; //ms\n\n      var size = d / (drawRate / 1000) * (analyser.fftSize / 2);\n      size = findSize(size);\n      file_data = new Uint8Array(size);\n      getWave = setInterval(function () {\n        analyser.getByteFrequencyData(temp_data);\n\n        for (var data in temp_data) {\n          data = temp_data[data];\n          file_data[fdi] = data;\n          fdi++;\n        }\n      }, drawRate);\n    };\n\n    audio.onended = function () {\n      if (audio.currentTime === audio.duration && file_data !== undefined) {\n        clearInterval(getWave);\n        var canvas = document.createElement(\"canvas\");\n        canvas.height = window.innerHeight;\n        canvas.width = window.innerWidth;\n        self.visualize(file_data, canvas, options);\n        var image = canvas.toDataURL(\"image/jpg\");\n        self.onFileLoad(image);\n        canvas.remove();\n      }\n    };\n  }\n\n  function fromStream(stream, canvas_id) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.current_stream.id = canvas_id;\n    this.current_stream.options = options;\n    var audioCtx, analyser, source;\n\n    if (!this.sources[stream.toString()]) {\n      audioCtx = new AudioContext();\n      analyser = audioCtx.createAnalyser();\n      source = audioCtx.createMediaStreamSource(stream);\n      source.connect(analyser);\n      source.connect(audioCtx.destination); //playback audio\n\n      this.sources[stream.toString()] = {\n        \"audioCtx\": audioCtx,\n        \"analyser\": analyser,\n        \"source\": source\n      };\n    } else {\n      cancelAnimationFrame(this.sources[stream.toString()].animation);\n      audioCtx = this.sources[stream.toString()].audioCtx;\n      analyser = this.sources[stream.toString()].analyser;\n      source = this.sources[stream.toString()].source;\n    }\n\n    analyser.fftsize = 32768;\n    var bufferLength = analyser.frequencyBinCount;\n    this.current_stream.data = new Uint8Array(bufferLength);\n    var self = this;\n\n    function renderFrame() {\n      self.current_stream.animation = requestAnimationFrame(self.current_stream.loop);\n      self.sources[stream.toString()].animation = self.current_stream.animation;\n      analyser.getByteFrequencyData(self.current_stream.data);\n      self.visualize(self.current_stream.data, self.current_stream.id, self.current_stream.options);\n    }\n\n    this.current_stream.loop = renderFrame;\n    renderFrame();\n  }\n\n  function stopStream() {\n    cancelAnimationFrame(this.current_stream.animation);\n  }\n\n  function playStream() {\n    this.current_stream.loop();\n  }\n\n  var fromStream$1 = {\n    fromStream: fromStream,\n    stopStream: stopStream,\n    playStream: playStream\n  };\n\n  var drawWave = function drawWave(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx); // data = helper.mutateData(data, \"shrink\", 200)\n\n    data = helper.mutateData(data, \"split\", 4)[0];\n    data = helper.mutateData(data, \"scale\", h);\n    var points = helper.getPoints(\"line\", w, [0, h], data.length, data, {\n      offset: 100\n    });\n    points.start = points.start.slice(0, points.end.length - 1);\n    points.start.push([w, h]);\n    points.start.push([0, h]);\n    helper.drawPolygon(points.start, {\n      lineColor: colors[0],\n      color: colors[1],\n      radius: h * .008\n    });\n  };\n\n  var drawShine = function drawShine(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var cx = w / 2;\n    var cy = h / 2;\n    var r = h / 4;\n    var percent = (h / 2 - r) / 255;\n    var point_count = 512;\n    var increase = 360 / point_count * Math.PI / 180;\n\n    for (var point = 1; point <= point_count; point++) {\n      var p = data[600 % point]; //get value\n\n      p *= percent;\n      point++; //start at 1\n\n      var a = point * increase;\n      var sx = cx + r * Math.cos(a);\n      var sy = cy + r * Math.sin(a);\n      ctx.moveTo(sx, sy);\n      var dx = cx + (r + p) * Math.cos(a);\n      var dy = cy + (r + p) * Math.sin(a);\n      ctx.lineTo(dx, dy);\n    }\n\n    ctx.stroke();\n\n    if (options.colors[1]) {\n      ctx.arc(cx, cy, r * .90, 0, 2 * Math.PI);\n      ctx.fillStyle = options.colors[1];\n      ctx.fill();\n    }\n  };\n\n  var drawRing = function drawRing(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var cx = w / 2;\n    var cy = h / 2;\n    var r = (h - 10) / 2;\n    var offset = r / 5;\n    var percent = (r - offset) / 255;\n    var point_count = 150;\n    var increase = 360 / point_count * Math.PI / 180;\n    ctx.arc(cx, cy, r, 0, 2 * Math.PI, true);\n    var fa = 0;\n    var fx = cx + (r - data[0] * percent) * Math.cos(fa);\n    var fy = cy + (r - data[0] * percent) * Math.sin(fa);\n    ctx.moveTo(fx, fy);\n    var q = 0;\n\n    for (var point = 0; point < point_count; point++) {\n      q += 1;\n\n      if (point >= point_count / 2) {\n        q -= 2;\n      }\n\n      var p = data[q]; //get value\n\n      p *= percent;\n      var a = point * increase;\n      var x = cx + (r - p) * Math.cos(a);\n      var y = cy + (r - p) * Math.sin(a);\n      ctx.lineTo(x, y);\n      ctx.arc(x, y, 2, 0, 2 * Math.PI);\n    }\n\n    ctx.lineTo(fx, fy);\n    ctx.stroke();\n    ctx.fillStyle = options.colors[1] || \"#fff0\";\n    ctx.fill();\n  };\n\n  var drawBars = function drawBars(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var point_count = 64;\n    var percent = h / 255;\n    var increase = w / 64;\n    var breakpoint = Math.floor(point_count / options.colors.length);\n\n    for (var point = 1; point <= point_count; point++) {\n      var p = data[point]; //get value\n\n      p *= percent;\n      var x = increase * point;\n      ctx.moveTo(x, h);\n      ctx.lineTo(x, h - p);\n\n      if (point % breakpoint === 0) {\n        var i = point / breakpoint - 1;\n        ctx.strokeStyle = options.colors[i];\n        ctx.stroke();\n        ctx.beginPath();\n      }\n    }\n  };\n\n  var drawDualbars = function drawDualbars(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var percent = h / 255;\n    var increase = w / 128;\n    var point_count = 128;\n    var min = 5;\n    var breakpoint = Math.floor(point_count / options.colors.length);\n\n    for (var point = 1; point <= point_count; point++) {\n      var p = data[point]; //get value\n\n      p += min;\n      p *= percent;\n      var x = increase * point;\n      var mid = h / 2 + p / 2;\n      ctx.moveTo(x, mid);\n      ctx.lineTo(x, mid - p);\n\n      if (point % breakpoint === 0) {\n        var i = point / breakpoint - 1;\n        ctx.strokeStyle = options.colors[i];\n        ctx.stroke();\n        ctx.beginPath();\n      }\n    }\n  };\n\n  var drawOrbs = function drawOrbs(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    data = helper.mutateData(data, \"organize\").mids;\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"shrink\", 100);\n    data = helper.mutateData(data, \"mirror\");\n    data = helper.mutateData(data, \"scale\", h);\n    data = helper.mutateData(data, \"amp\", .75);\n    var points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, {\n      offset: 50\n    });\n    points.start.forEach(function (start, i) {\n      helper.drawLine(start, points.end[i], {\n        lineColor: colors[0]\n      });\n      helper.drawCircle(start, h * .01, {\n        color: colors[1] || colors[0]\n      });\n      helper.drawCircle(points.end[i], h * .01, {\n        color: colors[1] || colors[0]\n      });\n    });\n  };\n\n  var drawFlower = function drawFlower(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var min = 5;\n    var r = h / 4;\n    var offset = r / 2;\n    var cx = w / 2;\n    var cy = h / 2;\n    var point_count = 128;\n    var percent = (r - offset) / 255;\n    var increase = 360 / point_count * Math.PI / 180;\n    var breakpoint = Math.floor(point_count / options.colors.length);\n\n    for (var point = 1; point <= point_count; point++) {\n      var p = (data[point] + min) * percent;\n      var a = point * increase;\n      var sx = cx + (r - (p - offset)) * Math.cos(a);\n      var sy = cy + (r - (p - offset)) * Math.sin(a);\n      ctx.moveTo(sx, sy);\n      var dx = cx + (r + p) * Math.cos(a);\n      var dy = cy + (r + p) * Math.sin(a);\n      ctx.lineTo(dx, dy);\n\n      if (point % breakpoint === 0) {\n        var i = point / breakpoint - 1;\n        ctx.strokeStyle = options.colors[i];\n        ctx.stroke();\n        ctx.beginPath();\n      }\n    }\n\n    ctx.stroke();\n  };\n\n  var drawFlowerBlocks = function drawFlowerBlocks(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var r = h / 4;\n    var cx = w / 2;\n    var cy = h / 2;\n    var point_count = 56;\n    var percent = r / 255;\n    var increase = 360 / point_count * Math.PI / 180;\n\n    for (var point = 1; point <= point_count; point++) {\n      var p = data[point] * percent;\n      var a = point * increase;\n      var ax = cx + (r - p / 2) * Math.cos(a);\n      var ay = cy + (r - p / 2) * Math.sin(a);\n      ctx.moveTo(ax, ay);\n      var bx = cx + (r + p) * Math.cos(a);\n      var by = cy + (r + p) * Math.sin(a);\n      ctx.lineTo(bx, by);\n      var dx = cx + (r + p) * Math.cos(a + increase);\n      var dy = cy + (r + p) * Math.sin(a + increase);\n      ctx.lineTo(dx, dy);\n      var ex = cx + (r - p / 2) * Math.cos(a + increase);\n      var ey = cy + (r - p / 2) * Math.sin(a + increase);\n      ctx.lineTo(ex, ey);\n      ctx.lineTo(ax, ay);\n    }\n\n    if (options.colors[1]) {\n      ctx.fillStyle = options.colors[1];\n      ctx.fill();\n    }\n\n    ctx.stroke();\n  };\n\n  var drawBarsBlocks = function drawBarsBlocks(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var percent = h / 255;\n    var width = w / 64;\n\n    for (var point = 0; point < 64; point++) {\n      var p = data[point]; //get value\n\n      p *= percent;\n      var x = width * point;\n      ctx.rect(x, h, width, -p);\n    }\n\n    ctx.fillStyle = options.colors[1] || options.colors[0];\n    ctx.stroke();\n    ctx.fill();\n  };\n\n  var drawDualbarsBlocks = function drawDualbarsBlocks(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var percent = h / 255;\n    var width = w / 50;\n\n    for (var point = 0; point <= 50; point++) {\n      var p = data[point]; //get value\n\n      p *= percent;\n      var x = width * point;\n      ctx.rect(x, h / 2 + p / 2, width, -p);\n    }\n\n    if (options.colors[1]) {\n      ctx.fillStyle = options.colors[1];\n      ctx.fill();\n    }\n\n    ctx.stroke();\n  };\n\n  var drawStar = function drawStar(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var r = h / 4;\n    var offset = r / 4;\n    var cx = w / 2;\n    var cy = h / 2;\n    var point_count = 120;\n    var percent = (r - offset - 35) / 255;\n    var increase = 360 / point_count * Math.PI / 180;\n    var top = [];\n    var bottom = [];\n\n    for (var point = 1; point <= point_count; point++) {\n      var p = data[200 % point] * percent;\n      var a = point * increase;\n      var sx = cx + (r - p + offset) * Math.cos(a);\n      var sy = cy + (r - p + offset) * Math.sin(a);\n      ctx.moveTo(sx, sy);\n      bottom.push({\n        x: sx,\n        y: sy\n      });\n      var dx = cx + (r + p + offset) * Math.cos(a);\n      var dy = cy + (r + p + offset) * Math.sin(a);\n      ctx.lineTo(dx, dy);\n      top.push({\n        x: dx,\n        y: dy\n      });\n    }\n\n    ctx.moveTo(top[0].x, top[0].y);\n\n    for (var t in top) {\n      t = top[t];\n      ctx.lineTo(t.x, t.y);\n    }\n\n    ctx.closePath();\n    ctx.moveTo(bottom[0].x, bottom[0].y);\n\n    for (var b = bottom.length - 1; b >= 0; b++) {\n      b = bottom[b];\n      ctx.lineTo(b.x, b.y);\n    }\n\n    ctx.closePath();\n\n    if (options.colors[1]) {\n      ctx.fillStyle = options.colors[1];\n      ctx.fill();\n    }\n\n    ctx.stroke(); //inner color\n\n    ctx.beginPath();\n    ctx.moveTo(bottom[0].x, bottom[0].y);\n\n    for (var _b in bottom) {\n      _b = bottom[_b];\n      ctx.lineTo(_b.x, _b.y);\n    }\n\n    ctx.closePath();\n\n    if (options.colors[2]) {\n      ctx.fillStyle = options.colors[2];\n      ctx.fill();\n    }\n\n    ctx.stroke();\n  };\n\n  var drawRoundWave = function drawRoundWave(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w;\n    var r = h / 4;\n    var cx = w / 2;\n    var cy = h / 2;\n    var point_count = 100;\n    var percent = r / 255;\n    var increase = 360 / point_count * Math.PI / 180;\n    var p = 0; // let z = (data[0] + min + offset) * percent;\n\n    var sx = cx + (r + p) * Math.cos(0);\n    var sy = cy + (r + p) * Math.sin(0);\n    ctx.moveTo(sx, sy);\n\n    for (var point = 1; point <= point_count; point++) {\n      var _p = data[350 % point] * percent;\n\n      var a = point * increase;\n      var dx = cx + (r + _p) * Math.cos(a);\n      var dy = cy + (r + _p) * Math.sin(a);\n      ctx.lineTo(dx, dy);\n    }\n\n    ctx.closePath();\n    ctx.stroke();\n\n    if (options.colors[1]) {\n      ctx.fillStyle = options.colors[1];\n      ctx.fill();\n    }\n  };\n\n  var drawRings = function drawRings(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    var minDimension = h < w ? h : w;\n    data = helper.mutateData(data, \"organize\");\n    data = [data.mids, data.vocals];\n    data[0] = helper.mutateData(data[0], \"scale\", minDimension / 4);\n    data[1] = helper.mutateData(data[1], \"scale\", minDimension / 8);\n    data[0] = helper.mutateData(data[0], \"shrink\", 1 / 5);\n    data[0] = helper.mutateData(data[0], \"split\", 2)[0];\n    data[0] = helper.mutateData(data[0], \"reverb\");\n    data[1] = helper.mutateData(data[1], \"reverb\");\n    var outerCircle = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data[0].length, data[0]);\n    var innerCircle = helper.getPoints(\"circle\", minDimension / 4, [w / 2, h / 2], data[1].length, data[1]);\n    helper.drawPolygon(outerCircle.end, {\n      close: true,\n      radius: 4,\n      lineColor: colors[0],\n      color: colors[1]\n    });\n    helper.drawPolygon(innerCircle.end, {\n      close: true,\n      radius: 4,\n      lineColor: colors[2],\n      color: colors[3]\n    });\n    var middle = (minDimension / 4 + minDimension / 2) / 2;\n    var largerInner = data[1] = helper.mutateData(data[1], \"scale\", minDimension / 4 - minDimension / 2);\n    var innerBars = helper.getPoints(\"circle\", middle, [w / 2, h / 2], data[1].length, largerInner);\n    innerBars.start.forEach(function (start, i) {\n      helper.drawLine(start, innerBars.end[i], {\n        lineColor: colors[4] || colors[2]\n      });\n    });\n  };\n\n  var drawShineRings = function drawShineRings(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    var minDimension = h < w ? h : w;\n    data = helper.mutateData(data, \"organize\");\n    data.vocals = helper.mutateData(data.vocals, \"scale\", minDimension / 2 / 2);\n    data.base = helper.mutateData(data.base, \"scale\", minDimension / 2 / 2);\n    var outerBars = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals);\n    var innerWave = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals, {\n      offset: 100\n    });\n    var thinLine = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.base.length, data.base, {\n      offset: 100\n    });\n    outerBars.start.forEach(function (start, i) {\n      helper.drawLine(start, outerBars.end[i], {\n        lineColor: colors[0]\n      });\n    });\n    helper.drawPolygon(innerWave.start, {\n      close: true,\n      lineColor: colors[1],\n      color: colors[3],\n      radius: 5\n    });\n    helper.drawPolygon(thinLine.start, {\n      close: true,\n      lineColor: colors[2],\n      color: colors[4],\n      radius: 5\n    });\n  };\n\n  var drawCubes = function drawCubes(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    data = helper.mutateData(data, \"organize\").base;\n    data = helper.mutateData(data, \"shrink\", 20).slice(0, 19);\n    data = helper.mutateData(data, \"scale\", h);\n    var points = helper.getPoints(\"line\", w, [0, h], data.length, data);\n    var spacing = 5;\n    var squareSize = w / 20 - spacing;\n    var colorIndex = 0;\n    points.start.forEach(function (start, i) {\n      var squareCount = Math.ceil(data[i] / squareSize); //find color stops from total possible squares in bar\n\n      var totalSquares = (h - spacing * (h / squareSize)) / squareSize;\n      var colorStop = Math.ceil(totalSquares / colors.length);\n\n      for (var j = 1; j <= squareCount; j++) {\n        var origin = [start[0], start[1] - squareSize * j - spacing * j];\n        helper.drawSquare(origin, squareSize, {\n          color: colors[colorIndex],\n          lineColor: \"black\"\n        });\n\n        if (j % colorStop == 0) {\n          colorIndex++;\n          if (colorIndex >= colors.length) colorIndex = colors.length - 1;\n        }\n      }\n\n      colorIndex = 0;\n    });\n  };\n\n  var drawBigBars = function drawBigBars(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    data = helper.mutateData(data, \"organize\").vocals;\n    data = helper.mutateData(data, \"shrink\", 10);\n    data = helper.mutateData(data, \"scale\", h);\n    data = helper.mutateData(data, \"amp\", 1);\n    var points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, {\n      offset: 50\n    });\n    var colorIndex = 0;\n    var colorStop = Math.ceil(data.length / colors.length);\n    points.start.forEach(function (start, i) {\n      if ((i + 1) % colorStop == 0) colorIndex++;\n      helper.drawRectangle(start, data[i], w / data.length, {\n        color: colors[colorIndex]\n      });\n    });\n  };\n\n  var drawShockwave = function drawShockwave(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    data = helper.mutateData(data, \"shrink\", 300);\n    data = helper.mutateData(data, \"scale\", h / 2);\n    data = helper.mutateData(data, \"split\", 4).slice(0, 3);\n    var colorIndex = 0;\n    data.forEach(function (points) {\n      var wavePoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points);\n      helper.drawPolygon(wavePoints.end, {\n        lineColor: colors[colorIndex],\n        radius: h * .015\n      });\n      var invertedPoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points, {\n        offset: 100\n      });\n      helper.drawPolygon(invertedPoints.start, {\n        lineColor: colors[colorIndex],\n        radius: h * .015\n      });\n      colorIndex++;\n    });\n  };\n\n  var drawFireworks = function drawFireworks(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    data = helper.mutateData(data, \"shrink\", 200).slice(0, 120);\n    data = helper.mutateData(data, \"mirror\");\n    data = helper.mutateData(data, \"scale\", h / 4 + h / 4 * .35);\n    var points = helper.getPoints(\"circle\", h / 2, [w / 2, h / 2], data.length, data, {\n      offset: 35,\n      rotate: 270\n    });\n    points.start.forEach(function (start, i) {\n      helper.drawLine(start, points.end[i]);\n    });\n    helper.drawPolygon(points.start, {\n      close: true\n    });\n    points.end.forEach(function (end, i) {\n      helper.drawCircle(end, h * .01, {\n        color: colors[0]\n      });\n    });\n  };\n\n  var drawStatic = function drawStatic(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var helper = new Helper(ctx);\n    data = helper.mutateData(data, \"shrink\", 1 / 8);\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"scale\", h);\n    var points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, {\n      offset: 50\n    });\n    var prevPoint = null;\n    points.start.forEach(function (start, i) {\n      if (prevPoint) {\n        helper.drawLine(prevPoint, start);\n      }\n\n      helper.drawLine(start, points.end[i]);\n      prevPoint = points.end[i];\n    });\n  };\n\n  var drawWeb = function drawWeb(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var colors = options.colors;\n    var helper = new Helper(ctx);\n    var minDimension = h < w ? h : w;\n    data = helper.mutateData(data, \"shrink\", 100);\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"scale\", h / 4);\n    var dataCopy = data;\n    var points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n    helper.drawPolygon(points.end, {\n      close: true\n    });\n    points.start.forEach(function (start, i) {\n      helper.drawLine(start, points.end[i]);\n    });\n    data = helper.mutateData(data, \"scale\", .7);\n    points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n    helper.drawPolygon(points.end, {\n      close: true\n    });\n    data = helper.mutateData(data, \"scale\", .3);\n    points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n    helper.drawPolygon(points.end, {\n      close: true\n    });\n    helper.drawCircle([w / 2, h / 2], minDimension / 2, {\n      color: colors[2]\n    });\n    dataCopy = helper.mutateData(dataCopy, \"scale\", 1.4);\n    points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], dataCopy.length, dataCopy);\n    points.end.forEach(function (end, i) {\n      helper.drawCircle(end, minDimension * .01, {\n        color: colors[1],\n        lineColor: colors[1] || colors[0]\n      });\n    });\n  };\n\n  var drawStitches = function drawStitches(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper;\n    var helper = new Helper(ctx);\n    var minDimension = h < w ? h : w;\n    data = helper.mutateData(data, \"shrink\", 200);\n    data = helper.mutateData(data, \"split\", 2)[0];\n    data = helper.mutateData(data, \"scale\", h / 2);\n    var points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data, {\n      offset: 50\n    });\n    helper.drawPolygon(points.end, {\n      close: true\n    });\n    helper.drawPolygon(points.start, {\n      close: true\n    });\n\n    for (var i = 0; i < points.start.length; i += 1) {\n      var start = points.start[i];\n      i++;\n      var end = points.end[i] || points.end[0];\n      helper.drawLine(start, end);\n      helper.drawLine(end, points.start[i + 1] || points.start[0]);\n    }\n  };\n\n  var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : true ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n  function createCommonjsModule(fn, module) {\n    return module = {\n      exports: {}\n    }, fn(module, module.exports), module.exports;\n  }\n\n  var origami_1 = createCommonjsModule(function (module, exports) {\n    /*!\n     * Origami.js 0.5.0\n     * https://origamijs.com/\n     *\n     * Copyright Raphael Amorim 2016\n     * Released under the GPL-4.0 license\n     *\n     * Date: 2016-09-23T03:42Z\n     */\n    (function (window) {\n      /**\n       * Config object: Maintain internal state\n       * Later exposed as Origami.config\n       * `config` initialized at top of scope\n       */\n      var Origami = {\n        // Current Paper\n        paper: null\n      };\n      var config = {\n        // Document Styles\n        documentStyles: [],\n        // Virtual Styles\n        virtualStyles: {},\n        // All contexts saved\n        contexts: [],\n        // Origami Shapes Defaults\n        defaults: {\n          arc: {\n            background: 'rgba(0, 0, 0, 0)',\n            strokeStyle: 'rgba(0, 0, 0, 0)',\n            lineWidth: null\n          },\n          rect: {\n            background: 'rgba(0, 0, 0, 0)',\n            strokeStyle: 'rgba(0, 0, 0, 0)',\n            lineWidth: null\n          },\n          polygon: {\n            background: 'rgba(0, 0, 0, 0)',\n            strokeStyle: 'rgba(0, 0, 0, 0)',\n            lineWidth: null\n          },\n          line: {\n            strokeStyle: 'rgba(0, 0, 0, 0)',\n            lineWidth: null\n          },\n          text: {\n            font: '14px Helvetica',\n            strokeStyle: 'rgba(0, 0, 0, 0)',\n            color: '#000',\n            lineWidth: null\n          }\n        }\n      };\n      var prefix = \"[origami.js]\";\n\n      Origami.warning = function warning(message, obj) {\n        if (console && console.warn) console.warn(prefix, message, obj);\n      };\n\n      Origami.error = function error(message) {\n        throw new Error(prefix.concat(' ' + message));\n      };\n\n      Origami.init = function (el) {\n        if (el.canvas) {\n          el = el.canvas;\n        } else {\n          el = document.querySelector(el);\n        }\n\n        if (!el) this.error('Please use a valid selector or canvas context');\n        var existentContext = exists(el, config.contexts);\n\n        if (existentContext) {\n          this.paper = existentContext;\n          return this;\n        }\n\n        if (!el.getContext) this.error('Please verify if it\\'s a valid canvas element');\n        el.width = el.clientWidth;\n        el.height = el.clientHeight;\n        var context = el.getContext('2d');\n        var current = {\n          element: el,\n          queue: [],\n          index: config.contexts.length,\n          flip: false,\n          frame: null,\n          ctx: context,\n          width: el.width,\n          height: el.height\n        };\n        config.contexts.push(current);\n        this.paper = current;\n        return this;\n      };\n\n      Origami.styles = function () {\n        if (!config.virtualStyles.length) defineDocumentStyles();\n        var selectors = arguments;\n\n        if (!selectors.length) {\n          config.virtualStyles['empty'] = true;\n          return this;\n        }\n\n        for (var i = 0; i < selectors.length; i++) {\n          var style = styleRuleValueFrom(selectors[i], config.documentStyles[0] || []);\n          config.virtualStyles[selectors[i]] = style;\n        }\n\n        return this;\n      };\n\n      Origami.getPaper = function () {\n        return this.paper;\n      };\n\n      Origami.canvasCtx = function () {\n        return this.paper.ctx;\n      };\n\n      Origami.getContexts = function () {\n        return config.contexts;\n      };\n\n      Origami.cleanContexts = function () {\n        config.contexts = [];\n      };\n\n      Origami.createComponent = function (component, fn) {\n        Origami[component] = function (props) {\n          fn.bind(this, this, props)();\n          return this;\n        };\n      };\n\n      Origami.fn = {};\n\n      Origami.draw = function (options) {\n        var self = this,\n            customRender = false,\n            ctx = self.paper.ctx;\n\n        if (typeof options === 'string') {\n          customRender = new origami.fn[options](self.paper);\n          self.paper['ctx'] = customRender;\n        }\n\n        var abs = new Screen(self.paper),\n            queueList = self.paper.queue;\n\n        for (var i = 0; i < queueList.length; i++) {\n          if (queueList[i].loaded === false || queueList[i].failed) {\n            Origami.warning('couldn\\'t able to load:', queueList[i].params);\n          }\n\n          abs[queueList[i].assign](queueList[i].params);\n        }\n\n        self.paper.queue = [];\n\n        if (customRender) {\n          customRender.draw();\n          self.paper.ctx = ctx;\n        }\n\n        if (typeof options === 'function') options();\n      };\n\n      Origami.load = function (fn) {\n        var mOrigami = clone(this);\n        mOrigami.paper = this.paper;\n        var loadInterval = setInterval(function () {\n          var dataLoad = mOrigami.paper.queue.filter(function (item) {\n            return item.loaded === false && !item.failed;\n          }); // When already loaded\n\n          if (!dataLoad.length) {\n            clearInterval(loadInterval);\n            fn.bind(mOrigami, mOrigami)();\n          }\n        }, 1);\n      };\n\n      function Queue(assign, params, loaded) {\n        this.paper.queue.push({\n          assign: assign,\n          params: params,\n          loaded: loaded\n        });\n      }\n\n      var queue = Queue.bind(Origami); // Utilities.js\n\n      var hasOwn = Object.prototype.hasOwnProperty;\n      /**\n       * Check if element exists in a Array of NodeItems\n       * @param {NodeItem} current nodeItem to check\n       * @param {Array} array of NodeItems\n       * @returns {NodeItem} NodeItem exitent in array\n       */\n\n      function exists(el, arr) {\n        for (var i = 0; i < arr.length; i++) {\n          if (arr[i].element.isEqualNode(el)) return arr[i];\n        }\n\n        return false;\n      }\n      /**\n       * Filter arguments by rules\n       * @param {Array} methods arguments\n       * @param {Object} rules to apply\n       * @returns {Object} arguments filtered\n       */\n\n\n      function argsByRules(argsArray, rules) {\n        var params = rules || ['x', 'y', 'width', 'height'],\n            args = {};\n\n        for (var i = 0; i < argsArray.length; i++) {\n          if (typeof argsArray[i] === \"object\") args[\"style\"] = argsArray[i];else if (params.length) args[params.shift()] = argsArray[i];\n        }\n\n        args.style = normalizeStyle(args.style);\n        if (typeof args.x === 'string' && typeof args.y === 'string') args = smartCoordinates(args);\n        return args;\n      }\n\n      function getBorderStyleObject(prop) {\n        return normalizeStyle({\n          border: prop\n        });\n      }\n\n      function normalizeStyle(style) {\n        if (!style) style = {};\n        var borderSize = style.borderSize || null,\n            borderColor = style.borderColor || null,\n            borderStyle = style.borderStyle || [];\n\n        if (style.border) {\n          var border = [],\n              borderString = style.border; // 0 - Size: [0-9]px\n\n          border = border.concat(style.border.match(/[0-9]*\\.?[0-9]px?/i));\n          borderString = borderString.replace(/[0-9]*\\.?[0-9]px?/i, ''); // 1 - Style\n\n          border = border.concat(borderString.match(/solid|dashed|dotted/i));\n          borderString = borderString.replace(/solid|dashed|dotted/i, ''); // 2 - Color\n\n          border = border.concat(borderString.match(/[^\\s]+/i));\n          if (!borderSize) borderSize = border[0];\n          if (!borderColor) borderColor = border[2];\n          borderStyle = border[1];\n        }\n\n        if (borderSize) borderSize = borderSize.replace(/[^0-9]/g, '');\n\n        if (typeof borderStyle === 'string') {\n          if (borderStyle === 'dashed') borderStyle = [12];else if (borderStyle === 'dotted') borderStyle = [3];else borderStyle = [];\n        }\n\n        style['borderSize'] = borderSize;\n        style['borderStyle'] = borderStyle;\n        style['borderColor'] = borderColor;\n        return style;\n      }\n      /**\n       * Return args object with new coordinates based on behavior\n       * @returns {Object} args\n       */\n\n\n      function smartCoordinates(args) {\n        var x = args.x,\n            y = args.y;\n        var paper = Origami.getPaper(),\n            elmWidth = paper.element.width,\n            elmHeight = paper.element.height,\n            radius = args.r || 0;\n        var width = args.width || radius,\n            height = args.height || width;\n        var axis = {\n          x: ['right', 'center', 'left'],\n          y: ['top', 'center', 'bottom']\n        };\n\n        if (axis.x.indexOf(x) !== -1) {\n          if (x === 'right') x = Math.floor(elmWidth - width);else if (x === 'center') {\n            if (radius) x = Math.floor(elmWidth / 2);else x = Math.floor(elmWidth / 2 - width / 2);\n          } else if (x === 'left') x = radius;\n        } else if ((x + '').substr(-1) === '%') {\n          x = elmWidth * parseInt(x, 10) / 100;\n        } else {\n          x = 0;\n        }\n\n        if (axis.y.indexOf(y) !== -1) {\n          if (y === 'top') y = radius;else if (y === 'center') {\n            if (radius) y = Math.floor(elmHeight / 2);else y = Math.floor(elmHeight / 2 - height / 2);\n          } else if (y === 'bottom') y = Math.floor(elmHeight - height);\n        } else if ((y + '').substr(-1) === '%') {\n          y = elmHeight * parseInt(y, 10) / 100;\n        } else {\n          y = 0;\n        }\n\n        args.y = y;\n        args.x = x;\n        return args;\n      }\n      /**\n       * Return all documentStyles to a especified origami context\n       * @returns undefined\n       */\n\n\n      function defineDocumentStyles() {\n        for (var i = 0; i < document.styleSheets.length; i++) {\n          var mysheet = document.styleSheets[i],\n              myrules = mysheet.cssRules ? mysheet.cssRules : mysheet.rules;\n          config.documentStyles.push(myrules);\n        }\n      }\n      /**\n       * Merge defaults with user options\n       * @param {Object} defaults Default settings\n       * @param {Object} options User options\n       * @returns {Object} Merged values of defaults and options\n       */\n\n\n      function extend(a, b, undefOnly) {\n        for (var prop in b) {\n          if (hasOwn.call(b, prop)) {\n            // Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n            // This block runs on every environment, so `global` is being used instead of `window`\n            // to avoid errors on node.\n            if (prop !== \"constructor\" || a !== commonjsGlobal) {\n              if (b[prop] === undefined) {\n                delete a[prop];\n              } else if (!(undefOnly && typeof a[prop] !== \"undefined\")) {\n                a[prop] = b[prop];\n              }\n            }\n          }\n        }\n\n        return a;\n      }\n      /**\n       * Get Style Rule from a specified element\n       * @param {String} selector from element\n       * @param {Array} Document Style Rules\n       * @returns {Object} Merged values of defaults and options\n       */\n\n\n      function styleRuleValueFrom(selector, documentStyleRules) {\n        for (var j = 0; j < documentStyleRules.length; j++) {\n          if (documentStyleRules[j].selectorText && documentStyleRules[j].selectorText.toLowerCase() === selector) {\n            return documentStyleRules[j].style;\n          }\n        }\n      }\n      /**\n       * Clone a object\n       * @param {Object} object\n       * @returns {Object} cloned object\n       */\n\n\n      function clone(obj) {\n        if (null == obj || \"object\" != typeof obj) return obj;\n        var copy = obj.constructor();\n\n        for (var attr in obj) {\n          if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n        }\n\n        return copy;\n      }\n\n      function Screen(currentContext) {\n        this.paper = currentContext;\n      }\n\n      Screen.prototype.translate = function (params) {\n        this.paper.ctx.translate(params.x, params.y);\n      };\n\n      Screen.prototype.background = function (params) {\n        this.paper.element.style.backgroundColor = params.color;\n      };\n\n      Screen.prototype.restore = function () {\n        this.paper.ctx.restore();\n      };\n\n      Screen.prototype.save = function () {\n        this.paper.ctx.save();\n      };\n\n      Screen.prototype.composition = function (params) {\n        this.paper.ctx.globalCompositeOperation = params.globalComposite;\n      };\n\n      Screen.prototype.rotate = function (params) {\n        this.paper.ctx.rotate(params.degrees);\n      };\n\n      Screen.prototype.scale = function (params) {\n        this.paper.ctx.scale(params.width, params.height);\n      };\n\n      Screen.prototype.flip = function (params) {\n        this.paper.flip = 'horizontal';\n        if (params.type && typeof params.type === 'string') this.paper.flip = params.type;\n      };\n\n      Screen.prototype.flipEnd = function () {\n        this.paper.flip = false;\n      };\n\n      Screen.prototype.clear = function () {\n        this.paper.ctx.clearRect(0, 0, this.paper.width, this.paper.height);\n      };\n\n      function ArcShape(params) {\n        var args = params.args,\n            style = args.style,\n            def = config.defaults.arc;\n        this.paper.ctx.beginPath();\n        this.paper.ctx.setLineDash(style.borderStyle);\n        this.paper.ctx.arc(args.x, args.y, args.r || def.radius, args.sAngle || 0, args.eAngle || 2 * Math.PI);\n        this.paper.ctx.fillStyle = style.background || style.bg ? style.background || style.bg : def.background;\n        this.paper.ctx.fill();\n        this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n        this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n        this.paper.ctx.stroke();\n        this.paper.ctx.setLineDash([]);\n        this.paper.ctx.closePath();\n      }\n\n      Screen.prototype.arc = ArcShape;\n\n      Origami.arc = function () {\n        var args = [].slice.call(arguments);\n        args = argsByRules(args, ['x', 'y', 'r', 'sAngle', 'eAngle']);\n        queue('arc', {\n          args: args\n        });\n        return this;\n      };\n\n      function ImageShape(params) {\n        var image = params.image,\n            x = params.x,\n            y = params.y,\n            width = params.width,\n            height = params.height;\n        this.paper.ctx.save();\n\n        if (this.paper.flip) {\n          if (this.paper.flip === 'horizontal') {\n            this.paper.ctx.scale(-1, 1);\n            width = width * -1;\n            x = x * -1;\n          }\n\n          if (this.paper.flip === 'vertical') {\n            this.paper.ctx.scale(1, -1);\n            height = height * -1;\n            y = y * -1;\n          }\n        }\n\n        this.paper.ctx.beginPath();\n        this.paper.ctx.drawImage(image, Math.floor(x || 0), Math.floor(y || 0), width, height);\n        this.paper.ctx.closePath();\n        this.paper.ctx.restore();\n      }\n\n      Screen.prototype.image = ImageShape;\n\n      Origami.image = function (image, x, y, width, height) {\n        var self = this;\n        if (!image) return this;\n\n        if (typeof image === 'string') {\n          var img = new Image();\n          img.src = image;\n          image = img;\n        }\n\n        var item = {\n          image: image,\n          x: x,\n          y: y,\n          width: width,\n          height: height\n        };\n        if (typeof item.x === 'string' && typeof item.y === 'string') item = smartCoordinates(item);\n\n        if (image.complete) {\n          item.width = width || image.naturalWidth;\n          item.height = height || image.naturalHeight;\n          queue('image', item);\n          return self;\n        }\n\n        queue('image', item, false);\n        var reference = self.paper.queue.length - 1,\n            currentQueue = config.contexts[this.paper.index].queue[reference];\n        image.addEventListener('load', function () {\n          if (!currentQueue) return false;\n          currentQueue.params.width = item.width || image.naturalWidth;\n          currentQueue.params.height = item.height || image.naturalHeight;\n          currentQueue.loaded = true;\n        });\n        image.addEventListener('error', function () {\n          if (!currentQueue) return false;\n          currentQueue.failed = true;\n        });\n        return self;\n      };\n\n      function LineShape(params) {\n        var def = config.defaults.line,\n            style = params.style,\n            pointA = params.pointA,\n            pointB = params.pointB;\n        this.paper.ctx.beginPath();\n        this.paper.ctx.setLineDash(style.borderStyle);\n        this.paper.ctx.moveTo(pointA.x || 0, pointA.y || 0);\n        this.paper.ctx.lineTo(pointB.x || 0, pointB.y || 0);\n        this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n        this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n        this.paper.ctx.stroke();\n        this.paper.ctx.setLineDash([]);\n        this.paper.ctx.closePath();\n      }\n\n      Screen.prototype.line = LineShape;\n\n      Origami.line = function (pointA, pointB, style) {\n        style = normalizeStyle(style);\n        queue('line', {\n          pointA: pointA,\n          pointB: pointB,\n          style: style\n        });\n        return this;\n      };\n\n      function PolygonShape(params) {\n        var args = params.args,\n            style = params.style,\n            def = config.defaults.polygon;\n        this.paper.ctx.beginPath();\n        this.paper.ctx.setLineDash(style.borderStyle);\n        this.paper.ctx.fillStyle = style.background ? style.background : def.background;\n        this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n        this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n\n        for (var p = 0; p < args.length; p++) {\n          if (!args[p].x) continue;\n          if (p) this.paper.ctx.lineTo(args[p].x, args[p].y);else this.paper.ctx.moveTo(args[p].x, args[p].y);\n        }\n\n        this.paper.ctx.fill();\n        this.paper.ctx.stroke();\n        this.paper.ctx.setLineDash([]);\n        this.paper.ctx.closePath();\n      }\n\n      Screen.prototype.polygon = PolygonShape;\n\n      Origami.polygon = function () {\n        var args = [].slice.call(arguments),\n            settedArgs = argsByRules(args);\n        queue('polygon', {\n          style: settedArgs.style,\n          args: args\n        });\n        return this;\n      };\n\n      function RectShape(params) {\n        var def = config.defaults.rect,\n            style = params.style,\n            args = params.args;\n        this.paper.ctx.beginPath();\n        this.paper.ctx.setLineDash(style.borderStyle);\n        this.paper.ctx.fillStyle = style.background ? style.background : def.background;\n        this.paper.ctx.fillRect(args.x, args.y, args.width, args.height || args.width);\n        this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n        this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n        this.paper.ctx.strokeRect(args.x, args.y, args.width, args.height || args.width);\n        this.paper.ctx.setLineDash([]);\n        this.paper.ctx.closePath();\n      }\n\n      Screen.prototype.rect = RectShape;\n\n      Origami.rect = function () {\n        var args = [].slice.call(arguments);\n        args = argsByRules(args);\n        queue('rect', {\n          style: args.style,\n          args: args\n        });\n        return this;\n      };\n\n      Origami.border = function () {\n        var args = [].slice.call(arguments);\n        args = argsByRules(args);\n        queue('rect', {\n          style: args.style,\n          args: {\n            x: 0,\n            y: 0,\n            width: this.paper.width,\n            height: this.paper.height\n          }\n        });\n        return this;\n      };\n\n      function CSSShape(style) {\n        var self = this,\n            style = config.virtualStyles[style];\n        if (!style) return self; // TODO: Draw in all canvas\n\n        var data = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' + self.paper.width + 'px\" height=\"' + self.paper.height + 'px\">' + '<foreignObject width=\"100%\" height=\"100%\">' + '<div xmlns=\"http://www.w3.org/1999/xhtml\">' + '<div style=\"' + style.cssText + '\"></div>' + '</div></foreignObject>' + '</svg>';\n        var DOMURL = window.URL || window.webkitURL || window,\n            img = new Image(),\n            svg = new Blob([data], {\n          type: 'image/svg+xml;charset=utf-8'\n        });\n        var url = DOMURL.createObjectURL(svg);\n        img.src = url;\n        img.addEventListener('load', function () {\n          self.paper.ctx.beginPath();\n          self.paper.ctx.drawImage(img, 0, 0);\n          DOMURL.revokeObjectURL(url);\n          self.paper.ctx.closePath();\n        });\n        return self;\n      }\n\n      Screen.prototype.CSSShape = CSSShape;\n\n      Origami.shape = function (style) {\n        queue('CSSShape', style);\n        return this;\n      };\n\n      function SpriteShape(params) {\n        var properties = params.properties,\n            dw = params.width / properties.frames;\n        drawSprite.call(this, {\n          image: params.image,\n          posX: 0,\n          posY: 0,\n          frame: properties.frames,\n          loop: properties.loop,\n          width: dw,\n          widthTotal: params.width,\n          height: params.height,\n          dx: params.x,\n          dy: params.y,\n          speed: properties.speed,\n          animation: null\n        });\n      }\n\n      function drawSprite(sprite) {\n        var self = this;\n\n        if (sprite.posX === sprite.widthTotal) {\n          if (sprite.loop === false) {\n            window.cancelAnimationFrame(sprite.animation);\n            return;\n          }\n\n          sprite.posX = 0;\n        }\n\n        self.paper.ctx.clearRect(sprite.dx, sprite.dy, sprite.width, sprite.height);\n        self.paper.ctx.beginPath();\n        self.paper.ctx.drawImage(sprite.image, sprite.posX, sprite.posY, sprite.width, sprite.height, sprite.dx, sprite.dy, sprite.width, sprite.height);\n        self.paper.ctx.closePath();\n        sprite.posX = sprite.posX + sprite.width;\n        setTimeout(function () {\n          sprite.animation = window.requestAnimationFrame(drawSprite.bind(self, sprite));\n        }, sprite.speed);\n      }\n\n      Screen.prototype.sprite = SpriteShape;\n\n      Origami.sprite = function (x, y, properties) {\n        var self = this;\n        if (!properties || !properties.src) return this;\n        var image = new Image(),\n            frames = properties.frames || 0,\n            loop = properties.loop || true,\n            speed = properties.speed || 10;\n        image.src = properties.src;\n        var item = {\n          x: x,\n          y: y,\n          image: image,\n          properties: properties,\n          width: 0,\n          height: 0\n        };\n\n        if (image.complete) {\n          item.width = image.naturalWidth;\n          item.height = image.naturalHeight;\n          queue('sprite', item);\n          return self;\n        }\n\n        queue('sprite', item, false);\n        var reference = self.paper.queue.length - 1,\n            currentQueue = config.contexts[this.paper.index].queue[reference];\n        image.addEventListener('load', function () {\n          if (!currentQueue) return false;\n          currentQueue.params.width = image.naturalWidth;\n          currentQueue.params.height = image.naturalHeight;\n          currentQueue.loaded = true;\n        });\n        image.addEventListener('error', function () {\n          if (!currentQueue) return false;\n          currentQueue.failed = true;\n        });\n        return this;\n      };\n\n      function TextShape(params) {\n        var def = config.defaults.text,\n            text = params.text,\n            x = params.x,\n            y = params.y,\n            style = params.style;\n        this.paper.ctx.beginPath();\n        this.paper.ctx.setLineDash(style.borderStyle);\n        this.paper.ctx.lineWidth = style.borderSize ? style.borderSize : def.lineWidth;\n        this.paper.ctx.strokeStyle = style.borderColor ? style.borderColor : def.strokeStyle;\n        this.paper.ctx.font = style.font || def.font;\n        this.paper.ctx.fillStyle = style.color || def.color;\n        this.paper.ctx.textAlign = style.align || def.align;\n        this.paper.ctx.fillText(text, x, y);\n        this.paper.ctx.strokeText(text, x, y);\n        this.paper.ctx.fill();\n        this.paper.ctx.stroke();\n        this.paper.ctx.setLineDash([]);\n        this.paper.ctx.closePath();\n      }\n\n      Screen.prototype.text = TextShape;\n\n      Origami.text = function (text, x, y, style) {\n        style = normalizeStyle(style);\n        var item = {\n          text: text,\n          x: x,\n          y: y,\n          style: style\n        };\n        if (typeof item.x === 'string' && typeof item.y === 'string') item = smartCoordinates(item);\n        queue('text', item);\n        return this;\n      };\n\n      function ChartLine(config) {\n        var ctx = this.paper.ctx,\n            width = this.paper.width,\n            height = this.paper.height;\n        var line = getBorderStyleObject(config.line || \"1px solid #000\");\n        var lineVariance = 2;\n        var xPadding = 40;\n        var yPadding = 40;\n        var data = [];\n        var gridLines = {\n          vertical: true,\n          horizontal: true\n        };\n\n        if (config.gridLines) {\n          if (config.gridLines.vertical === false) gridLines.vertical = false;\n          if (config.gridLines.horizontal === false) gridLines.horizontal = false;\n        }\n\n        for (var i = 0; i < config.labels.length; i++) {\n          data.push({\n            X: config.labels[i],\n            Y: config.data[i]\n          });\n        }\n\n        function getMaxY() {\n          var max = 0;\n\n          for (var i = 0; i < data.length; i++) {\n            if (data[i].Y > max) {\n              max = data[i].Y;\n            }\n          }\n\n          max += 10 - max % 10;\n          return max;\n        }\n\n        function getXPixel(val) {\n          return (width - xPadding) / data.length * val + xPadding;\n        }\n\n        function getYPixel(val) {\n          return height - (height - yPadding) / getMaxY() * val - yPadding;\n        }\n\n        ctx.lineWidth = 0.8;\n        ctx.strokeStyle = '#999';\n        ctx.font = 'normal 12px Helvetica';\n        ctx.fillStyle = '#5e5e5e';\n        ctx.textAlign = \"center\";\n        ctx.beginPath();\n        ctx.moveTo(xPadding, yPadding / lineVariance);\n        ctx.lineTo(xPadding, height - yPadding);\n        ctx.lineTo(width - xPadding / lineVariance, height - yPadding);\n        ctx.stroke(); // Data\n\n        ctx.textAlign = \"right\";\n        ctx.textBaseline = \"middle\";\n\n        for (var i = 0; i < getMaxY(); i += 10) {\n          if (gridLines.horizontal) {\n            ctx.beginPath();\n            ctx.lineWidth = 0.8;\n            ctx.strokeStyle = '#e7e7e7';\n            ctx.moveTo(xPadding - 5, getYPixel(i));\n            ctx.lineTo(width - xPadding / lineVariance, getYPixel(i));\n            ctx.stroke();\n          }\n\n          ctx.fillText(i, xPadding - 10, getYPixel(i));\n        } // Labels\n\n\n        ctx.textAlign = \"left\";\n\n        for (var i = 0; i < data.length; i++) {\n          if (gridLines.vertical) {\n            ctx.beginPath();\n            ctx.lineWidth = 0.8;\n            ctx.strokeStyle = '#e7e7e7';\n            ctx.moveTo(getXPixel(i), height - yPadding + 10);\n            ctx.lineTo(getXPixel(i), yPadding / lineVariance);\n            ctx.stroke();\n          }\n\n          ctx.fillText(data[i].X, getXPixel(i), height - yPadding + 20);\n        }\n\n        ctx.beginPath();\n        ctx.lineWidth = line.borderSize;\n        ctx.setLineDash(line.borderStyle);\n        ctx.strokeStyle = line.borderColor;\n        ctx.moveTo(getXPixel(0), getYPixel(data[0].Y));\n\n        for (var i = 1; i < data.length; i++) {\n          ctx.lineTo(getXPixel(i), getYPixel(data[i].Y));\n        }\n\n        ctx.stroke();\n        ctx.setLineDash([]);\n\n        if (config.points) {\n          ctx.fillStyle = config.pointsColor ? config.pointsColor : 'rgb(75,75,75)';\n\n          for (var i = 0; i < data.length; i++) {\n            ctx.beginPath();\n            ctx.arc(getXPixel(i), getYPixel(data[i].Y), 3, 0, Math.PI * 2, true);\n            ctx.fill();\n          }\n        }\n      }\n\n      Screen.prototype.chartLine = ChartLine;\n\n      Origami.chartLine = function (config) {\n        queue('chartLine', config);\n        return this;\n      }; // Resource.js\n\n\n      Origami.background = function (color) {\n        queue('background', {\n          color: color\n        });\n        return this;\n      };\n\n      Origami.restore = function () {\n        queue('restore');\n        return this;\n      };\n\n      Origami.save = function () {\n        queue('save');\n        return this;\n      };\n\n      Origami.composition = function (globalComposite) {\n        queue('composition', {\n          globalComposite: globalComposite\n        });\n        return this;\n      };\n\n      Origami.translate = function (x, y) {\n        if (x === undefined || x === null) {\n          x = 'reset';\n        }\n\n        if (typeof x === 'string') {\n          if (x === 'center') {\n            x = context.width / 2;\n            y = context.height / 2;\n          }\n\n          if (x === 'reset') {\n            x = -context.width / 2;\n            y = -context.height / 2;\n          }\n        }\n\n        queue('translate', {\n          x: x,\n          y: y\n        });\n        return this;\n      };\n\n      Origami.rotate = function (degrees) {\n        if (typeof degrees === 'undefined') degrees = 'slow';\n\n        if (typeof degrees === 'string') {\n          // Slow\n          if (degrees === 'slow') degrees = 2 * Math.PI / 60 * new Date().getSeconds() + 2 * Math.PI / 60000 * new Date().getMilliseconds(); // Normal\n          else if (degrees === 'normal') degrees = 2 * Math.PI / 30 * new Date().getSeconds() + 2 * Math.PI / 30000 * new Date().getMilliseconds(); // Fast\n          else if (degrees === 'fast') degrees = 2 * Math.PI / 6 * new Date().getSeconds() + 2 * Math.PI / 6000 * new Date().getMilliseconds();\n        }\n\n        queue('rotate', {\n          degrees: degrees\n        });\n        return this;\n      };\n\n      Origami.stopRender = function () {\n        window.cancelAnimationFrame(this.paper.frame);\n        this.paper.frame = false;\n      };\n\n      Origami.play = function () {\n        this.paper.frame = 1;\n        return this;\n      };\n\n      Origami.startRender = function (fn) {\n        var self = this;\n        if (self.paper.frame === false) return;\n        self.draw(function () {\n          self.paper.frame = window.requestAnimationFrame(fn.bind(this));\n        });\n      };\n\n      Origami.scale = function (width, height) {\n        queue('scale', {\n          width: width,\n          height: height\n        });\n        return this;\n      };\n\n      Origami.flip = function (type) {\n        queue('flip', {\n          type: type\n        });\n        return this;\n      };\n\n      Origami.flipEnd = function () {\n        queue('flipEnd');\n        return this;\n      };\n\n      Origami.clear = function () {\n        queue('clear');\n        return this;\n      };\n\n      Origami.on = function (ev, fn) {\n        this.paper.element.addEventListener(ev, fn);\n        return this;\n      };\n\n      var factory = extend(Origami.init.bind(this), Origami); // For consistency with CommonJS environments' exports\n\n      if (module && module.exports) {\n        module.exports = factory;\n      } // For CommonJS with exports, but without module.exports, like Rhino\n      else if (exports) {\n        exports.origami = factory;\n      } // For browser, export only select globals\n      else if (true) {\n        window.origami = extend(Origami.init.bind(Origami), Origami);\n      } // Get a reference to the global object\n\n    })(function () {\n      return this;\n    }());\n  });\n  var origami_2 = origami_1.origami;\n\n  var drawRoundLayers = function drawRoundLayers(functionContext) {\n    var data = functionContext.data,\n        options = functionContext.options,\n        ctx = functionContext.ctx,\n        h = functionContext.h,\n        w = functionContext.w,\n        Helper = functionContext.Helper,\n        canvasId = functionContext.canvasId;\n    var helper = new Helper(ctx);\n    var origamiContext = {};\n    var origami = origami_1.bind(origamiContext);\n    origami(ctx).rect(10, 10, 40, 40).draw();\n  }; //options:type,colors,stroke\n\n\n  function visualize(data, canvasId) {\n    var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    var frame = arguments.length > 3 ? arguments[3] : undefined;\n    //make a clone of options\n    options = _objectSpread({}, options); //options\n\n    if (!options.stroke) options.stroke = 1;\n    if (!options.colors) options.colors = [\"#d92027\", \"#ff9234\", \"#ffcd3c\", \"#35d0ba\"];\n    var canvas = document.getElementById(canvasId);\n    if (!canvas) return;\n    var ctx = canvas.getContext(\"2d\");\n    var h = canvas.height;\n    var w = canvas.width;\n    ctx.strokeStyle = options.colors[0];\n    ctx.lineWidth = options.stroke;\n    var typeMap = {\n      \"bars\": drawBars,\n      \"bars blocks\": drawBarsBlocks,\n      \"big bars\": drawBigBars,\n      \"cubes\": drawCubes,\n      \"dualbars\": drawDualbars,\n      \"dualbars blocks\": drawDualbarsBlocks,\n      \"fireworks\": drawFireworks,\n      \"flower\": drawFlower,\n      \"flower blocks\": drawFlowerBlocks,\n      \"orbs\": drawOrbs,\n      \"ring\": drawRing,\n      \"rings\": drawRings,\n      \"round layers\": drawRoundLayers,\n      \"round wave\": drawRoundWave,\n      \"shine\": drawShine,\n      \"shine rings\": drawShineRings,\n      \"shockwave\": drawShockwave,\n      \"star\": drawStar,\n      \"static\": drawStatic,\n      \"stitches\": drawStitches,\n      \"wave\": drawWave,\n      \"web\": drawWeb\n    };\n    var frameRateMap = {\n      \"bars\": 1,\n      \"bars blocks\": 1,\n      \"big bars\": 1,\n      \"cubes\": 1,\n      \"dualbars\": 1,\n      \"dualbars blocks\": 1,\n      \"fireworks\": 1,\n      \"flower\": 1,\n      \"flower blocks\": 1,\n      \"ring\": 1,\n      \"rings\": 1,\n      \"round layers\": 1,\n      \"round wave\": 1,\n      \"orbs\": 1,\n      \"shine\": 1,\n      \"shine rings\": 1,\n      \"shockwave\": 1,\n      \"star\": 1,\n      \"static\": 1,\n      \"stitches\": 1,\n      \"wave\": 1,\n      \"web\": 1\n    };\n    var functionContext = {\n      data: data,\n      options: options,\n      ctx: ctx,\n      h: h,\n      w: w,\n      Helper: this.Helper,\n      canvasId: canvasId\n    };\n    if (typeof options.type == \"string\") options.type = [options.type];\n    options.type.forEach(function (type) {\n      //abide by the frame rate\n      if (frame % frameRateMap[type] === 0) {\n        //clear canvas\n        ctx.clearRect(0, 0, w, h);\n        ctx.beginPath();\n        typeMap[type](functionContext);\n      }\n    });\n  }\n\n  function Helper(ctx) {\n    this.ctx = ctx;\n    this.mainColor = \"black\";\n  }\n\n  Helper.prototype = {\n    __toRadians__: function __toRadians__(degree) {\n      return degree * Math.PI / 180;\n    },\n    __rotatePoint__: function __rotatePoint__(_ref2, _ref3, degree) {\n      var _ref4 = _slicedToArray(_ref2, 2),\n          pointX = _ref4[0],\n          pointY = _ref4[1];\n\n      var _ref5 = _slicedToArray(_ref3, 2),\n          originX = _ref5[0],\n          originY = _ref5[1];\n\n      //clockwise\n      var angle = this.__toRadians__(degree);\n\n      var rotatedX = Math.cos(angle) * (pointX - originX) - Math.sin(angle) * (pointY - originY) + originX;\n      var rotatedY = Math.sin(angle) * (pointX - originX) + Math.cos(angle) * (pointY - originY) + originY;\n      return [rotatedX, rotatedY];\n    },\n    mutateData: function mutateData(data, type) {\n      var extra = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n      if (type === \"mirror\") {\n        var rtn = [];\n\n        for (var i = 0; i < data.length; i += 2) {\n          rtn.push(data[i]);\n        }\n\n        rtn = [].concat(_toConsumableArray(rtn), _toConsumableArray(rtn.reverse()));\n        return rtn;\n      }\n\n      if (type === \"shrink\") {\n        //resize array by % of current array\n        if (extra < 1) {\n          extra = data.length * extra;\n        }\n\n        var _rtn = [];\n        var splitAt = Math.floor(data.length / extra);\n\n        for (var _i = 1; _i <= extra; _i++) {\n          var arraySection = data.slice(_i * splitAt, _i * splitAt + splitAt);\n          var middle = arraySection[Math.floor(arraySection.length / 2)];\n\n          _rtn.push(middle);\n        }\n\n        return _rtn;\n      }\n\n      if (type === \"split\") {\n        var size = Math.floor(data.length / extra);\n        var _rtn2 = [];\n        var temp = [];\n        var track = 0;\n\n        for (var _i2 = 0; _i2 <= size * extra; _i2++) {\n          if (track === size) {\n            _rtn2.push(temp);\n\n            temp = [];\n            track = 0;\n          }\n\n          temp.push(data[_i2]);\n          track++;\n        }\n\n        return _rtn2;\n      }\n\n      if (type === \"scale\") {\n        var scalePercent = extra / 255;\n        if (extra <= 3 && extra >= 0) scalePercent = extra;\n\n        var _rtn3 = data.map(function (value) {\n          return value * scalePercent;\n        });\n\n        return _rtn3;\n      }\n\n      if (type === \"organize\") {\n        var _rtn4 = {};\n        _rtn4.base = data.slice(60, 120);\n        _rtn4.vocals = data.slice(120, 255);\n        _rtn4.mids = data.slice(255, 2000);\n        return _rtn4;\n      }\n\n      if (type === \"reverb\") {\n        var _rtn5 = [];\n        data.forEach(function (val, i) {\n          _rtn5.push(val - (data[i + 1] || 0));\n        });\n        return _rtn5;\n      }\n\n      if (type === \"amp\") {\n        var _rtn6 = [];\n        data.forEach(function (val) {\n          _rtn6.push(val * (extra + 1));\n        });\n        return _rtn6;\n      }\n\n      if (type === \"min\") {\n        var _rtn7 = [];\n        data.forEach(function (value) {\n          if (value < extra) value = extra;\n\n          _rtn7.push(value);\n        });\n        return _rtn7;\n      }\n    },\n    getPoints: function getPoints(shape, size, _ref6, pointCount, endPoints) {\n      var _ref7 = _slicedToArray(_ref6, 2),\n          originX = _ref7[0],\n          originY = _ref7[1];\n\n      var options = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : {};\n      var _options$offset = options.offset,\n          offset = _options$offset === void 0 ? 0 : _options$offset,\n          _options$rotate = options.rotate,\n          rotate = _options$rotate === void 0 ? 0 : _options$rotate,\n          _options$customOrigin = options.customOrigin,\n          customOrigin = _options$customOrigin === void 0 ? [] : _options$customOrigin;\n      var rtn = {\n        start: [],\n        end: []\n      };\n\n      if (shape === \"circle\") {\n        var degreePerPoint = 360 / pointCount;\n\n        var radianPerPoint = this.__toRadians__(degreePerPoint);\n\n        var radius = size / 2;\n\n        for (var i = 1; i <= pointCount; i++) {\n          var currentRadian = radianPerPoint * i;\n          var currentEndPoint = endPoints[i - 1];\n          var pointOffset = endPoints[i - 1] * (offset / 100);\n          var x = originX + (radius - pointOffset) * Math.cos(currentRadian);\n          var y = originY + (radius - pointOffset) * Math.sin(currentRadian);\n\n          var point1 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n          rtn.start.push(point1);\n          x = originX + (radius - pointOffset + currentEndPoint) * Math.cos(currentRadian);\n          y = originY + (radius - pointOffset + currentEndPoint) * Math.sin(currentRadian);\n\n          var point2 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n          rtn.end.push(point2);\n        }\n\n        return rtn;\n      }\n\n      if (shape === \"line\") {\n        var increment = size / pointCount;\n        originX = customOrigin[0] || originX;\n        originY = customOrigin[1] || originY;\n\n        for (var _i3 = 0; _i3 <= pointCount; _i3++) {\n          var degree = rotate;\n\n          var _pointOffset = endPoints[_i3] * (offset / 100);\n\n          var startingPoint = this.__rotatePoint__([originX + _i3 * increment, originY - _pointOffset], [originX, originY], degree);\n\n          rtn.start.push(startingPoint);\n\n          var endingPoint = this.__rotatePoint__([originX + _i3 * increment, originY + endPoints[_i3] - _pointOffset], [originX, originY], degree);\n\n          rtn.end.push(endingPoint);\n        }\n\n        return rtn;\n      }\n    },\n    drawCircle: function drawCircle(_ref8, diameter) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          x = _ref9[0],\n          y = _ref9[1];\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var color = options.color,\n          _options$lineColor = options.lineColor,\n          lineColor = _options$lineColor === void 0 ? this.ctx.strokeStyle : _options$lineColor;\n      this.ctx.beginPath();\n      this.ctx.arc(x, y, diameter / 2, 0, 2 * Math.PI);\n      this.ctx.strokeStyle = lineColor;\n      this.ctx.stroke();\n      this.ctx.fillStyle = color;\n      if (color) this.ctx.fill();\n    },\n    drawOval: function drawOval(_ref10, height, width) {\n      var _ref11 = _slicedToArray(_ref10, 2),\n          x = _ref11[0],\n          y = _ref11[1];\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var _options$rotation = options.rotation,\n          rotation = _options$rotation === void 0 ? 0 : _options$rotation,\n          color = options.color,\n          _options$lineColor2 = options.lineColor,\n          lineColor = _options$lineColor2 === void 0 ? this.ctx.strokeStyle : _options$lineColor2;\n      if (rotation) rotation = this.__toRadians__(rotation);\n      this.ctx.beginPath();\n      this.ctx.ellipse(x, y, width, height, rotation, 0, 2 * Math.PI);\n      this.ctx.strokeStyle = lineColor;\n      this.ctx.stroke();\n      this.ctx.fillStyle = color;\n      if (color) this.ctx.fill();\n    },\n    drawSquare: function drawSquare(_ref12, diameter) {\n      var _ref13 = _slicedToArray(_ref12, 2),\n          x = _ref13[0],\n          y = _ref13[1];\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      this.drawRectangle([x, y], diameter, diameter, options);\n    },\n    drawRectangle: function drawRectangle(_ref14, height, width) {\n      var _ref15 = _slicedToArray(_ref14, 2),\n          x = _ref15[0],\n          y = _ref15[1];\n\n      var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n      var color = options.color,\n          _options$lineColor3 = options.lineColor,\n          lineColor = _options$lineColor3 === void 0 ? this.ctx.strokeStyle : _options$lineColor3,\n          _options$radius = options.radius,\n          radius = _options$radius === void 0 ? 0 : _options$radius,\n          _options$rotate2 = options.rotate,\n          rotate = _options$rotate2 === void 0 ? 0 : _options$rotate2; // if (width < 2 * radius) radius = width / 2;\n      // if (height < 2 * radius) radius = height / 2;\n\n      this.ctx.beginPath();\n      this.ctx.moveTo(x + radius, y);\n\n      var p1 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n\n      var p2 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n\n      this.ctx.arcTo(p1[0], p1[1], p2[0], p2[1], radius);\n\n      var p3 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n\n      var p4 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n\n      this.ctx.arcTo(p3[0], p3[1], p4[0], p4[1], radius);\n\n      var p5 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n\n      var p6 = this.__rotatePoint__([x, y], [x, y], rotate);\n\n      this.ctx.arcTo(p5[0], p5[1], p6[0], p6[1], radius);\n\n      var p7 = this.__rotatePoint__([x, y], [x, y], rotate);\n\n      var p8 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n\n      this.ctx.arcTo(p7[0], p7[1], p8[0], p8[1], radius);\n      this.ctx.closePath();\n      this.ctx.strokeStyle = lineColor;\n      this.ctx.stroke();\n      this.ctx.fillStyle = color;\n      if (color) this.ctx.fill();\n    },\n    drawLine: function drawLine(_ref16, _ref17) {\n      var _ref18 = _slicedToArray(_ref16, 2),\n          fromX = _ref18[0],\n          fromY = _ref18[1];\n\n      var _ref19 = _slicedToArray(_ref17, 2),\n          toX = _ref19[0],\n          toY = _ref19[1];\n\n      var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var _options$lineColor4 = options.lineColor,\n          lineColor = _options$lineColor4 === void 0 ? this.ctx.strokeStyle : _options$lineColor4;\n      this.ctx.beginPath();\n      this.ctx.moveTo(fromX, fromY);\n      this.ctx.lineTo(toX, toY);\n      this.ctx.strokeStyle = lineColor;\n      this.ctx.stroke();\n    },\n    drawPolygon: function drawPolygon(points) {\n      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var color = options.color,\n          _options$lineColor5 = options.lineColor,\n          lineColor = _options$lineColor5 === void 0 ? this.ctx.strokeStyle : _options$lineColor5,\n          _options$radius2 = options.radius,\n          radius = _options$radius2 === void 0 ? 0 : _options$radius2,\n          _options$close = options.close,\n          close = _options$close === void 0 ? false : _options$close;\n\n      function getRoundedPoint(x1, y1, x2, y2, radius, first) {\n        var total = Math.sqrt(Math.pow(x2 - x1, 2) + Math.pow(y2 - y1, 2));\n        var idx = first ? radius / total : (total - radius) / total;\n        return [x1 + idx * (x2 - x1), y1 + idx * (y2 - y1)];\n      }\n\n      function getRoundedPoints(pts, radius) {\n        var len = pts.length;\n        var res = new Array(len);\n\n        for (var i2 = 0; i2 < len; i2++) {\n          var i1 = i2 - 1;\n          var i3 = i2 + 1;\n          if (i1 < 0) i1 = len - 1;\n          if (i3 == len) i3 = 0;\n          var p1 = pts[i1];\n          var p2 = pts[i2];\n          var p3 = pts[i3];\n          var prevPt = getRoundedPoint(p1[0], p1[1], p2[0], p2[1], radius, false);\n          var nextPt = getRoundedPoint(p2[0], p2[1], p3[0], p3[1], radius, true);\n          res[i2] = [prevPt[0], prevPt[1], p2[0], p2[1], nextPt[0], nextPt[1]];\n        }\n\n        return res;\n      }\n\n      if (radius > 0) {\n        points = getRoundedPoints(points, radius);\n      }\n\n      var i,\n          pt,\n          len = points.length;\n\n      for (i = 0; i < len; i++) {\n        pt = points[i];\n\n        if (i == 0) {\n          this.ctx.beginPath();\n          this.ctx.moveTo(pt[0], pt[1]);\n        } else {\n          this.ctx.lineTo(pt[0], pt[1]);\n        }\n\n        if (radius > 0) {\n          this.ctx.quadraticCurveTo(pt[2], pt[3], pt[4], pt[5]);\n        }\n      }\n\n      if (close) this.ctx.closePath();\n      this.ctx.strokeStyle = lineColor;\n      this.ctx.stroke();\n      this.ctx.fillStyle = color;\n      if (color) this.ctx.fill();\n    }\n  };\n\n  function Wave() {\n    this.current_stream = {};\n    this.sources = {};\n    this.onFileLoad = null;\n    this.activeElements = {};\n    this.activated = false;\n    window.AudioContext = window.AudioContext || window.webkitAudioContext;\n  }\n\n  Wave.prototype = _objectSpread(_objectSpread({\n    fromElement: fromElement,\n    fromFile: fromFile\n  }, fromStream$1), {}, {\n    visualize: visualize,\n    Helper: Helper\n  });\n  return Wave;\n}();","map":{"version":3,"sources":["/Users/amit/Projects/sound-visualization/client/static/lib/wave.js"],"names":["Wave","fromElement","element_id","canvas_id","options","globalAccessKey","initGlobalObject","elementId","window","getGlobal","accessKey","setGlobal","value","returnValue","waveContext","element","document","getElementById","crossOrigin","run","activated","activeCanvas","JSON","stringify","activeElements","count","currentCount","audioCtx","id","AudioContext","analyser","createAnalyser","source","mediaElement","createMediaElementSource","oscillator","createOscillator","frequency","connect","destination","start","stop","fftsize","bufferLength","frequencyBinCount","data","Uint8Array","frameCount","renderFrame","requestAnimationFrame","getByteFrequencyData","visualize","bind","create","forEach","event","removeEventListener","once","call","body","addEventListener","fromFile","file","stroke","audio","Audio","src","fftSize","file_data","temp_data","getWave","fdi","self","duration","Infinity","Promise","r","setTimeout","currentTime","Math","random","play","onplay","findSize","size","range","power","d","playbackRate","drawRate","setInterval","onended","undefined","clearInterval","canvas","createElement","height","innerHeight","width","innerWidth","image","toDataURL","onFileLoad","remove","fromStream","stream","current_stream","sources","toString","createMediaStreamSource","cancelAnimationFrame","animation","loop","stopStream","playStream","fromStream$1","drawWave","functionContext","ctx","h","w","Helper","colors","helper","mutateData","points","getPoints","length","offset","slice","end","push","drawPolygon","lineColor","color","radius","drawShine","cx","cy","percent","point_count","increase","PI","point","p","a","sx","cos","sy","sin","moveTo","dx","dy","lineTo","arc","fillStyle","fill","drawRing","fa","fx","fy","q","x","y","drawBars","breakpoint","floor","i","strokeStyle","beginPath","drawDualbars","min","mid","drawOrbs","mids","drawLine","drawCircle","drawFlower","drawFlowerBlocks","ax","ay","bx","by","ex","ey","drawBarsBlocks","rect","drawDualbarsBlocks","drawStar","top","bottom","t","closePath","b","drawRoundWave","drawRings","minDimension","vocals","outerCircle","innerCircle","close","middle","largerInner","innerBars","drawShineRings","base","outerBars","innerWave","thinLine","drawCubes","spacing","squareSize","colorIndex","squareCount","ceil","totalSquares","colorStop","j","origin","drawSquare","drawBigBars","drawRectangle","drawShockwave","wavePoints","invertedPoints","drawFireworks","rotate","drawStatic","prevPoint","drawWeb","dataCopy","drawStitches","commonjsGlobal","globalThis","global","createCommonjsModule","fn","module","exports","origami_1","Origami","paper","config","documentStyles","virtualStyles","contexts","defaults","background","lineWidth","polygon","line","text","font","prefix","warning","message","obj","console","warn","error","Error","concat","init","el","querySelector","existentContext","exists","getContext","clientWidth","clientHeight","context","current","queue","index","flip","frame","styles","defineDocumentStyles","selectors","arguments","style","styleRuleValueFrom","getPaper","canvasCtx","getContexts","cleanContexts","createComponent","component","props","draw","customRender","origami","abs","Screen","queueList","loaded","failed","params","assign","load","mOrigami","clone","loadInterval","dataLoad","filter","item","Queue","hasOwn","Object","prototype","hasOwnProperty","arr","isEqualNode","argsByRules","argsArray","rules","args","shift","normalizeStyle","smartCoordinates","getBorderStyleObject","prop","border","borderSize","borderColor","borderStyle","borderString","match","replace","elmWidth","elmHeight","axis","indexOf","substr","parseInt","styleSheets","mysheet","myrules","cssRules","extend","undefOnly","selector","documentStyleRules","selectorText","toLowerCase","copy","constructor","attr","currentContext","translate","backgroundColor","restore","save","composition","globalCompositeOperation","globalComposite","degrees","scale","type","flipEnd","clear","clearRect","ArcShape","def","setLineDash","sAngle","eAngle","bg","ImageShape","drawImage","img","Image","complete","naturalWidth","naturalHeight","reference","currentQueue","LineShape","pointA","pointB","PolygonShape","settedArgs","RectShape","fillRect","strokeRect","CSSShape","cssText","DOMURL","URL","webkitURL","svg","Blob","url","createObjectURL","revokeObjectURL","shape","SpriteShape","properties","dw","frames","drawSprite","posX","posY","widthTotal","speed","sprite","TextShape","textAlign","align","fillText","strokeText","ChartLine","lineVariance","xPadding","yPadding","gridLines","vertical","horizontal","labels","X","Y","getMaxY","max","getXPixel","val","getYPixel","textBaseline","pointsColor","chartLine","Date","getSeconds","getMilliseconds","stopRender","startRender","on","ev","factory","origami_2","drawRoundLayers","canvasId","origamiContext","typeMap","frameRateMap","mainColor","__toRadians__","degree","__rotatePoint__","pointX","pointY","originX","originY","angle","rotatedX","rotatedY","extra","rtn","reverse","splitAt","arraySection","temp","track","scalePercent","map","pointCount","endPoints","customOrigin","degreePerPoint","radianPerPoint","currentRadian","currentEndPoint","pointOffset","point1","point2","increment","startingPoint","endingPoint","diameter","drawOval","rotation","ellipse","p1","p2","arcTo","p3","p4","p5","p6","p7","p8","fromX","fromY","toX","toY","getRoundedPoint","x1","y1","x2","y2","first","total","sqrt","idx","getRoundedPoints","pts","len","res","Array","i2","i1","i3","prevPt","nextPt","pt","quadraticCurveTo","webkitAudioContext"],"mappings":"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","sourcesContent":["var Wave = (function () {\n    'use strict';\n\n    function fromElement(element_id, canvas_id, options) {\n        const globalAccessKey = [options.globalAccessKey || '$wave'];\n        const initGlobalObject = (elementId) => {\n            window[globalAccessKey] = window[globalAccessKey] || {};\n            window[globalAccessKey][elementId] = window[globalAccessKey][elementId] || {};\n        };\n\n        const getGlobal = options['getGlobal'] || function(elementId, accessKey) {\n            initGlobalObject(elementId);\n            return window[globalAccessKey][elementId][accessKey];\n        };\n\n        const setGlobal = options['setGlobal'] || function(elementId, accessKey, value) {\n            let returnValue = getGlobal(elementId);\n            if(!returnValue) {\n                window[globalAccessKey][elementId][accessKey] = window[globalAccessKey][elementId][accessKey] || value;\n                returnValue = window[globalAccessKey][elementId][accessKey];\n            }\n            return returnValue;\n        };\n\n        const waveContext = this;\n        let element = document.getElementById(element_id);\n        if (!element) return\n        element.crossOrigin = \"anonymous\";\n\n        function run() {\n            //user gesture has happened\n            this.activated = true;\n\n            //track current wave for canvas\n            this.activeCanvas = this.activeCanvas || {};\n            this.activeCanvas[canvas_id] = JSON.stringify(options);\n\n            //track elements used so multiple elements use the same data\n            this.activeElements[element_id] = this.activeElements[element_id] || {};\n            if (this.activeElements[element_id].count) this.activeElements[element_id].count += 1;\n            else this.activeElements[element_id].count = 1;\n\n            const currentCount = this.activeElements[element_id].count;\n\n            const audioCtx = setGlobal(element.id, 'audioCtx', new AudioContext());\n            const analyser = setGlobal(element.id, 'analyser', audioCtx.createAnalyser());\n\n            let source = getGlobal(element.id, 'source');\n            if (source) {\n                if (source.mediaElement !== element) {\n                    source = audioCtx.createMediaElementSource(element);\n                }\n            } else {\n                source = audioCtx.createMediaElementSource(element);\n            }\n            setGlobal(element.id, 'source', source);\n\n            //beep test for ios\n            const oscillator = audioCtx.createOscillator();\n            oscillator.frequency.value = 1;\n            oscillator.connect(audioCtx.destination);\n            oscillator.start(0);\n            oscillator.stop(0);\n\n            source.connect(analyser);\n            source.connect(audioCtx.destination);\n\n            analyser.fftsize = 32768;\n            const bufferLength = analyser.frequencyBinCount;\n            const data = new Uint8Array(bufferLength);\n            let frameCount = 1;\n\n            function renderFrame() {\n                //only run one wave visual per canvas\n                if (JSON.stringify(options) !== this.activeCanvas[canvas_id]) {\n                    return\n                }\n\n                //if the element or canvas go out of scope, stop animation\n                if (!document.getElementById(element_id) || !document.getElementById(canvas_id))\n                    return\n\n                requestAnimationFrame(renderFrame);\n                frameCount++;\n\n                //check if this element is the last to be called\n                if (!(currentCount < this.activeElements[element_id].count)) {\n                    analyser.getByteFrequencyData(data);\n                    this.activeElements[element_id].data = data;\n                }\n\n                this.visualize(this.activeElements[element_id].data, canvas_id, options, frameCount);\n            }\n\n            renderFrame = renderFrame.bind(this);\n            renderFrame();\n\n        }\n\n\n        const create = () => {\n            //remove all events\n            [\"touchstart\", \"touchmove\", \"touchend\", \"mouseup\", \"click\", \"play\"].forEach(event => {\n                element.removeEventListener(event, create, { once: true });\n            });\n\n            run.call(waveContext);\n        };\n\n        if (this.activated || options['skipUserEventsWatcher']) {\n            run.call(waveContext);\n        } else {\n            //wait for a valid user gesture\n            document.body.addEventListener(\"touchstart\", create, { once: true });\n            document.body.addEventListener(\"touchmove\", create, { once: true });\n            document.body.addEventListener(\"touchend\", create, { once: true });\n            document.body.addEventListener(\"mouseup\", create, { once: true });\n            document.body.addEventListener(\"click\", create, { once: true });\n            element.addEventListener(\"play\", create, { once: true });\n        }\n\n\n\n    }\n\n    function fromFile(file, options = {}) {\n        //options\n        if (!options.stroke) options.stroke = 10;\n\n        let audio = new Audio();\n        audio.src = file;\n\n        let audioCtx = new AudioContext();\n        let analyser = audioCtx.createAnalyser();\n\n        let source = audioCtx.createMediaElementSource(audio);\n        source.connect(analyser);\n\n        analyser.fftSize = 64;\n        let bufferLength = analyser.frequencyBinCount;\n\n        let file_data;\n        let temp_data = new Uint8Array(bufferLength);\n        let getWave;\n        let fdi = 0;\n        let self = this;\n\n        audio.addEventListener('loadedmetadata', async function () {\n\n            while (audio.duration === Infinity) {\n                await new Promise(r => setTimeout(r, 1000));\n                audio.currentTime = 10000000 * Math.random();\n            }\n\n            audio.currentTime = 0;\n            audio.play();\n        });\n\n        audio.onplay = function () {\n            let findSize = (size) => {\n\n                for (let range = 1; range <= 40; range++) {\n                    let power = 2 ** range;\n\n                    if (size <= power) return power;\n                }\n\n            };\n            let d = audio.duration;\n            audio.playbackRate = 16;\n\n            d = d / audio.playbackRate;\n\n            let drawRate = 20; //ms\n\n            let size = ((d / (drawRate / 1000)) * (analyser.fftSize / 2));\n            size = findSize(size);\n            file_data = new Uint8Array(size);\n\n\n            getWave = setInterval(function () {\n                analyser.getByteFrequencyData(temp_data);\n\n                for (let data in temp_data) {\n                    data = temp_data[data];\n                    file_data[fdi] = data;\n                    fdi++;\n                }\n\n            }, drawRate);\n\n\n        };\n\n        audio.onended = function () {\n\n            if (audio.currentTime === audio.duration && file_data !== undefined) {\n\n                clearInterval(getWave);\n\n                let canvas = document.createElement(\"canvas\");\n                canvas.height = window.innerHeight;\n                canvas.width = window.innerWidth;\n\n                self.visualize(file_data, canvas, options);\n                let image = canvas.toDataURL(\"image/jpg\");\n                self.onFileLoad(image);\n\n                canvas.remove();\n            }\n\n        };\n\n    }\n\n    function fromStream(stream, canvas_id, options = {}) {\n\n        this.current_stream.id = canvas_id;\n        this.current_stream.options = options;\n\n        let audioCtx, analyser, source;\n        if (!this.sources[stream.toString()]) {\n            audioCtx = new AudioContext();\n            analyser = audioCtx.createAnalyser();\n\n            source = audioCtx.createMediaStreamSource(stream);\n            source.connect(analyser);\n            source.connect(audioCtx.destination); //playback audio\n\n            this.sources[stream.toString()] = {\n                \"audioCtx\": audioCtx,\n                \"analyser\": analyser,\n                \"source\": source\n            };\n        } else {\n            cancelAnimationFrame(this.sources[stream.toString()].animation);\n            audioCtx = this.sources[stream.toString()].audioCtx;\n            analyser = this.sources[stream.toString()].analyser;\n            source = this.sources[stream.toString()].source;\n        }\n\n        analyser.fftsize = 32768;\n        let bufferLength = analyser.frequencyBinCount;\n        this.current_stream.data = new Uint8Array(bufferLength);\n\n        let self = this;\n\n        function renderFrame() {\n            self.current_stream.animation = requestAnimationFrame(self.current_stream.loop);\n            self.sources[stream.toString()].animation = self.current_stream.animation;\n            analyser.getByteFrequencyData(self.current_stream.data);\n\n            self.visualize(self.current_stream.data, self.current_stream.id, self.current_stream.options);\n        }\n\n        this.current_stream.loop = renderFrame;\n        renderFrame();\n\n    }\n\n    function stopStream() {\n        cancelAnimationFrame(this.current_stream.animation);\n    }\n\n    function playStream() {\n        this.current_stream.loop();\n    }\n\n    var fromStream$1 = {\n        fromStream,\n        stopStream,\n        playStream\n    };\n\n    var drawWave = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        const helper = new Helper(ctx);\n\n        // data = helper.mutateData(data, \"shrink\", 200)\n        data = helper.mutateData(data, \"split\", 4)[0];\n        data = helper.mutateData(data, \"scale\", h);\n\n        let points = helper.getPoints(\"line\", w, [0, h], data.length, data, { offset: 100 });\n        points.start = points.start.slice(0, points.end.length - 1);\n        points.start.push([w, h]);\n        points.start.push([0, h]);\n\n        helper.drawPolygon(points.start, { lineColor: colors[0], color: colors[1], radius: (h * .008) });\n\n\n    };\n\n    var drawShine = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let cx = w / 2;\n        let cy = h / 2;\n        let r = h / 4;\n        let percent = (h / 2 - r) / 255;\n        let point_count = 512;\n        let increase = (360 / point_count) * Math.PI / 180;\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = data[600 % point]; //get value\n            p *= percent;\n            point++; //start at 1\n            let a = point * increase;\n\n            let sx = cx + r * Math.cos(a);\n            let sy = cy + r * Math.sin(a);\n            ctx.moveTo(sx, sy);\n\n            let dx = cx + (r + p) * Math.cos(a);\n            let dy = cy + (r + p) * Math.sin(a);\n            ctx.lineTo(dx, dy);\n\n        }\n        ctx.stroke();\n\n        if (options.colors[1]) {\n            ctx.arc(cx, cy, r * .90, 0, 2 * Math.PI);\n            ctx.fillStyle = options.colors[1];\n            ctx.fill();\n        }\n    };\n\n    var drawRing = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let cx = w / 2;\n        let cy = h / 2;\n        let r = (h - 10) / 2;\n        let offset = r / 5;\n        let percent = (r - offset) / 255;\n        let point_count = 150;\n        let increase = (360 / point_count) * Math.PI / 180;\n\n        ctx.arc(cx, cy, r, 0, 2 * Math.PI, true);\n\n        let fa = 0;\n        let fx = cx + (r - (data[0] * percent)) * Math.cos(fa);\n        let fy = cy + (r - (data[0] * percent)) * Math.sin(fa);\n        ctx.moveTo(fx, fy);\n\n        let q = 0;\n        for (let point = 0; point < point_count; point++) {\n            q += 1;\n            if (point >= point_count / 2) {\n                q -= 2;\n            }\n\n            let p = data[q]; //get value\n            p *= percent;\n\n            let a = point * increase;\n            let x = cx + (r - p) * Math.cos(a);\n            let y = cy + (r - p) * Math.sin(a);\n\n            ctx.lineTo(x, y);\n            ctx.arc(x, y, 2, 0, 2 * Math.PI);\n\n        }\n        ctx.lineTo(fx, fy);\n\n        ctx.stroke();\n        ctx.fillStyle = options.colors[1] || \"#fff0\";\n        ctx.fill();\n    };\n\n    var drawBars = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let point_count = 64;\n        let percent = h / 255;\n        let increase = w / 64;\n        let breakpoint = Math.floor(point_count / options.colors.length);\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = data[point]; //get value\n            p *= percent;\n\n            let x = increase * point;\n\n            ctx.moveTo(x, h);\n            ctx.lineTo(x, h - p);\n\n            if (point % breakpoint === 0) {\n                let i = (point / breakpoint) - 1;\n                ctx.strokeStyle = options.colors[i];\n                ctx.stroke();\n                ctx.beginPath();\n            }\n\n        }\n    };\n\n    var drawDualbars = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let percent = h / 255;\n        let increase = w / 128;\n        let point_count = 128;\n        let min = 5;\n        let breakpoint = Math.floor(point_count / options.colors.length);\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = data[point]; //get value\n            p += min;\n            p *= percent;\n\n            let x = increase * point;\n\n            let mid = (h / 2) + (p / 2);\n\n            ctx.moveTo(x, mid);\n            ctx.lineTo(x, mid - p);\n\n            if (point % breakpoint === 0) {\n                let i = (point / breakpoint) - 1;\n                ctx.strokeStyle = options.colors[i];\n                ctx.stroke();\n                ctx.beginPath();\n            }\n\n        }\n    };\n\n    var drawOrbs = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        const helper = new Helper(ctx);\n\n        data = helper.mutateData(data, \"organize\").mids;\n        data = helper.mutateData(data, \"split\", 2)[0];\n        data = helper.mutateData(data, \"shrink\", 100);\n        data = helper.mutateData(data, \"mirror\");\n        data = helper.mutateData(data, \"scale\", h);\n        data = helper.mutateData(data, \"amp\", .75);\n\n        let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, { offset: 50 });\n        points.start.forEach((start, i) => {\n            helper.drawLine(start, points.end[i], { lineColor: colors[0] });\n\n            helper.drawCircle(start, h * .01, { color: colors[1] || colors[0] });\n            helper.drawCircle(points.end[i], h * .01, { color: colors[1] || colors[0] });\n        });\n    };\n\n    var drawFlower = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let min = 5;\n        let r = h / 4;\n        let offset = r / 2;\n        let cx = w / 2;\n        let cy = h / 2;\n        let point_count = 128;\n        let percent = (r - offset) / 255;\n        let increase = (360 / point_count) * Math.PI / 180;\n        let breakpoint = Math.floor(point_count / options.colors.length);\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = (data[point] + min) * percent;\n            let a = point * increase;\n\n            let sx = cx + (r - (p - offset)) * Math.cos(a);\n            let sy = cy + (r - (p - offset)) * Math.sin(a);\n            ctx.moveTo(sx, sy);\n\n            let dx = cx + (r + p) * Math.cos(a);\n            let dy = cy + (r + p) * Math.sin(a);\n            ctx.lineTo(dx, dy);\n\n            if (point % breakpoint === 0) {\n                let i = (point / breakpoint) - 1;\n                ctx.strokeStyle = options.colors[i];\n                ctx.stroke();\n                ctx.beginPath();\n            }\n        }\n\n        ctx.stroke();\n    };\n\n    var drawFlowerBlocks = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n        let r = h / 4;\n        let cx = w / 2;\n        let cy = h / 2;\n        let point_count = 56;\n        let percent = r / 255;\n        let increase = (360 / point_count) * Math.PI / 180;\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = (data[point]) * percent;\n            let a = point * increase;\n\n            let ax = cx + (r - (p / 2)) * Math.cos(a);\n            let ay = cy + (r - (p / 2)) * Math.sin(a);\n            ctx.moveTo(ax, ay);\n\n            let bx = cx + (r + p) * Math.cos(a);\n            let by = cy + (r + p) * Math.sin(a);\n            ctx.lineTo(bx, by);\n\n            let dx = cx + (r + p) * Math.cos(a + increase);\n            let dy = cy + (r + p) * Math.sin(a + increase);\n            ctx.lineTo(dx, dy);\n\n            let ex = cx + (r - (p / 2)) * Math.cos(a + increase);\n            let ey = cy + (r - (p / 2)) * Math.sin(a + increase);\n\n            ctx.lineTo(ex, ey);\n            ctx.lineTo(ax, ay);\n        }\n\n        if (options.colors[1]) {\n            ctx.fillStyle = options.colors[1];\n            ctx.fill();\n        }\n\n        ctx.stroke();\n    };\n\n    var drawBarsBlocks = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let percent = h / 255;\n        let width = w / 64;\n\n        for (let point = 0; point < 64; point++) {\n            let p = data[point]; //get value\n            p *= percent;\n            let x = width * point;\n\n            ctx.rect(x, h, width, -(p));\n        }\n\n        ctx.fillStyle = options.colors[1] || options.colors[0];\n        ctx.stroke();\n        ctx.fill();\n    };\n\n    var drawDualbarsBlocks = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let percent = h / 255;\n        let width = w / 50;\n\n        for (let point = 0; point <= 50; point++) {\n            let p = data[point]; //get value\n            p *= percent;\n            let x = width * point;\n\n            ctx.rect(x, (h / 2) + (p / 2), width, -(p));\n        }\n\n        if (options.colors[1]) {\n            ctx.fillStyle = options.colors[1];\n            ctx.fill();\n        }\n\n        ctx.stroke();\n    };\n\n    var drawStar = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let r = h / 4;\n        let offset = r / 4;\n        let cx = w / 2;\n        let cy = h / 2;\n        let point_count = 120;\n        let percent = (r - offset - 35) / (255);\n        let increase = (360 / point_count) * Math.PI / 180;\n\n        let top = [];\n        let bottom = [];\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = ((data[200 % point])) * percent;\n            let a = point * increase;\n\n            let sx = cx + ((r) - p + offset) * Math.cos(a);\n            let sy = cy + ((r) - p + offset) * Math.sin(a);\n            ctx.moveTo(sx, sy);\n            bottom.push({\n                x: sx,\n                y: sy\n            });\n\n            let dx = cx + (r + p + offset) * Math.cos(a);\n            let dy = cy + (r + p + offset) * Math.sin(a);\n            ctx.lineTo(dx, dy);\n            top.push({\n                x: dx,\n                y: dy\n            });\n\n        }\n\n\n        ctx.moveTo(top[0].x, top[0].y);\n        for (let t in top) {\n            t = top[t];\n\n            ctx.lineTo(t.x, t.y);\n        }\n        ctx.closePath();\n\n        ctx.moveTo(bottom[0].x, bottom[0].y);\n        for (let b = bottom.length - 1; b >= 0; b++) {\n            b = bottom[b];\n\n            ctx.lineTo(b.x, b.y);\n        }\n        ctx.closePath();\n\n\n        if (options.colors[1]) {\n            ctx.fillStyle = options.colors[1];\n            ctx.fill();\n        }\n        ctx.stroke();\n\n        //inner color\n        ctx.beginPath();\n        ctx.moveTo(bottom[0].x, bottom[0].y);\n        for (let b in bottom) {\n            b = bottom[b];\n\n            ctx.lineTo(b.x, b.y);\n        }\n        ctx.closePath();\n\n\n        if (options.colors[2]) {\n            ctx.fillStyle = options.colors[2];\n            ctx.fill();\n        }\n        ctx.stroke();\n    };\n\n    var drawRoundWave = (functionContext) => {\n        let { data, options, ctx, h, w } = functionContext;\n\n        let r = h / 4;\n        let cx = w / 2;\n        let cy = h / 2;\n        let point_count = 100;\n        let percent = r / 255;\n        let increase = (360 / point_count) * Math.PI / 180;\n        let p = 0;\n\n        // let z = (data[0] + min + offset) * percent;\n        let sx = cx + (r + p) * Math.cos(0);\n        let sy = cy + (r + p) * Math.sin(0);\n        ctx.moveTo(sx, sy);\n\n        for (let point = 1; point <= point_count; point++) {\n            let p = (data[350 % point]) * percent;\n            let a = point * increase;\n\n            let dx = cx + (r + p) * Math.cos(a);\n            let dy = cy + (r + p) * Math.sin(a);\n            ctx.lineTo(dx, dy);\n        }\n\n        ctx.closePath();\n        ctx.stroke();\n\n        if (options.colors[1]) {\n            ctx.fillStyle = options.colors[1];\n            ctx.fill();\n        }\n    };\n\n    var drawRings = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        let helper = new Helper(ctx);\n        let minDimension = (h < w) ? h : w;\n\n        data = helper.mutateData(data, \"organize\");\n        data = [data.mids, data.vocals];\n\n        data[0] = helper.mutateData(data[0], \"scale\", minDimension / 4);\n        data[1] = helper.mutateData(data[1], \"scale\", minDimension / 8);\n\n        data[0] = helper.mutateData(data[0], \"shrink\", 1 / 5);\n        data[0] = helper.mutateData(data[0], \"split\", 2)[0];\n\n        data[0] = helper.mutateData(data[0], \"reverb\");\n        data[1] = helper.mutateData(data[1], \"reverb\");\n\n\n        let outerCircle = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data[0].length, data[0]);\n        let innerCircle = helper.getPoints(\"circle\", minDimension / 4, [w / 2, h / 2], data[1].length, data[1]);\n\n        helper.drawPolygon(outerCircle.end, { close: true, radius: 4, lineColor: colors[0], color: colors[1] });\n        helper.drawPolygon(innerCircle.end, { close: true, radius: 4, lineColor: colors[2], color: colors[3] });\n\n        let middle = ((minDimension / 4) + (minDimension / 2)) / 2;\n        let largerInner = data[1] = helper.mutateData(data[1], \"scale\", ((minDimension / 4) - (minDimension / 2)));\n        let innerBars = helper.getPoints(\"circle\", middle, [w / 2, h / 2], data[1].length, largerInner);\n        innerBars.start.forEach((start, i) => {\n            helper.drawLine(start, innerBars.end[i], { lineColor: colors[4] || colors[2] });\n        });\n    };\n\n    var drawShineRings = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n\n        let helper = new Helper(ctx);\n        let minDimension = (h < w) ? h : w;\n\n        data = helper.mutateData(data, \"organize\");\n        data.vocals = helper.mutateData(data.vocals, \"scale\", (minDimension / 2) / 2);\n        data.base = helper.mutateData(data.base, \"scale\", (minDimension / 2) / 2);\n\n        let outerBars = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals);\n        let innerWave = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.vocals.length, data.vocals, { offset: 100 });\n        let thinLine = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.base.length, data.base, { offset: 100 });\n\n        outerBars.start.forEach((start, i) => {\n            helper.drawLine(start, outerBars.end[i], { lineColor: colors[0] });\n        });\n\n        helper.drawPolygon(innerWave.start, { close: true, lineColor: colors[1], color: colors[3], radius: 5 });\n        helper.drawPolygon(thinLine.start, { close: true, lineColor: colors[2], color: colors[4], radius: 5 });\n    };\n\n    var drawCubes = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        let helper = new Helper(ctx);\n\n        data = helper.mutateData(data, \"organize\").base;\n\n        data = helper.mutateData(data, \"shrink\", 20).slice(0, 19);\n        data = helper.mutateData(data, \"scale\", h);\n\n        let points = helper.getPoints(\"line\", w, [0, h], data.length, data);\n\n        let spacing = 5;\n        let squareSize = (w / 20) - spacing;\n        let colorIndex = 0;\n\n        points.start.forEach((start, i) => {\n            let squareCount = Math.ceil(data[i] / squareSize);\n\n            //find color stops from total possible squares in bar\n            let totalSquares = (h - (spacing * (h / squareSize))) / squareSize;\n            let colorStop = Math.ceil(totalSquares / colors.length);\n\n            for (let j = 1; j <= squareCount; j++) {\n                let origin = [start[0], (start[1] - (squareSize * j) - (spacing * j))];\n                helper.drawSquare(origin, squareSize, { color: colors[colorIndex], lineColor: \"black\" });\n                if (j % colorStop == 0) {\n                    colorIndex++;\n                    if (colorIndex >= colors.length) colorIndex = colors.length - 1;\n                }\n            }\n            colorIndex = 0;\n        });\n    };\n\n    var drawBigBars = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        const helper = new Helper(ctx);\n\n        data = helper.mutateData(data, \"organize\").vocals;\n        data = helper.mutateData(data, \"shrink\", 10);\n        data = helper.mutateData(data, \"scale\", h);\n        data = helper.mutateData(data, \"amp\", 1);\n        let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, { offset: 50 });\n\n        let colorIndex = 0;\n        let colorStop = Math.ceil(data.length / colors.length);\n        points.start.forEach((start, i) => {\n            if ((i + 1) % colorStop == 0) colorIndex++;\n            helper.drawRectangle(start, data[i], w / data.length, { color: colors[colorIndex] });\n        });\n\n    };\n\n    var drawShockwave = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n\n        let helper = new Helper(ctx);\n\n        data = helper.mutateData(data, \"shrink\", 300);\n        data = helper.mutateData(data, \"scale\", h / 2);\n        data = helper.mutateData(data, \"split\", 4).slice(0, 3);\n\n        let colorIndex = 0;\n        data.forEach((points) => {\n            let wavePoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points);\n            helper.drawPolygon(wavePoints.end, { lineColor: colors[colorIndex], radius: (h * .015) });\n\n            let invertedPoints = helper.getPoints(\"line\", w, [0, h / 2], points.length, points, { offset: 100 });\n            helper.drawPolygon(invertedPoints.start, { lineColor: colors[colorIndex], radius: (h * .015) });\n            colorIndex++;\n        });\n    };\n\n    var drawFireworks = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        const helper = new Helper(ctx);\n\n        data = helper.mutateData(data, \"shrink\", 200).slice(0, 120);\n        data = helper.mutateData(data, \"mirror\");\n        data = helper.mutateData(data, \"scale\", (h / 4) + ((h / 4) * .35));\n\n        let points = helper.getPoints(\"circle\", h / 2, [w / 2, h / 2], data.length, data, { offset: 35, rotate: 270 });\n\n        points.start.forEach((start, i) => {\n            helper.drawLine(start, points.end[i]);\n        });\n\n        helper.drawPolygon(points.start, { close: true });\n\n        points.end.forEach((end, i) => {\n            helper.drawCircle(end, h * .01, { color: colors[0] });\n        });\n    };\n\n    var drawStatic = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let helper = new Helper(ctx);\n\n        data = helper.mutateData(data, \"shrink\", 1 / 8);\n        data = helper.mutateData(data, \"split\", 2)[0];\n        data = helper.mutateData(data, \"scale\", h);\n\n        let points = helper.getPoints(\"line\", w, [0, h / 2], data.length, data, { offset: 50 });\n        let prevPoint = null;\n        points.start.forEach((start, i) => {\n            if (prevPoint) {\n                helper.drawLine(prevPoint, start);\n            }\n            helper.drawLine(start, points.end[i]);\n            prevPoint = points.end[i];\n        });\n\n\n    };\n\n    var drawWeb = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let { colors } = options;\n        const helper = new Helper(ctx);\n        let minDimension = (h < w) ? h : w;\n\n        data = helper.mutateData(data, \"shrink\", 100);\n        data = helper.mutateData(data, \"split\", 2)[0];\n        data = helper.mutateData(data, \"scale\", h / 4);\n\n        let dataCopy = data;\n\n        let points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n        helper.drawPolygon(points.end, { close: true });\n\n        points.start.forEach((start, i) => {\n            helper.drawLine(start, points.end[i]);\n        });\n\n        data = helper.mutateData(data, \"scale\", .7);\n        points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n        helper.drawPolygon(points.end, { close: true });\n\n        data = helper.mutateData(data, \"scale\", .3);\n        points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data);\n        helper.drawPolygon(points.end, { close: true });\n\n        helper.drawCircle([w / 2, h / 2], minDimension / 2, { color: colors[2] });\n\n        dataCopy = helper.mutateData(dataCopy, \"scale\", 1.4);\n        points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], dataCopy.length, dataCopy);\n        points.end.forEach((end, i) => {\n            helper.drawCircle(end, minDimension * .01, { color: colors[1], lineColor: colors[1] || colors[0] });\n        });\n    };\n\n    var drawStitches = (functionContext) => {\n        let { data, options, ctx, h, w, Helper } = functionContext;\n        let helper = new Helper(ctx);\n        let minDimension = (h < w) ? h : w;\n\n        data = helper.mutateData(data, \"shrink\", 200);\n        data = helper.mutateData(data, \"split\", 2)[0];\n        data = helper.mutateData(data, \"scale\", h / 2);\n\n        let points = helper.getPoints(\"circle\", minDimension / 2, [w / 2, h / 2], data.length, data, { offset: 50 });\n\n        helper.drawPolygon(points.end, { close: true });\n        helper.drawPolygon(points.start, { close: true });\n\n        for (let i = 0; i < points.start.length; i += 1) {\n            let start = points.start[i];\n            i++;\n            let end = points.end[i] || points.end[0];\n\n            helper.drawLine(start, end);\n            helper.drawLine(end, points.start[i + 1] || points.start[0]);\n        }\n    };\n\n    var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};\n\n    function createCommonjsModule(fn, module) {\n        return module = { exports: {} }, fn(module, module.exports), module.exports;\n    }\n\n    var origami_1 = createCommonjsModule(function (module, exports) {\n        /*!\n         * Origami.js 0.5.0\n         * https://origamijs.com/\n         *\n         * Copyright Raphael Amorim 2016\n         * Released under the GPL-4.0 license\n         *\n         * Date: 2016-09-23T03:42Z\n         */\n\n        (function( window ) {\n\n            /**\n             * Config object: Maintain internal state\n             * Later exposed as Origami.config\n             * `config` initialized at top of scope\n             */\n\n            var Origami = {\n                // Current Paper\n                paper: null\n            };\n\n            var config = {\n                // Document Styles\n                documentStyles: [],\n\n                // Virtual Styles\n                virtualStyles: {},\n\n                // All contexts saved\n                contexts: [],\n\n                // Origami Shapes Defaults\n                defaults: {\n                    arc: {\n                        background: 'rgba(0, 0, 0, 0)',\n                        strokeStyle: 'rgba(0, 0, 0, 0)',\n                        lineWidth: null,\n                    },\n                    rect: {\n                        background: 'rgba(0, 0, 0, 0)',\n                        strokeStyle: 'rgba(0, 0, 0, 0)',\n                        lineWidth: null,\n                    },\n                    polygon: {\n                        background: 'rgba(0, 0, 0, 0)',\n                        strokeStyle: 'rgba(0, 0, 0, 0)',\n                        lineWidth: null,\n                    },\n                    line: {\n                        strokeStyle: 'rgba(0, 0, 0, 0)',\n                        lineWidth: null,\n                    },\n                    text: {\n                        font: '14px Helvetica',\n                        strokeStyle: 'rgba(0, 0, 0, 0)',\n                        color: '#000',\n                        lineWidth: null,\n                    }\n                }\n            };\n\n            var prefix = \"[origami.js]\";\n\n            Origami.warning = function warning(message, obj){\n                if (console && console.warn)\n                    console.warn(prefix, message, obj);\n            };\n\n            Origami.error = function error(message){\n                throw new Error(prefix.concat(' ' + message));\n            };\n            Origami.init = function(el) {\n                if (el.canvas) {\n                    el = el.canvas;\n                } else {\n                    el = document.querySelector(el);\n                }\n\n                if (!el)\n                    this.error('Please use a valid selector or canvas context');\n\n                var existentContext = exists(el, config.contexts);\n                if (existentContext) {\n                    this.paper = existentContext;\n                    return this;\n                }\n\n                if (!el.getContext)\n                    this.error('Please verify if it\\'s a valid canvas element');\n\n                el.width = el.clientWidth;\n                el.height = el.clientHeight;\n                var context = el.getContext('2d');\n                var current = {\n                    element: el,\n                    queue: [],\n                    index: config.contexts.length,\n                    flip: false,\n                    frame: null,\n                    ctx: context,\n                    width: el.width,\n                    height: el.height,\n                };\n\n                config.contexts.push(current);\n                this.paper = current;\n                return this;\n            };\n\n            Origami.styles = function() {\n                if (!config.virtualStyles.length)\n                    defineDocumentStyles();\n\n                var selectors = arguments;\n                if (!selectors.length) {\n                    config.virtualStyles['empty'] = true;\n                    return this;\n                }\n\n                for (var i = 0; i < selectors.length; i++) {\n                    var style = styleRuleValueFrom(selectors[i], (config.documentStyles[0] || []));\n                    config.virtualStyles[selectors[i]] = style;\n                }\n                return this;\n            };\n\n            Origami.getPaper = function() {\n                return this.paper;\n            };\n\n            Origami.canvasCtx = function() {\n                return this.paper.ctx;\n            };\n\n            Origami.getContexts = function() {\n                return config.contexts;\n            };\n\n            Origami.cleanContexts = function() {\n                config.contexts = [];\n            };\n\n            Origami.createComponent = function(component, fn) {\n                Origami[component] = function(props) {\n                    fn.bind(this, this, props)();\n                    return this;\n                };\n            };\n\n            Origami.fn = {};\n\n            Origami.draw = function(options) {\n                var self = this,\n                    customRender = false,\n                    ctx = self.paper.ctx;\n\n                if (typeof(options) === 'string') {\n                    customRender = new origami.fn[options](self.paper);\n                    self.paper['ctx'] = customRender;\n                }\n\n                var abs = new Screen(self.paper),\n                    queueList = self.paper.queue;\n\n                for (var i = 0; i < queueList.length; i++) {\n                    if (queueList[i].loaded === false || queueList[i].failed) {\n                        Origami.warning('couldn\\'t able to load:', queueList[i].params);\n                    }\n                    abs[queueList[i].assign](queueList[i].params);\n                }\n                self.paper.queue = [];\n\n                if (customRender) {\n                    customRender.draw();\n                    self.paper.ctx = ctx;\n                }\n\n                if (typeof(options) === 'function')\n                    options();\n            };\n\n            Origami.load = function(fn) {\n                var mOrigami = clone(this);\n                mOrigami.paper = this.paper;\n                var loadInterval = setInterval(function() {\n                    var dataLoad = mOrigami.paper.queue.filter(function(item) {\n                        return (item.loaded === false && !item.failed);\n                    });\n\n                    // When already loaded\n                    if (!dataLoad.length) {\n                        clearInterval(loadInterval);\n                        fn.bind(mOrigami, mOrigami)();\n                    }\n                }, 1);\n            };\n\n            function Queue(assign, params, loaded) {\n                this.paper.queue.push({\n                    assign: assign,\n                    params: params,\n                    loaded: loaded\n                });\n            }\n\n            var queue = Queue.bind(Origami);\n\n            // Utilities.js\n\n            var hasOwn = Object.prototype.hasOwnProperty;\n\n            /**\n             * Check if element exists in a Array of NodeItems\n             * @param {NodeItem} current nodeItem to check\n             * @param {Array} array of NodeItems\n             * @returns {NodeItem} NodeItem exitent in array\n             */\n            function exists(el, arr) {\n                for (var i = 0; i < arr.length; i++) {\n                    if (arr[i].element.isEqualNode(el))\n                        return arr[i];\n                }\n                return false;\n            }\n\n            /**\n             * Filter arguments by rules\n             * @param {Array} methods arguments\n             * @param {Object} rules to apply\n             * @returns {Object} arguments filtered\n             */\n            function argsByRules(argsArray, rules) {\n                var params = rules || ['x', 'y', 'width', 'height'],\n                    args = {};\n\n                for (var i = 0; i < argsArray.length; i++) {\n                    if (typeof(argsArray[i]) === \"object\")\n                        args[\"style\"] = argsArray[i];\n                    else\n                    if (params.length)\n                        args[params.shift()] = argsArray[i];\n                }\n\n                args.style = normalizeStyle(args.style);\n\n                if ((typeof(args.x) === 'string') && (typeof(args.y) === 'string'))\n                    args = smartCoordinates(args);\n\n                return args;\n            }\n\n            function getBorderStyleObject(prop) {\n                return normalizeStyle({border: prop});\n            }\n\n            function normalizeStyle(style) {\n                if (!style)\n                    style = {};\n\n                var borderSize = (style.borderSize || null),\n                    borderColor = (style.borderColor || null),\n                    borderStyle = (style.borderStyle || []);\n\n                if (style.border) {\n                    var border = [],\n                        borderString = style.border;\n\n                    // 0 - Size: [0-9]px\n                    border = border.concat(style.border.match(/[0-9]*\\.?[0-9]px?/i));\n                    borderString = borderString.replace(/[0-9]*\\.?[0-9]px?/i, '');\n\n                    // 1 - Style\n                    border = border.concat(borderString.match(/solid|dashed|dotted/i));\n                    borderString = borderString.replace(/solid|dashed|dotted/i, '');\n\n                    // 2 - Color\n                    border = border.concat(borderString.match(/[^\\s]+/i));\n\n                    if (!borderSize)\n                        borderSize = border[0];\n                    if (!borderColor)\n                        borderColor = border[2];\n\n                    borderStyle = border[1];\n                }\n\n                if (borderSize)\n                    borderSize = borderSize.replace(/[^0-9]/g, '');\n\n                if (typeof(borderStyle) === 'string') {\n                    if (borderStyle === 'dashed')\n                        borderStyle = [12];\n                    else if (borderStyle === 'dotted')\n                        borderStyle = [3];\n                    else\n                        borderStyle = [];\n                }\n\n                style['borderSize'] = borderSize;\n                style['borderStyle'] = borderStyle;\n                style['borderColor'] = borderColor;\n                return style;\n            }\n\n            /**\n             * Return args object with new coordinates based on behavior\n             * @returns {Object} args\n             */\n            function smartCoordinates(args) {\n                var x = args.x,\n                    y = args.y;\n\n                var paper = Origami.getPaper(),\n                    elmWidth = paper.element.width,\n                    elmHeight = paper.element.height,\n                    radius = (args.r || 0);\n\n                var width = (args.width || radius),\n                    height = (args.height || width);\n\n                var axis = {\n                    x: [ 'right', 'center', 'left' ],\n                    y: [ 'top', 'center', 'bottom' ]\n                };\n\n                if (axis.x.indexOf(x) !== -1) {\n                    if (x === 'right')\n                        x = Math.floor(elmWidth - width);\n                    else if (x === 'center')\n                        if (radius)\n                            x = Math.floor(elmWidth / 2);\n                        else\n                            x = Math.floor((elmWidth / 2) - (width / 2));\n                    else if (x === 'left')\n                        x = radius;\n                } else if ((x + '').substr(-1) === '%') {\n                    x = (elmWidth * parseInt(x, 10)) / 100;\n                } else {\n                    x = 0;\n                }\n\n                if (axis.y.indexOf(y) !== -1) {\n                    if (y === 'top')\n                        y = radius;\n                    else if (y === 'center')\n                        if (radius)\n                            y = Math.floor(elmHeight / 2);\n                        else\n                            y = Math.floor((elmHeight / 2) - (height / 2));\n                    else if (y === 'bottom')\n                        y = Math.floor(elmHeight - height);\n                } else if ((y + '').substr(-1) === '%') {\n                    y = (elmHeight * parseInt(y, 10)) / 100;\n                } else {\n                    y = 0;\n                }\n\n                args.y = y;\n                args.x = x;\n                return args;\n            }\n\n            /**\n             * Return all documentStyles to a especified origami context\n             * @returns undefined\n             */\n            function defineDocumentStyles() {\n                for (var i = 0; i < document.styleSheets.length; i++) {\n                    var mysheet = document.styleSheets[i],\n                        myrules = mysheet.cssRules ? mysheet.cssRules : mysheet.rules;\n                    config.documentStyles.push(myrules);\n                }\n            }\n\n            /**\n             * Merge defaults with user options\n             * @param {Object} defaults Default settings\n             * @param {Object} options User options\n             * @returns {Object} Merged values of defaults and options\n             */\n            function extend(a, b, undefOnly) {\n                for (var prop in b) {\n                    if (hasOwn.call(b, prop)) {\n\n                        // Avoid \"Member not found\" error in IE8 caused by messing with window.constructor\n                        // This block runs on every environment, so `global` is being used instead of `window`\n                        // to avoid errors on node.\n                        if (prop !== \"constructor\" || a !== commonjsGlobal) {\n                            if (b[prop] === undefined) {\n                                delete a[prop];\n                            } else if (!(undefOnly && typeof a[prop] !== \"undefined\")) {\n                                a[prop] = b[prop];\n                            }\n                        }\n                    }\n                }\n                return a;\n            }\n\n            /**\n             * Get Style Rule from a specified element\n             * @param {String} selector from element\n             * @param {Array} Document Style Rules\n             * @returns {Object} Merged values of defaults and options\n             */\n            function styleRuleValueFrom(selector, documentStyleRules) {\n                for (var j = 0; j < documentStyleRules.length; j++) {\n                    if (documentStyleRules[j].selectorText && documentStyleRules[j].selectorText.toLowerCase() === selector) {\n                        return documentStyleRules[j].style;\n                    }\n                }\n            }\n\n            /**\n             * Clone a object\n             * @param {Object} object\n             * @returns {Object} cloned object\n             */\n            function clone(obj) {\n                if (null == obj || \"object\" != typeof obj) return obj;\n                var copy = obj.constructor();\n                for (var attr in obj) {\n                    if (obj.hasOwnProperty(attr)) copy[attr] = obj[attr];\n                }\n                return copy;\n            }\n\n            function Screen(currentContext) {\n                this.paper = currentContext;\n            }\n\n            Screen.prototype.translate = function(params) {\n                this.paper.ctx.translate(params.x, params.y);\n            };\n\n            Screen.prototype.background = function(params) {\n                this.paper.element.style.backgroundColor = params.color;\n            };\n\n            Screen.prototype.restore = function() {\n                this.paper.ctx.restore();\n            };\n\n            Screen.prototype.save = function() {\n                this.paper.ctx.save();\n            };\n\n            Screen.prototype.composition = function(params) {\n                this.paper.ctx.globalCompositeOperation = params.globalComposite;\n            };\n\n            Screen.prototype.rotate = function(params) {\n                this.paper.ctx.rotate(params.degrees);\n            };\n\n            Screen.prototype.scale = function(params) {\n                this.paper.ctx.scale(params.width, params.height);\n            };\n\n            Screen.prototype.flip = function(params) {\n                this.paper.flip = 'horizontal';\n                if (params.type && typeof(params.type) === 'string')\n                    this.paper.flip = params.type;\n            };\n\n            Screen.prototype.flipEnd = function() {\n                this.paper.flip = false;\n            };\n\n            Screen.prototype.clear = function() {\n                this.paper.ctx.clearRect(0, 0, this.paper.width, this.paper.height);\n            };\n\n            function ArcShape(params) {\n                var args = params.args,\n                    style = args.style,\n                    def = config.defaults.arc;\n\n                this.paper.ctx.beginPath();\n                this.paper.ctx.setLineDash(style.borderStyle);\n                this.paper.ctx.arc(args.x, args.y, (args.r || def.radius), (args.sAngle || 0), (args.eAngle || 2 * Math.PI));\n                this.paper.ctx.fillStyle = (style.background || style.bg) ? (style.background || style.bg) : def.background;\n                this.paper.ctx.fill();\n                this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n                this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n                this.paper.ctx.stroke();\n                this.paper.ctx.setLineDash([]);\n                this.paper.ctx.closePath();\n            }\n\n            Screen.prototype.arc = ArcShape;\n\n            Origami.arc = function() {\n                var args = [].slice.call(arguments);\n                args = argsByRules(args, ['x', 'y', 'r', 'sAngle', 'eAngle']);\n\n                queue('arc', {\n                    args: args\n                });\n                return this;\n            };\n\n            function ImageShape(params) {\n                var image = params.image,\n                    x = params.x,\n                    y = params.y,\n                    width = params.width,\n                    height = params.height;\n\n                this.paper.ctx.save();\n                if (this.paper.flip) {\n                    if (this.paper.flip === 'horizontal') {\n                        this.paper.ctx.scale(-1, 1);\n                        width = width * -1;\n                        x = x * -1;\n                    }\n                    if (this.paper.flip === 'vertical') {\n                        this.paper.ctx.scale(1, -1);\n                        height = height * -1;\n                        y = y * -1;\n                    }\n                }\n\n                this.paper.ctx.beginPath();\n                this.paper.ctx.drawImage(image, Math.floor((x || 0)), Math.floor((y || 0)), width, height);\n                this.paper.ctx.closePath();\n                this.paper.ctx.restore();\n            }\n\n            Screen.prototype.image = ImageShape;\n\n            Origami.image = function(image, x, y, width, height) {\n                var self = this;\n                if (!image)\n                    return this;\n\n                if (typeof(image) === 'string') {\n                    var img = new Image();\n                    img.src = image;\n                    image = img;\n                }\n\n                var item = {\n                    image: image,\n                    x: x,\n                    y: y,\n                    width: width,\n                    height: height\n                };\n\n                if ((typeof(item.x) === 'string') && (typeof(item.y) === 'string'))\n                    item = smartCoordinates(item);\n\n                if (image.complete) {\n                    item.width = width || image.naturalWidth;\n                    item.height = height || image.naturalHeight;\n\n                    queue('image', item);\n                    return self;\n                }\n\n                queue('image', item, false);\n                var reference = (self.paper.queue.length - 1),\n                    currentQueue = config.contexts[this.paper.index].queue[reference];\n\n                image.addEventListener('load', function() {\n                    if (!currentQueue)\n                        return false;\n                    currentQueue.params.width = (item.width || image.naturalWidth);\n                    currentQueue.params.height = (item.height || image.naturalHeight);\n                    currentQueue.loaded = true;\n                });\n\n                image.addEventListener('error', function() {\n                    if (!currentQueue)\n                        return false;\n                    currentQueue.failed = true;\n                });\n\n                return self;\n            };\n\n            function LineShape(params) {\n                var def = config.defaults.line,\n                    style = params.style,\n                    pointA = params.pointA,\n                    pointB = params.pointB;\n\n                this.paper.ctx.beginPath();\n                this.paper.ctx.setLineDash(style.borderStyle);\n                this.paper.ctx.moveTo((pointA.x || 0), (pointA.y || 0));\n                this.paper.ctx.lineTo((pointB.x || 0), (pointB.y || 0));\n\n                this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n                this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n                this.paper.ctx.stroke();\n                this.paper.ctx.setLineDash([]);\n                this.paper.ctx.closePath();\n            }\n\n            Screen.prototype.line = LineShape;\n\n            Origami.line = function(pointA, pointB, style) {\n                style = normalizeStyle(style);\n\n                queue('line', {\n                    pointA: pointA,\n                    pointB: pointB,\n                    style: style\n                });\n                return this;\n            };\n\n            function PolygonShape(params) {\n                var args = params.args,\n                    style = params.style,\n                    def = config.defaults.polygon;\n\n                this.paper.ctx.beginPath();\n                this.paper.ctx.setLineDash(style.borderStyle);\n                this.paper.ctx.fillStyle = (style.background) ? style.background : def.background;\n                this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n                this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n\n                for (var p = 0; p < args.length; p++) {\n                    if (!args[p].x)\n                        continue;\n\n                    if (p)\n                        this.paper.ctx.lineTo(args[p].x, args[p].y);\n                    else\n                        this.paper.ctx.moveTo(args[p].x, args[p].y);\n                }\n\n                this.paper.ctx.fill();\n                this.paper.ctx.stroke();\n                this.paper.ctx.setLineDash([]);\n                this.paper.ctx.closePath();\n            }\n\n            Screen.prototype.polygon = PolygonShape;\n\n            Origami.polygon = function() {\n                var args = [].slice.call(arguments),\n                    settedArgs = argsByRules(args);\n\n                queue('polygon', {\n                    style: settedArgs.style,\n                    args: args\n                });\n                return this;\n            };\n\n            function RectShape(params) {\n                var def = config.defaults.rect,\n                    style = params.style,\n                    args = params.args;\n\n                this.paper.ctx.beginPath();\n                this.paper.ctx.setLineDash(style.borderStyle);\n                this.paper.ctx.fillStyle = (style.background) ? style.background : def.background;\n                this.paper.ctx.fillRect(args.x, args.y, args.width, (args.height || args.width));\n\n                this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n                this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n                this.paper.ctx.strokeRect(args.x, args.y, args.width, (args.height || args.width));\n                this.paper.ctx.setLineDash([]);\n                this.paper.ctx.closePath();\n            }\n\n            Screen.prototype.rect = RectShape;\n\n            Origami.rect = function() {\n                var args = [].slice.call(arguments);\n                args = argsByRules(args);\n\n                queue('rect', {\n                    style: args.style,\n                    args: args\n                });\n                return this;\n            };\n\n            Origami.border = function() {\n                var args = [].slice.call(arguments);\n                args = argsByRules(args);\n\n                queue('rect', {\n                    style: args.style,\n                    args: {\n                        x: 0,\n                        y: 0,\n                        width: this.paper.width,\n                        height: this.paper.height\n                    }\n                });\n                return this;\n            };\n\n            function CSSShape(style) {\n                var self = this,\n                    style = config.virtualStyles[style];\n\n                if (!style)\n                    return self;\n\n                // TODO: Draw in all canvas\n                var data = '<svg xmlns=\"http://www.w3.org/2000/svg\" width=\"' +\n                    self.paper.width + 'px\" height=\"' + self.paper.height + 'px\">' +\n                    '<foreignObject width=\"100%\" height=\"100%\">' +\n                    '<div xmlns=\"http://www.w3.org/1999/xhtml\">' +\n                    '<div style=\"' + style.cssText + '\"></div>' +\n                    '</div></foreignObject>' +\n                    '</svg>';\n\n                var DOMURL = window.URL || window.webkitURL || window,\n                    img = new Image(),\n                    svg = new Blob([data], {\n                        type: 'image/svg+xml;charset=utf-8'\n                    });\n\n                var url = DOMURL.createObjectURL(svg);\n                img.src = url;\n\n                img.addEventListener('load', function() {\n                    self.paper.ctx.beginPath();\n                    self.paper.ctx.drawImage(img, 0, 0);\n                    DOMURL.revokeObjectURL(url);\n                    self.paper.ctx.closePath();\n                });\n\n                return self;\n            }\n\n            Screen.prototype.CSSShape = CSSShape;\n\n            Origami.shape = function(style) {\n                queue('CSSShape', style);\n                return this;\n            };\n\n            function SpriteShape(params) {\n                var properties = params.properties,\n                    dw = params.width / properties.frames;\n\n                drawSprite.call(this, {\n                    image: params.image,\n                    posX: 0,\n                    posY: 0,\n                    frame: properties.frames,\n                    loop: properties.loop,\n                    width: dw,\n                    widthTotal: params.width,\n                    height: params.height,\n                    dx: params.x,\n                    dy: params.y,\n                    speed: properties.speed,\n                    animation: null\n                });\n            }\n\n            function drawSprite(sprite) {\n                var self = this;\n\n                if (sprite.posX === sprite.widthTotal) {\n                    if (sprite.loop === false) {\n                        window.cancelAnimationFrame(sprite.animation);\n                        return;\n                    }\n                    sprite.posX = 0;\n                }\n\n                self.paper.ctx.clearRect(sprite.dx, sprite.dy, sprite.width, sprite.height);\n\n                self.paper.ctx.beginPath();\n                self.paper.ctx.drawImage(sprite.image, sprite.posX, sprite.posY,\n                    sprite.width, sprite.height, sprite.dx, sprite.dy,\n                    sprite.width, sprite.height);\n                self.paper.ctx.closePath();\n\n                sprite.posX = sprite.posX + sprite.width;\n\n                setTimeout(function() {\n                    sprite.animation = window.requestAnimationFrame(drawSprite.bind(self, sprite));\n                }, sprite.speed);\n            }\n\n            Screen.prototype.sprite = SpriteShape;\n\n            Origami.sprite = function(x, y, properties) {\n                var self = this;\n\n                if (!properties || !properties.src)\n                    return this;\n\n                var image = new Image(),\n                    frames = (properties.frames || 0),\n                    loop = (properties.loop || true),\n                    speed = (properties.speed || 10);\n\n                image.src = properties.src;\n\n                var item = {\n                    x: x,\n                    y: y,\n                    image: image,\n                    properties: properties,\n                    width: 0,\n                    height: 0\n                };\n\n                if (image.complete) {\n                    item.width = image.naturalWidth;\n                    item.height = image.naturalHeight;\n                    queue('sprite', item);\n                    return self;\n                }\n\n                queue('sprite', item, false);\n                var reference = (self.paper.queue.length - 1),\n                    currentQueue = config.contexts[this.paper.index].queue[reference];\n\n                image.addEventListener('load', function() {\n                    if (!currentQueue)\n                        return false;\n                    currentQueue.params.width = image.naturalWidth;\n                    currentQueue.params.height = image.naturalHeight;\n                    currentQueue.loaded = true;\n                });\n\n                image.addEventListener('error', function() {\n                    if (!currentQueue)\n                        return false;\n                    currentQueue.failed = true;\n                });\n\n                return this;\n            };\n\n            function TextShape(params) {\n                var def = config.defaults.text,\n                    text = params.text,\n                    x = params.x,\n                    y = params.y,\n                    style = params.style;\n\n                this.paper.ctx.beginPath();\n                this.paper.ctx.setLineDash(style.borderStyle);\n                this.paper.ctx.lineWidth = (style.borderSize) ? style.borderSize : def.lineWidth;\n                this.paper.ctx.strokeStyle = (style.borderColor) ? style.borderColor : def.strokeStyle;\n                this.paper.ctx.font = (style.font || def.font);\n                this.paper.ctx.fillStyle = (style.color || def.color);\n                this.paper.ctx.textAlign = (style.align || def.align);\n                this.paper.ctx.fillText(text, x, y);\n                this.paper.ctx.strokeText(text, x, y);\n                this.paper.ctx.fill();\n                this.paper.ctx.stroke();\n                this.paper.ctx.setLineDash([]);\n                this.paper.ctx.closePath();\n            }\n\n            Screen.prototype.text = TextShape;\n\n            Origami.text = function(text, x, y, style) {\n                style = normalizeStyle(style);\n\n                var item = {\n                    text: text,\n                    x: x,\n                    y: y,\n                    style: style\n                };\n\n                if ((typeof(item.x) === 'string') && (typeof(item.y) === 'string'))\n                    item = smartCoordinates(item);\n\n                queue('text', item);\n                return this;\n            };\n\n            function ChartLine(config) {\n                var ctx = this.paper.ctx,\n                    width = this.paper.width,\n                    height = this.paper.height;\n\n                var line = getBorderStyleObject(config.line || \"1px solid #000\");\n                var lineVariance = 2;\n\n                var xPadding = 40;\n                var yPadding = 40;\n                var data = [];\n\n                var gridLines = {\n                    vertical: true,\n                    horizontal: true\n                };\n\n                if (config.gridLines) {\n                    if (config.gridLines.vertical === false)\n                        gridLines.vertical = false;\n\n                    if (config.gridLines.horizontal === false)\n                        gridLines.horizontal = false;\n                }\n\n                for (var i = 0; i < config.labels.length; i++) {\n                    data.push({\n                        X: config.labels[i],\n                        Y: config.data[i]\n                    });\n                }\n\n                function getMaxY() {\n                    var max = 0;\n\n                    for (var i = 0; i < data.length; i++) {\n                        if (data[i].Y > max) {\n                            max = data[i].Y;\n                        }\n                    }\n\n                    max += 10 - max % 10;\n                    return max;\n                }\n\n                function getXPixel(val) {\n                    return ((width - xPadding) / data.length) * val + xPadding;\n                }\n\n                function getYPixel(val) {\n                    return height - (((height - yPadding) / getMaxY()) * val) - yPadding;\n                }\n\n                ctx.lineWidth = 0.8;\n                ctx.strokeStyle = '#999';\n                ctx.font = 'normal 12px Helvetica';\n                ctx.fillStyle = '#5e5e5e';\n                ctx.textAlign = \"center\";\n\n                ctx.beginPath();\n                ctx.moveTo(xPadding, yPadding / lineVariance);\n                ctx.lineTo(xPadding, height - yPadding);\n                ctx.lineTo(width - (xPadding / lineVariance), height - yPadding);\n                ctx.stroke();\n\n                // Data\n                ctx.textAlign = \"right\";\n                ctx.textBaseline = \"middle\";\n                for (var i = 0; i < getMaxY(); i += 10) {\n                    if (gridLines.horizontal) {\n                        ctx.beginPath();\n                        ctx.lineWidth = 0.8;\n                        ctx.strokeStyle = '#e7e7e7';\n                        ctx.moveTo(xPadding - 5, getYPixel(i));\n                        ctx.lineTo(width - (xPadding / lineVariance), getYPixel(i));\n                        ctx.stroke();\n                    }\n\n                    ctx.fillText(i, xPadding - 10, getYPixel(i));\n                }\n\n                // Labels\n                ctx.textAlign = \"left\";\n                for (var i = 0; i < data.length; i++) {\n                    if (gridLines.vertical) {\n                        ctx.beginPath();\n                        ctx.lineWidth = 0.8;\n                        ctx.strokeStyle = '#e7e7e7';\n                        ctx.moveTo(getXPixel(i), height - yPadding + 10);\n                        ctx.lineTo(getXPixel(i), yPadding / lineVariance);\n                        ctx.stroke();\n                    }\n\n                    ctx.fillText(data[i].X, getXPixel(i), height - yPadding + 20);\n                }\n\n                ctx.beginPath();\n                ctx.lineWidth = line.borderSize;\n                ctx.setLineDash(line.borderStyle);\n                ctx.strokeStyle = line.borderColor;\n                ctx.moveTo(getXPixel(0), getYPixel(data[0].Y));\n\n                for (var i = 1; i < data.length; i++) {\n                    ctx.lineTo(getXPixel(i), getYPixel(data[i].Y));\n                }\n                ctx.stroke();\n                ctx.setLineDash([]);\n\n                if (config.points) {\n                    ctx.fillStyle = (config.pointsColor) ? config.pointsColor : 'rgb(75,75,75)';\n                    for (var i = 0; i < data.length; i++) {\n                        ctx.beginPath();\n                        ctx.arc(getXPixel(i), getYPixel(data[i].Y), 3, 0, Math.PI * 2, true);\n                        ctx.fill();\n                    }\n                }\n            }\n\n            Screen.prototype.chartLine = ChartLine;\n\n            Origami.chartLine = function(config) {\n                queue('chartLine', config);\n                return this;\n            };\n            // Resource.js\n\n            Origami.background = function(color) {\n                queue('background', {\n                    color: color\n                });\n                return this;\n            };\n\n            Origami.restore = function() {\n                queue('restore');\n                return this;\n            };\n\n            Origami.save = function() {\n                queue('save');\n                return this;\n            };\n\n            Origami.composition = function(globalComposite) {\n                queue('composition', {\n                    globalComposite: globalComposite\n                });\n                return this;\n            };\n\n            Origami.translate = function(x, y) {\n                if (x === undefined || x === null) {\n                    x = 'reset';\n                }\n\n                if (typeof(x) === 'string') {\n                    if (x === 'center') {\n                        x = context.width / 2;\n                        y = context.height / 2;\n                    }\n                    if (x === 'reset') {\n                        x = -context.width / 2;\n                        y = -context.height / 2;\n                    }\n                }\n\n                queue('translate', {\n                    x: x,\n                    y: y\n                });\n                return this;\n            };\n\n            Origami.rotate = function(degrees) {\n                if (typeof(degrees) === 'undefined')\n                    degrees = 'slow';\n\n                if (typeof(degrees) === 'string') {\n                    // Slow\n                    if (degrees === 'slow')\n                        degrees = ((2 * Math.PI) / 60) * new Date().getSeconds() +\n                            ((2 * Math.PI) / 60000) * new Date().getMilliseconds();\n\n                    // Normal\n                    else if (degrees === 'normal')\n                        degrees = ((2 * Math.PI) / 30) * new Date().getSeconds() +\n                            ((2 * Math.PI) / 30000) * new Date().getMilliseconds();\n\n                    // Fast\n                    else if (degrees === 'fast')\n                        degrees = ((2 * Math.PI) / 6) * new Date().getSeconds() +\n                            ((2 * Math.PI) / 6000) * new Date().getMilliseconds();\n                }\n\n                queue('rotate', {\n                    degrees: degrees\n                });\n                return this;\n            };\n\n            Origami.stopRender = function() {\n                window.cancelAnimationFrame(this.paper.frame);\n                this.paper.frame = false;\n            };\n\n            Origami.play = function() {\n                this.paper.frame = 1;\n                return this;\n            };\n\n            Origami.startRender = function(fn) {\n                var self = this;\n                if (self.paper.frame === false)\n                    return;\n\n                self.draw(function() {\n                    self.paper.frame = window.requestAnimationFrame(fn.bind(this));\n                });\n            };\n\n            Origami.scale = function(width, height) {\n                queue('scale', {\n                    width: width,\n                    height: height\n                });\n                return this;\n            };\n\n            Origami.flip = function(type) {\n                queue('flip', {\n                    type: type\n                });\n                return this;\n            };\n\n            Origami.flipEnd = function() {\n                queue('flipEnd');\n                return this;\n            };\n\n            Origami.clear = function() {\n                queue('clear');\n                return this;\n            };\n\n            Origami.on = function(ev, fn) {\n                this.paper.element.addEventListener(ev, fn);\n                return this;\n            };\n\n            var factory = extend(Origami.init.bind(this), Origami);\n\n            // For consistency with CommonJS environments' exports\n            if (  module && module.exports ){\n                module.exports = factory;\n            }\n\n            // For CommonJS with exports, but without module.exports, like Rhino\n            else if (  exports ) {\n                exports.origami = factory;\n            }\n\n            // For browser, export only select globals\n            else if ( typeof window === \"object\" ) {\n                window.origami = extend(Origami.init.bind(Origami), Origami);\n            }\n\n            // Get a reference to the global object\n        }( (function() {\n            return this;\n        })() ));\n    });\n    var origami_2 = origami_1.origami;\n\n    var drawRoundLayers = (functionContext) => {\n        let { data, options, ctx, h, w, Helper, canvasId } = functionContext;\n        let helper = new Helper(ctx);\n\n        let origamiContext = {};\n        let origami = origami_1.bind(origamiContext);\n\n        origami(ctx)\n            .rect(10, 10, 40, 40)\n            .draw();\n\n\n    };\n\n    //options:type,colors,stroke\n    function visualize(data, canvasId, options = {}, frame) {\n        //make a clone of options\n        options = { ...options };\n        //options\n        if (!options.stroke) options.stroke = 1;\n        if (!options.colors) options.colors = [\"#d92027\", \"#ff9234\", \"#ffcd3c\", \"#35d0ba\"];\n\n\n        let canvas = document.getElementById(canvasId);\n\n        if (!canvas) return;\n\n        let ctx = canvas.getContext(\"2d\");\n        let h = canvas.height;\n        let w = canvas.width;\n\n\n\n        ctx.strokeStyle = options.colors[0];\n        ctx.lineWidth = options.stroke;\n\n        let typeMap = {\n            \"bars\": drawBars,\n            \"bars blocks\": drawBarsBlocks,\n            \"big bars\": drawBigBars,\n            \"cubes\": drawCubes,\n            \"dualbars\": drawDualbars,\n            \"dualbars blocks\": drawDualbarsBlocks,\n            \"fireworks\": drawFireworks,\n            \"flower\": drawFlower,\n            \"flower blocks\": drawFlowerBlocks,\n            \"orbs\": drawOrbs,\n            \"ring\": drawRing,\n            \"rings\": drawRings,\n            \"round layers\": drawRoundLayers,\n            \"round wave\": drawRoundWave,\n            \"shine\": drawShine,\n            \"shine rings\": drawShineRings,\n            \"shockwave\": drawShockwave,\n            \"star\": drawStar,\n            \"static\": drawStatic,\n            \"stitches\": drawStitches,\n            \"wave\": drawWave,\n            \"web\": drawWeb\n        };\n\n        let frameRateMap = {\n            \"bars\": 1,\n            \"bars blocks\": 1,\n            \"big bars\": 1,\n            \"cubes\": 1,\n            \"dualbars\": 1,\n            \"dualbars blocks\": 1,\n            \"fireworks\": 1,\n            \"flower\": 1,\n            \"flower blocks\": 1,\n            \"ring\": 1,\n            \"rings\": 1,\n            \"round layers\": 1,\n            \"round wave\": 1,\n            \"orbs\": 1,\n            \"shine\": 1,\n            \"shine rings\": 1,\n            \"shockwave\": 1,\n            \"star\": 1,\n            \"static\": 1,\n            \"stitches\": 1,\n            \"wave\": 1,\n            \"web\": 1\n        };\n\n        const functionContext = {\n            data, options, ctx, h, w, Helper: this.Helper, canvasId\n        };\n\n        if (typeof options.type == \"string\") options.type = [options.type];\n\n        options.type.forEach(type => {\n            //abide by the frame rate\n            if (frame % frameRateMap[type] === 0) {\n                //clear canvas\n                ctx.clearRect(0, 0, w, h);\n                ctx.beginPath();\n\n                typeMap[type](functionContext);\n            }\n        });\n\n    }\n\n    function Helper(ctx) {\n        this.ctx = ctx;\n        this.mainColor = \"black\";\n    }\n\n    Helper.prototype = {\n        __toRadians__(degree) {\n            return (degree * Math.PI) / 180;\n        },\n        __rotatePoint__([pointX, pointY], [originX, originY], degree) {\n            //clockwise\n            let angle = this.__toRadians__(degree);\n            let rotatedX = Math.cos(angle) * (pointX - originX) - Math.sin(angle) * (pointY - originY) + originX;\n            let rotatedY = Math.sin(angle) * (pointX - originX) + Math.cos(angle) * (pointY - originY) + originY;\n\n            return [rotatedX, rotatedY]\n        },\n        mutateData(data, type, extra = null) {\n            if (type === \"mirror\") {\n                let rtn = [];\n\n                for (let i = 0; i < data.length; i += 2) {\n                    rtn.push(data[i]);\n                }\n\n                rtn = [...rtn, ...rtn.reverse()];\n                return rtn\n            }\n\n            if (type === \"shrink\") {\n                //resize array by % of current array\n                if (extra < 1) {\n                    extra = data.length * extra;\n                }\n\n                let rtn = [];\n                let splitAt = Math.floor(data.length / extra);\n\n                for (let i = 1; i <= extra; i++) {\n                    let arraySection = data.slice(i * splitAt, (i * splitAt) + splitAt);\n                    let middle = arraySection[Math.floor(arraySection.length / 2)];\n                    rtn.push(middle);\n                }\n\n                return rtn\n            }\n\n            if (type === \"split\") {\n                let size = Math.floor(data.length / extra);\n                let rtn = [];\n                let temp = [];\n\n                let track = 0;\n                for (let i = 0; i <= size * extra; i++) {\n                    if (track === size) {\n                        rtn.push(temp);\n                        temp = [];\n                        track = 0;\n                    }\n\n                    temp.push(data[i]);\n                    track++;\n                }\n\n                return rtn\n            }\n\n            if (type === \"scale\") {\n                let scalePercent = extra / 255;\n                if (extra <= 3 && extra >= 0) scalePercent = extra;\n                let rtn = data.map(value => value * scalePercent);\n                return rtn\n            }\n\n            if (type === \"organize\") {\n                let rtn = {};\n                rtn.base = data.slice(60, 120);\n                rtn.vocals = data.slice(120, 255);\n                rtn.mids = data.slice(255, 2000);\n                return rtn\n            }\n\n            if (type === \"reverb\") {\n                let rtn = [];\n                data.forEach((val, i) => {\n                    rtn.push(val - (data[i + 1] || 0));\n                });\n                return rtn\n            }\n\n            if (type === \"amp\") {\n                let rtn = [];\n                data.forEach(val => {\n                    rtn.push(val * (extra + 1));\n                });\n                return rtn\n            }\n\n            if (type === \"min\") {\n                let rtn = [];\n                data.forEach(value => {\n                    if (value < extra) value = extra;\n                    rtn.push(value);\n                });\n                return rtn\n            }\n        },\n        getPoints(shape, size, [originX, originY], pointCount, endPoints, options = {}) {\n            let { offset = 0, rotate = 0, customOrigin = [] } = options;\n            let rtn = {\n                start: [],\n                end: []\n            };\n\n            if (shape === \"circle\") {\n\n                let degreePerPoint = 360 / pointCount;\n                let radianPerPoint = this.__toRadians__(degreePerPoint);\n                let radius = size / 2;\n\n                for (let i = 1; i <= pointCount; i++) {\n                    let currentRadian = radianPerPoint * i;\n                    let currentEndPoint = endPoints[i - 1];\n                    let pointOffset = endPoints[i - 1] * (offset / 100);\n\n                    let x = originX + (radius - pointOffset) * Math.cos(currentRadian);\n                    let y = originY + (radius - pointOffset) * Math.sin(currentRadian);\n                    let point1 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n                    rtn.start.push(point1);\n\n                    x = originX + ((radius - pointOffset) + currentEndPoint) * Math.cos(currentRadian);\n                    y = originY + ((radius - pointOffset) + currentEndPoint) * Math.sin(currentRadian);\n                    let point2 = this.__rotatePoint__([x, y], [originX, originY], rotate);\n\n                    rtn.end.push(point2);\n\n                }\n\n                return rtn\n            }\n\n            if (shape === \"line\") {\n                let increment = size / pointCount;\n\n                originX = customOrigin[0] || originX;\n                originY = customOrigin[1] || originY;\n\n                for (let i = 0; i <= pointCount; i++) {\n                    let degree = rotate;\n                    let pointOffset = endPoints[i] * (offset / 100);\n\n                    let startingPoint = this.__rotatePoint__([originX + (i * increment), originY - pointOffset],\n                        [originX, originY], degree);\n                    rtn.start.push(startingPoint);\n\n                    let endingPoint = this.__rotatePoint__([originX + (i * increment), (originY + endPoints[i]) - pointOffset],\n                        [originX, originY], degree);\n                    rtn.end.push(endingPoint);\n                }\n\n                return rtn\n\n            }\n\n        },\n        drawCircle([x, y], diameter, options = {}) {\n            let { color, lineColor = this.ctx.strokeStyle } = options;\n\n            this.ctx.beginPath();\n            this.ctx.arc(x, y, diameter / 2, 0, 2 * Math.PI);\n            this.ctx.strokeStyle = lineColor;\n            this.ctx.stroke();\n            this.ctx.fillStyle = color;\n            if (color) this.ctx.fill();\n        },\n        drawOval([x, y], height, width, options = {}) {\n            let { rotation = 0, color, lineColor = this.ctx.strokeStyle } = options;\n            if (rotation) rotation = this.__toRadians__(rotation);\n\n            this.ctx.beginPath();\n            this.ctx.ellipse(x, y, width, height, rotation, 0, 2 * Math.PI);\n            this.ctx.strokeStyle = lineColor;\n            this.ctx.stroke();\n            this.ctx.fillStyle = color;\n            if (color) this.ctx.fill();\n        },\n        drawSquare([x, y], diameter, options = {}) {\n            this.drawRectangle([x, y], diameter, diameter, options);\n        },\n        drawRectangle([x, y], height, width, options = {}) {\n            let { color, lineColor = this.ctx.strokeStyle, radius = 0, rotate = 0 } = options;\n\n            // if (width < 2 * radius) radius = width / 2;\n            // if (height < 2 * radius) radius = height / 2;\n\n            this.ctx.beginPath();\n            this.ctx.moveTo(x + radius, y);\n            let p1 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n            let p2 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n            this.ctx.arcTo(p1[0], p1[1], p2[0], p2[1], radius);\n\n            let p3 = this.__rotatePoint__([x + width, y + height], [x, y], rotate);\n            let p4 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n            this.ctx.arcTo(p3[0], p3[1], p4[0], p4[1], radius);\n\n            let p5 = this.__rotatePoint__([x, y + height], [x, y], rotate);\n            let p6 = this.__rotatePoint__([x, y], [x, y], rotate);\n            this.ctx.arcTo(p5[0], p5[1], p6[0], p6[1], radius);\n\n            let p7 = this.__rotatePoint__([x, y], [x, y], rotate);\n            let p8 = this.__rotatePoint__([x + width, y], [x, y], rotate);\n            this.ctx.arcTo(p7[0], p7[1], p8[0], p8[1], radius);\n            this.ctx.closePath();\n\n            this.ctx.strokeStyle = lineColor;\n            this.ctx.stroke();\n            this.ctx.fillStyle = color;\n            if (color) this.ctx.fill();\n\n        },\n        drawLine([fromX, fromY], [toX, toY], options = {}) {\n            let { lineColor = this.ctx.strokeStyle } = options;\n\n            this.ctx.beginPath();\n            this.ctx.moveTo(fromX, fromY);\n            this.ctx.lineTo(toX, toY);\n            this.ctx.strokeStyle = lineColor;\n            this.ctx.stroke();\n        },\n        drawPolygon(points, options = {}) {\n            let { color, lineColor = this.ctx.strokeStyle, radius = 0, close = false } = options;\n\n            function getRoundedPoint(x1, y1, x2, y2, radius, first) {\n                let total = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2);\n                let idx = first ? radius / total : (total - radius) / total;\n\n                return [x1 + (idx * (x2 - x1)), y1 + (idx * (y2 - y1))];\n            }\n\n            function getRoundedPoints(pts, radius) {\n                let len = pts.length;\n                let res = new Array(len);\n\n                for (let i2 = 0; i2 < len; i2++) {\n                    let i1 = i2 - 1;\n                    let i3 = i2 + 1;\n\n                    if (i1 < 0) i1 = len - 1;\n                    if (i3 == len) i3 = 0;\n\n                    let p1 = pts[i1];\n                    let p2 = pts[i2];\n                    let p3 = pts[i3];\n\n                    let prevPt = getRoundedPoint(p1[0], p1[1], p2[0], p2[1], radius, false);\n                    let nextPt = getRoundedPoint(p2[0], p2[1], p3[0], p3[1], radius, true);\n                    res[i2] = [prevPt[0], prevPt[1], p2[0], p2[1], nextPt[0], nextPt[1]];\n                }\n                return res;\n            }\n            if (radius > 0) {\n                points = getRoundedPoints(points, radius);\n            }\n\n            let i, pt, len = points.length;\n            for (i = 0; i < len; i++) {\n                pt = points[i];\n                if (i == 0) {\n                    this.ctx.beginPath();\n                    this.ctx.moveTo(pt[0], pt[1]);\n                } else {\n                    this.ctx.lineTo(pt[0], pt[1]);\n                }\n                if (radius > 0) {\n                    this.ctx.quadraticCurveTo(pt[2], pt[3], pt[4], pt[5]);\n                }\n            }\n\n            if (close) this.ctx.closePath();\n            this.ctx.strokeStyle = lineColor;\n            this.ctx.stroke();\n\n            this.ctx.fillStyle = color;\n            if (color) this.ctx.fill();\n        }\n\n    };\n\n    function Wave() {\n        this.current_stream = {};\n        this.sources = {};\n        this.onFileLoad = null;\n        this.activeElements = {};\n        this.activated = false;\n\n        window.AudioContext = window.AudioContext || window.webkitAudioContext;\n    }\n\n    Wave.prototype = {\n        fromElement,\n        fromFile,\n        ...fromStream$1,\n        visualize,\n        Helper\n    };\n\n    return Wave;\n\n}());\n"]},"metadata":{},"sourceType":"script"}