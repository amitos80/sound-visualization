{"ast":null,"code":"var _jsxFileName = \"/Users/amit/Projects/sound-visualization/client/pages/index.js\";\nvar __jsx = React.createElement;\nimport React, { useState, useEffect, useLayoutEffect } from 'react';\nimport FluidAnimation from 'react-fluid-animation';\nimport { ToastContainer, toast } from 'react-toastify'; //import Wave from '../utils/wave-visualizer'\n\nimport { take, fill, sum, floor } from 'lodash';\nconst COMPRESSION_FACTOR = 8; //const { PlayerService } = require('../services')\n\nconst randomWhole = (min, max) => Math.floor(Math.random() * (max - min) + min);\n\nconst randomReal = (min, max) => Math.random() * (max - min) + min;\n\nconst defaultConfig = {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.998,\n  pressureIterations: 19,\n  curl: 8,\n  splatRadius: 0.008\n};\nconst baseConfigs = [{\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.8,\n  pressureIterations: 25,\n  curl: 30,\n  splatRadius: 0.005\n}, {\n  textureDownsample: 2,\n  densityDissipation: 0.9,\n  velocityDissipation: 0.91,\n  pressureDissipation: 1,\n  pressureIterations: 44,\n  curl: 0,\n  splatRadius: 0.0057\n}, {\n  textureDownsample: 0,\n  densityDissipation: 0.92,\n  velocityDissipation: 0.95,\n  pressureDissipation: 0.8,\n  pressureIterations: 10,\n  curl: 20,\n  splatRadius: 0.01\n}, {\n  textureDownsample: 1,\n  densityDissipation: 0.98,\n  velocityDissipation: 0.99,\n  pressureDissipation: 0.998,\n  pressureIterations: 19,\n  curl: 8,\n  splatRadius: 0.008\n}];\n\nfunction rect({\n  id,\n  x,\n  y,\n  width,\n  height,\n  fill = 'gray',\n  stroke = 'skyblue',\n  strokewidth = 2\n}) {\n  return {\n    x,\n    y,\n    id,\n    width,\n    height,\n    fill,\n    stroke,\n    strokewidth\n  };\n}\n\nlet factor = 0.1;\nlet joined = false;\nlet playerService;\nlet wave;\nexport const Home = props => {\n  const {\n    0: selectedIndex,\n    1: setSelectedIndex\n  } = useState(0);\n  const {\n    0: frameNumber,\n    1: setFrameNumber\n  } = useState(0);\n  const {\n    0: animationConfig,\n    1: setAnimationConfig\n  } = useState(baseConfigs);\n  const {\n    0: currentConfig,\n    1: setCurrentConfig\n  } = useState(defaultConfig);\n  const {\n    0: startInterval,\n    1: setStartInterval\n  } = useState();\n  let myRef = /*#__PURE__*/React.createRef();\n\n  const changeStyle = () => {\n    const configs = [...(animationConfig || [])];\n    const newIndex = selectedIndex + 1 > configs.length - 1 ? 0 : selectedIndex + 1;\n    setSelectedIndex(newIndex);\n    toast('style changed');\n  };\n\n  const randomStyle = () => {\n    const configs = [...(animationConfig || [])];\n    configs.push({\n      textureDownsample: randomWhole(1, 3),\n      densityDissipation: randomReal(0.9, 0.99),\n      velocityDissipation: randomReal(0.9, 0.99),\n      pressureDissipation: randomReal(0.1, 0.9),\n      pressureIterations: randomWhole(1, 61),\n      curl: randomWhole(15, 35),\n      splatRadius: randomReal(0.003, 0.007)\n    });\n    const newIndex = configs.length - 1;\n    setSelectedIndex(newIndex);\n    setAnimationConfig(configs);\n    toast('random style');\n  };\n\n  function init() {// if (typeof window !== 'undefined') {\n    //     if (!wave) {\n    //\n    //             if (wave) return\n    //             navigator.mediaDevices\n    //                 .getUserMedia({\n    //                     audio: true,\n    //                 })\n    //                 .then(function (stream) {\n    //                     const w = new Wave()\n    //\n    //                     w.fromStream(stream, 'visual-canvas', {\n    //                         type: 'shine',\n    //                         colors: ['red', 'white', 'blue'],\n    //                     })\n    //\n    //                     wave = w\n    //                     //setInterval(createSampleAnimation, 2400)\n    //                 })\n    //                 .catch(function (err) {\n    //                     console.log(err.message)\n    //                 })\n    //\n    //\n    //     }\n    //\n    //     if (!playerService) {\n    //         playerService = new PlayerService()\n    //     }\n    // }\n  }\n\n  function createSampleAnimation() {\n    var _wave$current_stream, _wave$current_stream2, _wave$current_stream3, _wave$current_stream4;\n\n    if (true) return;\n    console.log(' createSampleAnimation wave ', wave);\n\n    if (!wave) {\n      init();\n      return;\n    }\n\n    console.log('wave?.current_stream?.data -> ', wave === null || wave === void 0 ? void 0 : (_wave$current_stream = wave.current_stream) === null || _wave$current_stream === void 0 ? void 0 : _wave$current_stream.data);\n    if (!(wave !== null && wave !== void 0 && (_wave$current_stream2 = wave.current_stream) !== null && _wave$current_stream2 !== void 0 && (_wave$current_stream3 = _wave$current_stream2.data) !== null && _wave$current_stream3 !== void 0 && _wave$current_stream3.length)) return;\n    console.log(' createSampleAnimation 2 ');\n    const samples = Array.from(wave === null || wave === void 0 ? void 0 : (_wave$current_stream4 = wave.current_stream) === null || _wave$current_stream4 === void 0 ? void 0 : _wave$current_stream4.data);\n    const a1 = samples.splice(0, 50);\n    const a2 = samples.splice(51, 70);\n    const a3 = samples.splice(71, 110);\n    const a4 = samples.splice(111, 333); // const pctValue1 = (sum(a1) / a1.length) / 160 // bass / gain\n    // const pctValue2 = (sum(a2) / a2.length) / 150\n    // const pctValue3 = (sum(a3) / a3.length) / 210\n    // const pctValue4 = (sum(a4) / a4.length ) / 450\n    //console.log(' pctValue1 ', pctValue1, ' pctValue2 ', pctValue2, ' pctValue3 ', pctValue3, ' pctValue4 ', pctValue4 )\n\n    const a = sum(a1) / a1.length / 160; // bass / gain\n\n    const b = sum(a2) / a2.length / 150;\n    const c = sum(a3) / a3.length / 210;\n    const d = sum(a4) / a4.length / 450; //playerService.pointBit({a, b, c, d})\n    // if (!playerService) {\n    //     playerService = new PlayerService()\n    // }\n\n    if (playerService) {\n      console.log('playerService.pointBit a, b, c, d -> ', a, b, c, d); // const clientMessage = new ClientMessage();\n      // clientMessage.setA(a)\n      // clientMessage.setB(b)\n      // clientMessage.setC(c)\n      // clientMessage.setD(d)\n      // playerService.pointBit(clientMessage)\n    }\n  }\n\n  const createNewConfig = () => {\n    let sample = fill(Array(COMPRESSION_FACTOR), 0).map((value, i) => {\n      var _wave$current_stream5, _wave$current_stream6, _wave$current_stream7;\n\n      const sampleLength = wave === null || wave === void 0 ? void 0 : (_wave$current_stream5 = wave.current_stream) === null || _wave$current_stream5 === void 0 ? void 0 : (_wave$current_stream6 = _wave$current_stream5.data) === null || _wave$current_stream6 === void 0 ? void 0 : _wave$current_stream6.length;\n      if (!sampleLength) return 0;\n      const samples = Array.from(wave === null || wave === void 0 ? void 0 : (_wave$current_stream7 = wave.current_stream) === null || _wave$current_stream7 === void 0 ? void 0 : _wave$current_stream7.data);\n      const blockSize = sampleLength / COMPRESSION_FACTOR;\n      return sum(take(samples, floor(i * blockSize, floor(blockSize * (i + 1))))) || 0;\n    });\n    setCurrentConfig({\n      textureDownsample: 1,\n      densityDissipation: sample[0] / 122,\n      // 0.98,\n      velocityDissipation: sample[1] / 91,\n      ///0.99,\n      pressureDissipation: sample[2] / 130,\n      // 0.998,\n      pressureIterations: sample[3] / 23,\n      // 19,\n      curl: sample[4] / 22,\n      // 8,\n      splatRadius: 0.008\n    });\n  };\n\n  const isClient = false && window;\n  useEffect(() => {\n    init();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"fl-container\",\n    style: {\n      overflow: 'hidden',\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      width: '1920px',\n      height: '1080px',\n      display: 'block'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 7\n    }\n  }, __jsx(\"div\", {\n    onClick: changeStyle,\n    style: {\n      cursor: 'pointer',\n      top: '10px',\n      right: '10px',\n      zIndex: 9,\n      position: 'absolute',\n      background: 'white',\n      width: '40px',\n      height: '40px',\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 11\n    }\n  }), __jsx(\"div\", {\n    onClick: randomStyle,\n    style: {\n      cursor: 'pointer',\n      top: '10px',\n      left: '10px',\n      zIndex: 9,\n      position: 'absolute',\n      background: 'purple',\n      width: '40px',\n      height: '40px',\n      opacity: 0.5\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 11\n    }\n  }), __jsx(FluidAnimation, {\n    style: {\n      overflow: 'hidden',\n      top: '0',\n      left: '0',\n      position: 'absolute',\n      width: '1920px',\n      height: '1080px',\n      display: 'block'\n    },\n    ref: element => myRef = element,\n    className: \"anim\",\n    maxWidth: \"1920px\",\n    width: \"1920px\",\n    height: \"1080px\",\n    config: currentConfig,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 11\n    }\n  }), __jsx(ToastContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 11\n    }\n  }));\n}; //<div draggable=\"true\" className=\"pointb\" style={{zIndex: 0, position: 'absolute', background: 'red', top: '200px', left: '90px', width: '50px', height: '50px' }} />\n\nexport default Home;","map":{"version":3,"sources":["/Users/amit/Projects/sound-visualization/client/pages/index.js"],"names":["React","useState","useEffect","useLayoutEffect","FluidAnimation","ToastContainer","toast","take","fill","sum","floor","COMPRESSION_FACTOR","randomWhole","min","max","Math","random","randomReal","defaultConfig","textureDownsample","densityDissipation","velocityDissipation","pressureDissipation","pressureIterations","curl","splatRadius","baseConfigs","rect","id","x","y","width","height","stroke","strokewidth","factor","joined","playerService","wave","Home","props","selectedIndex","setSelectedIndex","frameNumber","setFrameNumber","animationConfig","setAnimationConfig","currentConfig","setCurrentConfig","startInterval","setStartInterval","myRef","createRef","changeStyle","configs","newIndex","length","randomStyle","push","init","createSampleAnimation","console","log","current_stream","data","samples","Array","from","a1","splice","a2","a3","a4","a","b","c","d","createNewConfig","sample","map","value","i","sampleLength","blockSize","isClient","window","overflow","top","left","position","display","cursor","right","zIndex","background","opacity","element"],"mappings":"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","sourcesContent":["import React, {useState, useEffect, useLayoutEffect} from 'react'\nimport FluidAnimation from 'react-fluid-animation'\nimport {ToastContainer, toast} from 'react-toastify'\n//import Wave from '../utils/wave-visualizer'\nimport { take, fill, sum, floor } from 'lodash'\nconst COMPRESSION_FACTOR = 8\n\n//const { PlayerService } = require('../services')\n\nconst randomWhole = (min, max) => Math.floor(Math.random() * (max - min) + min)\nconst randomReal = (min, max) => Math.random() * (max - min) + min\n\nconst defaultConfig = {\n    textureDownsample: 1,\n    densityDissipation: 0.98,\n    velocityDissipation: 0.99,\n    pressureDissipation: 0.998,\n    pressureIterations: 19,\n    curl: 8,\n    splatRadius: 0.008,\n}\n\nconst baseConfigs = [\n  {\n    textureDownsample: 1,\n    densityDissipation: 0.98,\n    velocityDissipation: 0.99,\n    pressureDissipation: 0.8,\n    pressureIterations: 25,\n    curl: 30,\n    splatRadius: 0.005,\n  },\n  {\n    textureDownsample: 2,\n    densityDissipation: 0.9,\n    velocityDissipation: 0.91,\n    pressureDissipation: 1,\n    pressureIterations: 44,\n    curl: 0,\n    splatRadius: 0.0057,\n  },\n  {\n    textureDownsample: 0,\n    densityDissipation: 0.92,\n    velocityDissipation: 0.95,\n    pressureDissipation: 0.8,\n    pressureIterations: 10,\n    curl: 20,\n    splatRadius: 0.01,\n  },\n  {\n    textureDownsample: 1,\n    densityDissipation: 0.98,\n    velocityDissipation: 0.99,\n    pressureDissipation: 0.998,\n    pressureIterations: 19,\n    curl: 8,\n    splatRadius: 0.008,\n  },\n]\n\nfunction rect({id, x, y, width, height, fill = 'gray', stroke = 'skyblue', strokewidth = 2}) {\n    return {\n        x, y, id, width, height, fill, stroke, strokewidth,\n    }\n}\n\nlet factor = 0.1\nlet joined = false\nlet playerService;\nlet wave;\nexport const Home = (props) => {\n  const [selectedIndex, setSelectedIndex] = useState(0)\n  const [frameNumber, setFrameNumber] = useState(0)\n  const [animationConfig, setAnimationConfig] = useState(baseConfigs)\n  const [currentConfig, setCurrentConfig] = useState(defaultConfig)\n    const [startInterval, setStartInterval] = useState()\n  let myRef = React.createRef();\n\n\n  const changeStyle = () => {\n      const configs = [...(animationConfig || [])]\n      const newIndex = selectedIndex + 1 > configs.length -1 ? 0 : selectedIndex + 1;\n        setSelectedIndex(\n          newIndex\n       )\n\n      toast('style changed');\n  }\n\n  const randomStyle = () => {\n    const configs = [...(animationConfig || [])]\n    configs.push({\n        textureDownsample: randomWhole(1, 3),\n        densityDissipation: randomReal(0.9, 0.99),\n        velocityDissipation: randomReal(0.9, 0.99),\n        pressureDissipation: randomReal(0.1, 0.9),\n        pressureIterations: randomWhole(1, 61),\n        curl: randomWhole(15, 35),\n        splatRadius: randomReal(0.003, 0.007),\n    })\n    const newIndex = configs.length -1;\n    setSelectedIndex(\n        newIndex\n    )\n    setAnimationConfig(configs)\n    toast('random style');\n  }\n\n  function init() {\n      // if (typeof window !== 'undefined') {\n      //     if (!wave) {\n      //\n      //             if (wave) return\n      //             navigator.mediaDevices\n      //                 .getUserMedia({\n      //                     audio: true,\n      //                 })\n      //                 .then(function (stream) {\n      //                     const w = new Wave()\n      //\n      //                     w.fromStream(stream, 'visual-canvas', {\n      //                         type: 'shine',\n      //                         colors: ['red', 'white', 'blue'],\n      //                     })\n      //\n      //                     wave = w\n      //                     //setInterval(createSampleAnimation, 2400)\n      //                 })\n      //                 .catch(function (err) {\n      //                     console.log(err.message)\n      //                 })\n      //\n      //\n      //     }\n      //\n      //     if (!playerService) {\n      //         playerService = new PlayerService()\n      //     }\n      // }\n  }\n\n  function createSampleAnimation() {\n      if (typeof window === 'undefined') return\n      console.log(' createSampleAnimation wave ', wave)\n\n\n      if (!wave) {\n          init()\n          return\n      }\n\n\n      console.log('wave?.current_stream?.data -> ', wave?.current_stream?.data);\n      if (!wave?.current_stream?.data?.length) return\n\n      console.log(' createSampleAnimation 2 ')\n      const samples = Array.from(wave?.current_stream?.data)\n      const a1 = samples.splice(0, 50)\n      const a2 = samples.splice( 51, 70)\n      const a3 = samples.splice( 71, 110)\n      const a4 = samples.splice( 111, 333)\n\n      // const pctValue1 = (sum(a1) / a1.length) / 160 // bass / gain\n      // const pctValue2 = (sum(a2) / a2.length) / 150\n      // const pctValue3 = (sum(a3) / a3.length) / 210\n      // const pctValue4 = (sum(a4) / a4.length ) / 450\n      //console.log(' pctValue1 ', pctValue1, ' pctValue2 ', pctValue2, ' pctValue3 ', pctValue3, ' pctValue4 ', pctValue4 )\n\n       const a = (sum(a1) / a1.length) / 160 // bass / gain\n       const b = (sum(a2) / a2.length) / 150\n       const c = (sum(a3) / a3.length) / 210\n       const d = (sum(a4) / a4.length ) / 450\n      //playerService.pointBit({a, b, c, d})\n      // if (!playerService) {\n      //     playerService = new PlayerService()\n      // }\n\n      if (playerService) {\n          console.log('playerService.pointBit a, b, c, d -> ', a, b, c, d);\n          // const clientMessage = new ClientMessage();\n          // clientMessage.setA(a)\n          // clientMessage.setB(b)\n          // clientMessage.setC(c)\n          // clientMessage.setD(d)\n          // playerService.pointBit(clientMessage)\n      }\n  }\n\n  const createNewConfig = () => {\n      let sample = fill(Array(COMPRESSION_FACTOR), 0).map((value, i) => {\n          const sampleLength = wave?.current_stream?.data?.length\n          if (!sampleLength) return 0\n          const samples = Array.from(wave?.current_stream?.data)\n          const blockSize = sampleLength / COMPRESSION_FACTOR\n          return sum(take(samples,\n              floor(i * blockSize,\n                  floor(blockSize * (i + 1))))\n          ) || 0\n      })\n\n      setCurrentConfig({\n          textureDownsample: 1,\n          densityDissipation: sample[0] /122, // 0.98,\n          velocityDissipation: sample[1] / 91, ///0.99,\n          pressureDissipation: sample[2] / 130, // 0.998,\n          pressureIterations: sample[3] / 23, // 19,\n          curl: sample[4] / 22, // 8,\n          splatRadius: 0.008,\n      })\n  }\n\n  const isClient = typeof window !== 'undefined' && window\n  useEffect(() => {\n      init()\n\n  }, [])\n\n\n  return (\n      <div className=\"fl-container\"\n          style={{\n          overflow: 'hidden',\n          top: '0',\n          left: '0',\n          position: 'absolute',\n          width: '1920px',\n          height: '1080px',\n          display: 'block'}}>\n\n          <div onClick={changeStyle} style={{cursor: 'pointer', top: '10px', right: '10px', zIndex: 9, position: 'absolute', background: 'white', width: '40px', height: '40px', opacity: 0.5 }} />\n          <div onClick={randomStyle} style={{cursor: 'pointer', top: '10px', left: '10px', zIndex: 9, position: 'absolute', background: 'purple', width: '40px', height: '40px', opacity: 0.5 }} />\n\n          <FluidAnimation\n              style={{\n                  overflow: 'hidden',\n                  top: '0',\n                  left: '0',\n                  position: 'absolute',\n                  width: '1920px',\n                  height: '1080px',\n                  display: 'block'}}\n              ref={element => myRef = element}\n              className='anim'\n              maxWidth='1920px'\n              width='1920px'\n              height=\"1080px\"\n              config={currentConfig}\n          />\n          <ToastContainer/>\n      </div>\n  )\n}\n\n//<div draggable=\"true\" className=\"pointb\" style={{zIndex: 0, position: 'absolute', background: 'red', top: '200px', left: '90px', width: '50px', height: '50px' }} />\n\nexport default Home\n"]},"metadata":{},"sourceType":"module"}