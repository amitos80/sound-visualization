{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\n//import {RpcError as GrpcWebError} from 'grpc-web';\nimport { PlayerServiceClient } from '../proto/player_grpc_web_pb';\nimport { ClientMessage } from '../proto/player_pb';\nvar client;\nexport function PlayerService() {\n  if (false) return;\n\n  if (!client) {\n    client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n} // PlayerService.prototype.join = function join(params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA('542')\n//     clientMessage.setB('234')\n//     clientMessage.setC('1252')\n//     clientMessage.setD('2345')\n//     const stream = client.pointBit(clientMessage);\n//     stream.on('data', (message: ServerMessage) => {\n//         console.log(`client received$ ${message}`)\n//     });\n// }\n//\n// PlayerService.prototype.send = function (params:ClientMessage) {\n//     if (!client) {\n//         client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n//     }\n//     const clientMessage = new ClientMessage();\n//     clientMessage.setA(params.getA());\n//     clientMessage.setB(params.getB());\n//     clientMessage.setC(params.getC());\n//     clientMessage.setD(params.getD());\n//     client.pointBit(\n//         clientMessage,\n//         undefined,\n//         (err: any, response: ServerMessage) => {\n//             if (err) {\n//                 console.error(err);\n//             } else {\n//                 console.log('response', response.toObject());\n//                 (document.getElementById('message') as HTMLFormElement)!.value = '';\n//             }\n//         })\n// }\n\nPlayerService.prototype.pointBit = function (ctx) {\n  if (!client) {\n    client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\n  }\n\n  console.log('PlayerService.prototype.pointBit ctx => ', ctx);\n\n  var _ctx$array = _slicedToArray(ctx.array, 4),\n      a = _ctx$array[0],\n      b = _ctx$array[1],\n      c = _ctx$array[2],\n      d = _ctx$array[3];\n\n  var clientMessage = new ClientMessage();\n  clientMessage.setA(a);\n  clientMessage.setB(b);\n  clientMessage.setC(c);\n  clientMessage.setD(d);\n  client.pointBit(clientMessage, undefined, function (err, response) {\n    if (err) {\n      console.error(err);\n    } else {\n      console.log('response', response.toObject());\n      document.getElementById('message').value = '';\n    }\n  });\n};\n\nexport default PlayerService;","map":null,"metadata":{},"sourceType":"module"}