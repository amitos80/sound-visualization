{"ast":null,"code":"import { PlayerServiceClient } from '../../../proto/player_grpc_web_pb';\nimport { ClientMessage } from '../../../proto/player_pb'; //import { ProtoGrpcType } from '../../../proto/player.proto';\n// const host = '0.0.0.0:50051';\n// const packageDefinition = protoLoader.loadSync('./proto/example.proto');\n// const proto = grpc.loadPackageDefinition(\n//     packageDefinition\n// ) as any as unknown;\n// //as unknown as ProtoGrpcType;\n// // @ts-ignore\n// const client = new proto.player.PlayerService(\n//     host,\n//     grpc.credentials.createInsecure()\n// );\n\nconst client = new PlayerServiceClient('http://' + window.location.hostname + ':50051');\nexport function join() {\n  const clientMessage = new ClientMessage();\n  clientMessage.setA('542');\n  clientMessage.setB('234');\n  clientMessage.setC('1252');\n  clientMessage.setD('2345');\n  const stream = client.join(clientMessage);\n  stream.on('data', message => {\n    console.log(`client received$ ${message}`);\n  });\n}\nexport function send(params) {\n  const clientMessage = new ClientMessage();\n  clientMessage.setA(params.getA());\n  clientMessage.setB(params.getB());\n  clientMessage.setC(params.getC());\n  clientMessage.setD(params.getD());\n  client.send(clientMessage, undefined, (err, response) => {\n    if (err) {\n      console.error(err);\n    } else {\n      console.log('response', response.toObject());\n      document.getElementById('message').value = '';\n    }\n  });\n}\nexport const PlayerService = {\n  join,\n  send\n};","map":null,"metadata":{},"sourceType":"module"}